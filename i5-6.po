#
# NuINu <don't@send.my>, 2021.
#
#. extracted from in_1/i5-6.html
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-23 18:56+0300\n"
"PO-Revision-Date: 2021-11-17 14:15+0300\n"
"Last-Translator: NuINu <don't@send.my>\n"
"Language-Team: Russian <don't@send.my>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Gtranslator 2.91.7\n"
"Plural-Forms: nplurals=5; plural=n==1 ? 0 : n==2 ? 1 : n<7 ? 2 : n<11 ? 3 : "
"4;\n"

#: in_1/i5-6.html:3
msgid ""
"<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://"
"www.w3.org/TR/html4/loose.dtd\">\n"
"<html><head><meta http-equiv=\"content-type\" content=\"text/html; "
"charset=UTF-8\"><meta name=\"viewport\" content=\"width=device-width, "
"initial-scale=0.8\"><title>Intermezzo 5: The Cost of Computation</"
"title><link rel=\"stylesheet\" type=\"text/css\" href=\"i5-6_files/scribble."
"css\" title=\"default\"><link rel=\"stylesheet\" type=\"text/css\" href="
"\"i5-6_files/shared.css\" title=\"default\"><link rel=\"stylesheet\" type="
"\"text/css\" href=\"i5-6_files/racket.css\" title=\"default\"><link rel="
"\"stylesheet\" type=\"text/css\" href=\"i5-6_files/figure.css\" title="
"\"default\"><link rel=\"stylesheet\" type=\"text/css\" href=\"i5-6_files/"
"manual-style.css\" title=\"default\"><link rel=\"stylesheet\" type=\"text/css"
"\" href=\"i5-6_files/manual-racket.css\" title=\"default\"><script type="
"\"text/javascript\" src=\"i5-6_files/scribble-common.js\"></script><script "
"type=\"text/javascript\" src=\"i5-6_files/figure.js\"></script><script type="
"\"text/javascript\" src=\"i5-6_files/manual-racket.js\"></script><!--[if IE "
"6]><style type=\"text/css\">.SIEHidden { overflow: hidden; }</style><!"
"[endif]--></head><body id=\"scribble-racket-lang-org\"><div class=\"tocset"
"\"><div class=\"tocview\"><div class=\"tocviewlist tocviewlisttopspace"
"\"><div class=\"tocviewtitle\"><table cellspacing=\"0\" cellpadding="
"\"0\"><tbody><tr><td style=\"width: 1em;\"><a href=\"javascript:void(0);\" "
"title=\"Expand/Collapse\" class=\"tocviewtoggle\" "
"onclick='TocviewToggle(this,\"tocview_0\");'>▼</a></td><td></td><td><a href="
"\"index.html\" class=\"tocviewlink\" data-pltdoc=\"x\">How to Design "
"Programs, Second Edition</a></td></tr></tbody></table></div><div class="
"\"tocviewsublisttop\" style=\"display: block;\" id=\"tocview_0\"><table "
"cellspacing=\"0\" cellpadding=\"0\"><tbody><tr><td align=\"right\"></"
"td><td><a href=\"part_preface.html\" class=\"tocviewlink\" data-pltdoc=\"x"
"\">Preface</a></td></tr><tr><td align=\"right\"></td><td><a href="
"\"part_prologue.html\" class=\"tocviewlink\" data-pltdoc=\"x\">Prologue:"
"<span class=\"mywbr\"> &nbsp;</span> How to Program</a></td></tr><tr><td "
"align=\"right\">I&nbsp;</td><td><a href=\"part_one.html\" class=\"tocviewlink"
"\" data-pltdoc=\"x\">Fixed Size Data</a></td></tr><tr><td align=\"right\"></"
"td><td><a href=\"i1-2.html\" class=\"tocviewlink\" data-pltdoc=\"x"
"\">Intermezzo 1: Beginning Student Language</a></td></tr><tr><td align="
"\"right\">II&nbsp;</td><td><a href=\"part_two.html\" class=\"tocviewlink\" "
"data-pltdoc=\"x\">Arbitrarily Large Data</a></td></tr><tr><td align=\"right"
"\"></td><td><a href=\"i2-3.html\" class=\"tocviewlink\" data-pltdoc=\"x"
"\">Intermezzo 2: Quote, Unquote</a></td></tr><tr><td align=\"right"
"\">III&nbsp;</td><td><a href=\"part_three.html\" class=\"tocviewlink\" data-"
"pltdoc=\"x\">Abstraction</a></td></tr><tr><td align=\"right\"></td><td><a "
"href=\"i3-4.html\" class=\"tocviewlink\" data-pltdoc=\"x\">Intermezzo 3: "
"Scope and Abstraction</a></td></tr><tr><td align=\"right\">IV&nbsp;</"
"td><td><a href=\"part_four.html\" class=\"tocviewlink\" data-pltdoc=\"x"
"\">Intertwined Data</a></td></tr><tr><td align=\"right\"></td><td><a href="
"\"i4-5.html\" class=\"tocviewlink\" data-pltdoc=\"x\">Intermezzo 4: The "
"Nature of Numbers</a></td></tr><tr><td align=\"right\">V&nbsp;</td><td><a "
"href=\"part_five.html\" class=\"tocviewlink\" data-pltdoc=\"x\">Generative "
"Recursion</a></td></tr><tr><td align=\"right\"></td><td><a href=\"\" class="
"\"tocviewselflink\" data-pltdoc=\"x\">Intermezzo 5: The Cost of Computation</"
"a></td></tr><tr><td align=\"right\">VI&nbsp;</td><td><a href=\"part_six.html"
"\" class=\"tocviewlink\" data-pltdoc=\"x\">Accumulators</a></td></tr><tr><td "
"align=\"right\"></td><td><a href=\"part_epilogue.html\" class=\"tocviewlink"
"\" data-pltdoc=\"x\">Epilogue:<span class=\"mywbr\"> &nbsp;</span> Moving "
"On</a></td></tr></tbody></table></div></div><div class=\"tocviewlist"
"\"><table cellspacing=\"0\" cellpadding=\"0\"><tbody><tr><td style=\"width: "
"1em;\"><a href=\"javascript:void(0);\" title=\"Expand/Collapse\" class="
"\"tocviewtoggle\" onclick='TocviewToggle(this,\"tocview_1\");'>►</a></"
"td><td></td><td><a href=\"\" class=\"tocviewselflink\" data-pltdoc=\"x"
"\">Intermezzo 5: The Cost of Computation</a></td></tr></tbody></table><div "
"class=\"tocviewsublistbottom\" style=\"display: none;\" id="
"\"tocview_1\"><table cellspacing=\"0\" cellpadding=\"0\"><tbody><tr><td "
"align=\"right\"></td><td><a href=\"#%28part._.Concrete_.Time__.Abstract_.Time"
"%29\" class=\"tocviewlink\" data-pltdoc=\"x\">Concrete Time, Abstract Time</"
"a></td></tr><tr><td align=\"right\"></td><td><a href=\"#%28part._.The_."
"Definition_of__.On_the_.Order_.Of_%29\" class=\"tocviewlink\" data-pltdoc=\"x"
"\">The Definition of “On the Order Of”</a></td></tr><tr><td align=\"right"
"\"></td><td><a href=\"#%28part._.Why_.Do_.Programs_.Use_.Predicates_and_."
"Selectors_%29\" class=\"tocviewlink\" data-pltdoc=\"x\">Why Do Programs Use "
"Predicates and Selectors?</a></td></tr><tr><td align=\"right\"></td><td><a "
"href=\"#%28part._i5-6-fake%29\" class=\"tocviewlink\" data-pltdoc=\"x\"></"
"a></td></tr></tbody></table></div></div></div></div><div class=\"maincolumn"
"\"><div class=\"main\"><div class=\"versionbox\"><span class=\"version"
"\">8.0.0.10</span></div><div class=\"navsettop\"><span class=\"navleft"
"\"><div class=\"nosearchform\"></div>&nbsp;&nbsp;</span><span class="
"\"navright\">&nbsp;&nbsp;<a href=\"part_five.html\" title=\"backward to "
"&quot;V Generative Recursion&quot;\" data-pltdoc=\"x\">← prev</a>&nbsp;&nbsp;"
"<a href=\"index.html\" title=\"up to &quot;How to Design Programs, Second "
"Edition&quot;\" data-pltdoc=\"x\">up</a>&nbsp;&nbsp;<a href=\"part_six.html"
"\" title=\"forward to &quot;VI Accumulators&quot;\" data-pltdoc=\"x\">next "
"→</a></span>&nbsp;</div><h3><a name=\"(part._i5-6)\"></a>Intermezzo 5: The "
"Cost of Computation</h3><table cellspacing=\"0\" cellpadding="
"\"0\"><tbody><tr><td>"
msgstr ""
"<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://"
"www.w3.org/TR/html4/loose.dtd\">\n"
"<html><head><meta http-equiv=\"content-type\" content=\"text/html; "
"charset=UTF-8\"><meta name=\"viewport\" content=\"width=device-width, "
"initial-scale=0.8\"><title>Intermezzo 5: The Cost of Computation</"
"title><link rel=\"stylesheet\" type=\"text/css\" href=\"i5-6_files/scribble."
"css\" title=\"default\"><link rel=\"stylesheet\" type=\"text/css\" href="
"\"i5-6_files/shared.css\" title=\"default\"><link rel=\"stylesheet\" type="
"\"text/css\" href=\"i5-6_files/racket.css\" title=\"default\"><link rel="
"\"stylesheet\" type=\"text/css\" href=\"i5-6_files/figure.css\" title="
"\"default\"><link rel=\"stylesheet\" type=\"text/css\" href=\"i5-6_files/"
"manual-style.css\" title=\"default\"><link rel=\"stylesheet\" type=\"text/css"
"\" href=\"i5-6_files/manual-racket.css\" title=\"default\"><script type="
"\"text/javascript\" src=\"i5-6_files/scribble-common.js\"></script><script "
"type=\"text/javascript\" src=\"i5-6_files/figure.js\"></script><script type="
"\"text/javascript\" src=\"i5-6_files/manual-racket.js\"></script><!--[if IE "
"6]><style type=\"text/css\">.SIEHidden { overflow: hidden; }</style><!"
"[endif]--></head><body id=\"scribble-racket-lang-org\"><div class=\"tocset"
"\"><div class=\"tocview\"><div class=\"tocviewlist tocviewlisttopspace"
"\"><div class=\"tocviewtitle\"><table cellspacing=\"0\" cellpadding="
"\"0\"><tbody><tr><td style=\"width: 1em;\"><a href=\"javascript:void(0);\" "
"title=\"Expand/Collapse\" class=\"tocviewtoggle\" "
"onclick='TocviewToggle(this,\"tocview_0\");'>▼</a></td><td></td><td><a href="
"\"index.html\" class=\"tocviewlink\" data-pltdoc=\"x\">How to Design "
"Programs, Second Edition</a></td></tr></tbody></table></div><div class="
"\"tocviewsublisttop\" style=\"display: block;\" id=\"tocview_0\"><table "
"cellspacing=\"0\" cellpadding=\"0\"><tbody><tr><td align=\"right\"></"
"td><td><a href=\"part_preface.html\" class=\"tocviewlink\" data-pltdoc=\"x"
"\">Preface</a></td></tr><tr><td align=\"right\"></td><td><a href="
"\"part_prologue.html\" class=\"tocviewlink\" data-pltdoc=\"x\">Prologue:"
"<span class=\"mywbr\"> &nbsp;</span> How to Program</a></td></tr><tr><td "
"align=\"right\">I&nbsp;</td><td><a href=\"part_one.html\" class=\"tocviewlink"
"\" data-pltdoc=\"x\">Fixed Size Data</a></td></tr><tr><td align=\"right\"></"
"td><td><a href=\"i1-2.html\" class=\"tocviewlink\" data-pltdoc=\"x"
"\">Intermezzo 1: Beginning Student Language</a></td></tr><tr><td align="
"\"right\">II&nbsp;</td><td><a href=\"part_two.html\" class=\"tocviewlink\" "
"data-pltdoc=\"x\">Arbitrarily Large Data</a></td></tr><tr><td align=\"right"
"\"></td><td><a href=\"i2-3.html\" class=\"tocviewlink\" data-pltdoc=\"x"
"\">Intermezzo 2: Quote, Unquote</a></td></tr><tr><td align=\"right"
"\">III&nbsp;</td><td><a href=\"part_three.html\" class=\"tocviewlink\" data-"
"pltdoc=\"x\">Abstraction</a></td></tr><tr><td align=\"right\"></td><td><a "
"href=\"i3-4.html\" class=\"tocviewlink\" data-pltdoc=\"x\">Intermezzo 3: "
"Scope and Abstraction</a></td></tr><tr><td align=\"right\">IV&nbsp;</"
"td><td><a href=\"part_four.html\" class=\"tocviewlink\" data-pltdoc=\"x"
"\">Intertwined Data</a></td></tr><tr><td align=\"right\"></td><td><a href="
"\"i4-5.html\" class=\"tocviewlink\" data-pltdoc=\"x\">Intermezzo 4: The "
"Nature of Numbers</a></td></tr><tr><td align=\"right\">V&nbsp;</td><td><a "
"href=\"part_five.html\" class=\"tocviewlink\" data-pltdoc=\"x\">Generative "
"Recursion</a></td></tr><tr><td align=\"right\"></td><td><a href=\"\" class="
"\"tocviewselflink\" data-pltdoc=\"x\">Intermezzo 5: The Cost of Computation</"
"a></td></tr><tr><td align=\"right\">VI&nbsp;</td><td><a href=\"part_six.html"
"\" class=\"tocviewlink\" data-pltdoc=\"x\">Accumulators</a></td></tr><tr><td "
"align=\"right\"></td><td><a href=\"part_epilogue.html\" class=\"tocviewlink"
"\" data-pltdoc=\"x\">Epilogue:<span class=\"mywbr\"> &nbsp;</span> Moving "
"On</a></td></tr></tbody></table></div></div><div class=\"tocviewlist"
"\"><table cellspacing=\"0\" cellpadding=\"0\"><tbody><tr><td style=\"width: "
"1em;\"><a href=\"javascript:void(0);\" title=\"Expand/Collapse\" class="
"\"tocviewtoggle\" onclick='TocviewToggle(this,\"tocview_1\");'>►</a></"
"td><td></td><td><a href=\"\" class=\"tocviewselflink\" data-pltdoc=\"x"
"\">Intermezzo 5: The Cost of Computation</a></td></tr></tbody></table><div "
"class=\"tocviewsublistbottom\" style=\"display: none;\" id="
"\"tocview_1\"><table cellspacing=\"0\" cellpadding=\"0\"><tbody><tr><td "
"align=\"right\"></td><td><a href=\"#%28part._.Concrete_.Time__.Abstract_.Time"
"%29\" class=\"tocviewlink\" data-pltdoc=\"x\">Concrete Time, Abstract Time</"
"a></td></tr><tr><td align=\"right\"></td><td><a href=\"#%28part._.The_."
"Definition_of__.On_the_.Order_.Of_%29\" class=\"tocviewlink\" data-pltdoc=\"x"
"\">The Definition of “On the Order Of”</a></td></tr><tr><td align=\"right"
"\"></td><td><a href=\"#%28part._.Why_.Do_.Programs_.Use_.Predicates_and_."
"Selectors_%29\" class=\"tocviewlink\" data-pltdoc=\"x\">Why Do Programs Use "
"Predicates and Selectors?</a></td></tr><tr><td align=\"right\"></td><td><a "
"href=\"#%28part._i5-6-fake%29\" class=\"tocviewlink\" data-pltdoc=\"x\"></"
"a></td></tr></tbody></table></div></div></div></div><div class=\"maincolumn"
"\"><div class=\"main\"><div class=\"versionbox\"><span class=\"version"
"\">8.0.0.10</span></div><div class=\"navsettop\"><span class=\"navleft"
"\"><div class=\"nosearchform\"></div>&nbsp;&nbsp;</span><span class="
"\"navright\">&nbsp;&nbsp;<a href=\"part_five.html\" title=\"backward to "
"&quot;V Generative Recursion&quot;\" data-pltdoc=\"x\">← prev</a>&nbsp;&nbsp;"
"<a href=\"index.html\" title=\"up to &quot;How to Design Programs, Second "
"Edition&quot;\" data-pltdoc=\"x\">up</a>&nbsp;&nbsp;<a href=\"part_six.html"
"\" title=\"forward to &quot;VI Accumulators&quot;\" data-pltdoc=\"x\">next "
"→</a></span>&nbsp;</div><h3><a name=\"(part._i5-6)\"></a>Интермеццо 5: "
"Стоимость вычислений</h3><table cellspacing=\"0\" cellpadding="
"\"0\"><tbody><tr><td>"

#: in_1/i5-6.html:5
msgid ""
"<p><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><a href=\"#%28part."
"_.Concrete_.Time__.Abstract_.Time%29\" class=\"toclink\" data-pltdoc=\"x"
"\">Concrete Time, Abstract Time</a></p>"
msgstr ""
"<p><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><a href=\"#%28part."
"_.Concrete_.Time__.Abstract_.Time%29\" class=\"toclink\" data-pltdoc=\"x\"> "
"Конкретное время, абстрактное время</a></p>"

#: in_1/i5-6.html:7
msgctxt "in_1/i5-6.html:7"
msgid "</td></tr><tr><td>"
msgstr ""

#: in_1/i5-6.html:9
msgid ""
"<p><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><a href=\"#%28part."
"_.The_.Definition_of__.On_the_.Order_.Of_%29\" class=\"toclink\" data-pltdoc="
"\"x\">The Definition of “On the Order Of”</a></p>"
msgstr ""
"<p><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><a href=\"#%28part."
"_.The_.Definition_of__.On_the_.Order_.Of_%29\" class=\"toclink\" data-pltdoc="
"\"x\">Определение «в порядке»</a></p>"

#: in_1/i5-6.html:11
msgctxt "in_1/i5-6.html:11"
msgid "</td></tr><tr><td>"
msgstr ""

#: in_1/i5-6.html:13
msgid ""
"<p><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><a href=\"#%28part."
"_.Why_.Do_.Programs_.Use_.Predicates_and_.Selectors_%29\" class=\"toclink\" "
"data-pltdoc=\"x\">Why Do Programs Use Predicates and Selectors?</a></p>"
msgstr ""
"<p><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><a href=\"#%28part."
"_.Why_.Do_.Programs_.Use_.Predicates_and_.Selectors_%29\" class=\"toclink\" "
"data-pltdoc=\"x\"> Почему программы используют предикаты и селекторы?</a></p>"

#: in_1/i5-6.html:15
msgctxt "in_1/i5-6.html:15"
msgid "</td></tr><tr><td>"
msgstr ""

#: in_1/i5-6.html:17
msgid ""
"<p><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><a href=\"#%28part."
"_i5-6-fake%29\" class=\"toclink\" data-pltdoc=\"x\"></a></p>"
msgstr ""

#: in_1/i5-6.html:19
msgid "</td></tr></tbody></table>"
msgstr ""

#: in_1/i5-6.html:21
msgctxt "in_1/i5-6.html:21"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:26
msgid ""
"<div class=\"SIntrapara\">What do you know about program <span class=\"RktSym"
"\">f</span> once the following tests\n"
" succeed:\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCodeFlow\"><table class="
"\"RktBlk\" cellspacing=\"0\" cellpadding=\"0\"><tbody><tr><td><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._check-expect%29%29\" class=\"RktStxLink\" data-"
"pltdoc=\"x\">check-expect</a></span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktPn\">(</span><span class=\"RktSym\">f</span><span "
"class=\"hspace\">&nbsp;</span><span class=\"RktVal\">0</span><span class="
"\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal"
"\">0</span><span class=\"RktPn\">)</span></td></tr><tr><td><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._check-expect%29%29\" class=\"RktStxLink\" data-"
"pltdoc=\"x\">check-expect</a></span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktPn\">(</span><span class=\"RktSym\">f</span><span "
"class=\"hspace\">&nbsp;</span><span class=\"RktVal\">1</span><span class="
"\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal"
"\">1</span><span class=\"RktPn\">)</span></td></tr><tr><td><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._check-expect%29%29\" class=\"RktStxLink\" data-"
"pltdoc=\"x\">check-expect</a></span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktPn\">(</span><span class=\"RktSym\">f</span><span "
"class=\"hspace\">&nbsp;</span><span class=\"RktVal\">2</span><span class="
"\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal"
"\">8</span><span class=\"RktPn\">)</span></td></tr></tbody></table></"
"blockquote></div><div class=\"SIntrapara\">If this question showed up on a "
"standard test, you might respond with this:\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCodeFlow\">"
msgstr ""
"<div class=\"SIntrapara\">Что вы знаете о программе <span class=\"RktSym"
"\">f</span> после \n"
"успешного выполнения следующих тестов:\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCodeFlow\"><table class="
"\"RktBlk\" cellspacing=\"0\" cellpadding=\"0\"><tbody><tr><td><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._check-expect%29%29\" class=\"RktStxLink\" data-"
"pltdoc=\"x\">check-expect</a></span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktPn\">(</span><span class=\"RktSym\">f</span><span "
"class=\"hspace\">&nbsp;</span><span class=\"RktVal\">0</span><span class="
"\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal"
"\">0</span><span class=\"RktPn\">)</span></td></tr><tr><td><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._check-expect%29%29\" class=\"RktStxLink\" data-"
"pltdoc=\"x\">check-expect</a></span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktPn\">(</span><span class=\"RktSym\">f</span><span "
"class=\"hspace\">&nbsp;</span><span class=\"RktVal\">1</span><span class="
"\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal"
"\">1</span><span class=\"RktPn\">)</span></td></tr><tr><td><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._check-expect%29%29\" class=\"RktStxLink\" data-"
"pltdoc=\"x\">check-expect</a></span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktPn\">(</span><span class=\"RktSym\">f</span><span "
"class=\"hspace\">&nbsp;</span><span class=\"RktVal\">2</span><span class="
"\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal"
"\">8</span><span class=\"RktPn\">)</span></td></tr></tbody></table></"
"blockquote></div><div class=\"SIntrapara\">\n"
"Если этот вопрос появится в стандартном тесте, вы можете ответить так: \n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCodeFlow\">"

#: in_1/i5-6.html:28
msgid ""
"<p><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://"
"docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28form._%28%28lib."
"_lang%2Fhtdp-intermediate-lambda..rkt%29._define%29%29\" class=\"RktStxLink"
"\" data-pltdoc=\"x\">define</a></span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktPn\">(</span><span class=\"RktSym\">f</span><span "
"class=\"hspace\">&nbsp;</span><span class=\"RktSym\">x</span><span class="
"\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn"
"\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/"
"htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib."
"_lang%2Fhtdp-intermediate-lambda..rkt%29._expt%29%29\" class=\"RktValLink\" "
"data-pltdoc=\"x\">expt</a></span><span class=\"hspace\">&nbsp;</span><span "
"class=\"RktSym\">x</span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktVal\">3</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</"
"span></p>"
msgstr ""

#: in_1/i5-6.html:31
msgid ""
"</blockquote></div><div class=\"SIntrapara\">But nothing speaks against the "
"following:\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCodeFlow\">"
msgstr ""
"</blockquote></div><div class=\"SIntrapara\">Но ничто не говорит против "
"следующего: \n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCodeFlow\">"

#: in_1/i5-6.html:33
msgid ""
"<p><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://"
"docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28form._%28%28lib."
"_lang%2Fhtdp-intermediate-lambda..rkt%29._define%29%29\" class=\"RktStxLink"
"\" data-pltdoc=\"x\">define</a></span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktPn\">(</span><span class=\"RktSym\">f</span><span "
"class=\"hspace\">&nbsp;</span><span class=\"RktSym\">x</span><span class="
"\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn"
"\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/"
"htdp-langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._if%29%29\" class=\"RktStxLink\" data-pltdoc=\"x"
"\">if</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</"
"span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-"
"langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib._lang"
"%2Fhtdp-intermediate-lambda..rkt%29._~3d%29%29\" class=\"RktValLink\" data-"
"pltdoc=\"x\">=</a></span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktSym\">x</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal"
"\">2</span><span class=\"RktPn\">)</span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktVal\">8</span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://"
"docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-"
"intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._%2A"
"%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">*</a></span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktSym\">x</span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktSym\">x</span><span class=\"RktPn\">)</"
"span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span></p>"
msgstr ""

#: in_1/i5-6.html:35
msgid ""
"</blockquote></div><div class=\"SIntrapara\">Tests tell you only that a "
"program works as expected on some inputs.</div>"
msgstr ""
"</blockquote></div><div class=\"SIntrapara\">Тесты говорят вам только о том, "
"что программа \n"
"работает должным образом на некоторых входных данных.</div>"

#: in_1/i5-6.html:37
msgctxt "in_1/i5-6.html:37"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:52
msgid ""
"<p>In the same spirit, timing the evaluation of a program application for\n"
" specific inputs tells you how long it takes to compute the answers for\n"
" those inputs— and nothing else.<span class=\"refelem\"><span class="
"\"refcolumn\"><span class=\"refcontent\">You may also wish to reread\n"
"<a href=\"part_three.html#%28part._sec~3alocal-definitions%29\" data-pltdoc="
"\"x\">Local Definitions</a> and the discussion of integrity checks in\n"
"<a href=\"part_four.html#%28part._db._sec~3aproj-db%29\" data-pltdoc=\"x"
"\">Project: Database</a>.</span></span></span>  You may have two\n"
" programs— <span class=\"RktSym\">prog-linear</span><span class=\"RktMeta"
"\"></span> and <span class=\"RktSym\">prog-square</span><span class=\"RktMeta"
"\"></span>— that compute the same answers when given\n"
" the same inputs, and you may find that for all chosen inputs, <span class="
"\"RktSym\">prog-linear</span><span class=\"RktMeta\"></span> always\n"
" computes the answer faster than <span class=\"RktSym\">prog-square</"
"span><span class=\"RktMeta\"></span>. <a href=\"part_five.html#%28part."
"_sec~3achoice%29\" data-pltdoc=\"x\">Making Choices</a> presents just\n"
" such a pair of programs: <span class=\"RktSym\">gcd</span>, a <a name="
"\"(idx._(gentag._694))\"></a>structurally recursive program,\n"
" and <span class=\"RktSym\">gcd-generative</span>, an equivalent but "
"generative-recursive\n"
" program.  The timing comparison suggests that the latter is much faster\n"
" than the former.</p>"
msgstr ""
"<p>В том же духе определение времени оценки программного приложения для "
"конкретных \n"
"входных данных говорит вам, сколько времени потребуется, чтобы вычислить "
"ответы для \n"
"этих входных данных - и ничего больше.\n"
"<span class=\"refelem\"><span class=\"refcolumn\"><span class=\"refcontent"
"\">\n"
"Вы также можете перечитать <a href=\"part_three.html#%28part._sec~3alocal-"
"definitions%29\" data-pltdoc=\"x\">Локальные определения</a> и обсуждение "
"проверок целостности в\n"
"<a href=\"part_four.html#%28part._db._sec~3aproj-db%29\" data-pltdoc=\"x"
"\">Проект: База данных</a>.\n"
"</span></span></span>  \n"
"У вас может быть две программы - <span class=\"RktSym\">prog-linear</"
"span><span class=\"RktMeta\"></span> и <span class=\"RktSym\">prog-square</"
"span><span class=\"RktMeta\"></span> - которые \n"
"вычисляют одни и те же ответы при одинаковых входных данных, и вы можете "
"обнаружить, \n"
"что для всех выбранных входных данных <span class=\"RktSym\">prog-linear</"
"span><span class=\"RktMeta\"></span> всегда вычисляет ответ быстрее, чем "
"<span class=\"RktSym\">prog-square</span><span class=\"RktMeta\"></span>. В "
"<a href=\"part_five.html#%28part._sec~3achoice%29\" data-pltdoc=\"x\">Making "
"Choices</a> представлена именно такая пара программ: \n"
"<span class=\"RktSym\">gcd</span>, <a name=\"(idx._(gentag._694))\"></"
"a>структурно рекурсивная\n"
"программа, и <span class=\"RktSym\">gcd-generative</span>, эквивалентная, "
"но \n"
"генерирующе-рекурсивная программа. Сравнение времени показывает, что "
"последняя намного быстрее,\n"
"чем первая. \n"
"</p>"

#: in_1/i5-6.html:54
msgid ""
"<blockquote class=\"Figure\"><a name=\"(counter._(figure."
"_fig~3aperformance))\" x-target-lift=\"Figure\"></a><blockquote class="
"\"Centerfigure\"><blockquote class=\"FigureInside\"><blockquote class="
"\"SCentered\">"
msgstr ""

#: in_1/i5-6.html:56
msgid ""
"<p><img src=\"i5-6_files/pict_237.png\" alt=\"image\" width=\"400\" height="
"\"400\"></p>"
msgstr ""

#: in_1/i5-6.html:58
msgid ""
"</blockquote></blockquote></blockquote><p class=\"Centertext\"><span class="
"\"Legend\"><span class=\"FigureTarget\">Figure&nbsp;176: </span>A comparison "
"of two running time expressions</span></p>"
msgstr ""
"</blockquote></blockquote></blockquote><p class=\"Centertext\"><span class="
"\"Legend\"><span class=\"FigureTarget\">Рисунок&nbsp;176: </span>Сравнение "
"времени выполнения двух выражений\n"
"</span></p>"

#: in_1/i5-6.html:60
msgctxt "in_1/i5-6.html:60"
msgid "</blockquote>"
msgstr ""

#: in_1/i5-6.html:74
msgid ""
"<p>How confident are you that you wish to use <span class=\"RktSym\">prog-"
"linear</span><span class=\"RktMeta\"></span> instead of\n"
" <span class=\"RktSym\">prog-square</span><span class=\"RktMeta\"></span>?  "
"Consider the graph in <a href=\"#%28counter._%28figure._fig~3aperformance"
"%29%29\" data-pltdoc=\"x\">figure&nbsp;<span class=\"FigureRef\">176</span></"
"a>. In this\n"
" graph, the x-axis records the size of the input— say, the length of\n"
" a list— and the y-axis records the time it takes to compute the\n"
" answer for an input of a specific size. Assume that the straight line\n"
" represents the running time of <span class=\"RktSym\">prog-linear</"
"span><span class=\"RktMeta\"></span> and the curved graph represents\n"
" <span class=\"RktSym\">prog-square</span><span class=\"RktMeta\"></span>. "
"In the shaded region, <span class=\"RktSym\">prog-linear</span><span class="
"\"RktMeta\"></span> takes more time than\n"
" <span class=\"RktSym\">prog-square</span><span class=\"RktMeta\"></span>, "
"but at the edge of this region the two graphs cross, and to\n"
" its right the performance of <span class=\"RktSym\">prog-square</span><span "
"class=\"RktMeta\"></span> is worse than that of\n"
" <span class=\"RktSym\">prog-linear</span><span class=\"RktMeta\"></span>. "
"If, for whatever reasons, you had evaluated the performance of\n"
" <span class=\"RktSym\">prog-linear</span><span class=\"RktMeta\"></span> "
"and <span class=\"RktSym\">prog-square</span><span class=\"RktMeta\"></span> "
"only for input sizes in the shaded region and if\n"
" your clients were to run your program mostly on inputs that fall in the\n"
" nonshaded region, you would be delivering the wrong program.</p>"
msgstr ""
"<p>Насколько вы уверены, что хотите использовать <span class=\"RktSym\">prog-"
"linear</span><span class=\"RktMeta\"></span> вместо <span class=\"RktSym"
"\">prog-square</span><span class=\"RktMeta\"></span>? Рассмотрим график на "
"<a href=\"#%28counter._%28figure._fig~3aperformance%29%29\" data-pltdoc=\"x"
"\">рис.&nbsp;<span class=\"FigureRef\">176</span></a>. На этом графике по "
"оси абсцисс\n"
"записан размер входных данных, например, длина списка, а по оси ординат "
"записано время,\n"
"необходимое для вычисления ответа для входных данных определенного размер. "
"Предположим, \n"
"что прямая линия представляет время выполнения функции <span class=\"RktSym"
"\">prog-linear</span><span class=\"RktMeta\"></span>, а изогнутая диаграмма "
"представляет собой \n"
"<span class=\"RktSym\">prog-square</span><span class=\"RktMeta\"></span>. В "
"заштрихованной области\n"
"<span class=\"RktSym\">prog-linear</span><span class=\"RktMeta\"></span> "
"занимает больше времени, \n"
"чем <span class=\"RktSym\">prog-square</span><span class=\"RktMeta\"></"
"span>, но на краю этой \n"
"области два графика пересекаются, и справа от него производительность \n"
"<span class=\"RktSym\">prog-square</span><span class=\"RktMeta\"></span> "
"хуже, чем у \n"
"<span class=\"RktSym\">prog-linear</span><span class=\"RktMeta\"></span>. "
"Если по каким-либо \n"
"причинам вы оценили производительность  <span class=\"RktSym\">prog-linear</"
"span><span class=\"RktMeta\"></span> и <span class=\"RktSym\">prog-square</"
"span><span class=\"RktMeta\"></span>\n"
"только для размеров входных данных в заштрихованной области, и если бы ваши "
"клиенты должны \n"
"были запускать вашу программу в основном на входных данных, которые попадают "
"в незатененную\n"
"область, вы бы поставили неправильную программу. </p>"

#: in_1/i5-6.html:86
msgid ""
"<p>This intermezzo introduces the idea of <span style=\"font-style: italic"
"\">algorithmic analysis</span>,\n"
" which allows programmers to make general statements about a program’s\n"
" performance and everyone else about the growth of a function.\n"
" <span class=\"refelem\"><span class=\"refcolumn\"><span class=\"refcontent"
"\">We thank Prabhakar Ragde for sharing his notes on connecting\n"
"the first edition of this book with algorithmic analysis.</span></span></"
"span>Any serious\n"
" programmer and scientist must eventually become thoroughly familiar with\n"
" this notion. It is the basis for analyzing performance attributes of\n"
" programs. To understand the idea properly, you will need to work through a\n"
" text book.</p>"
msgstr ""
"<p>Это интермеццо знакомит с идеей <span style=\"font-style: italic"
"\">algorithmic analysis</span>(анализа алгоритмов), который позволяет "
"программистам делать общие утверждения о\n"
"производительности программы, а всем остальным - о развитии функции.\n"
"<span class=\"refelem\"><span class=\"refcolumn\"><span class=\"refcontent"
"\">\n"
"Мы благодарим Прабхакара Рагде за то, что он поделился своими заметками о \n"
"соединении первого издания этой книги с анализом алгоритмов.\n"
"</span></span></span>\n"
"Любой серьезный программист и ученый должен со временем досконально "
"ознакомиться с \n"
"этим понятием. Это основа для анализа характеристик производительности "
"программ. \n"
"Чтобы правильно понять идею, вам нужно будет проработать учебник. </p>"

#: in_1/i5-6.html:88
msgid ""
"<h3><a name=\"(part._.Concrete_.Time__.Abstract_.Time)\"></a>Concrete Time, "
"Abstract Time</h3>"
msgstr ""
"<h3><a name=\"(part._.Concrete_.Time__.Abstract_.Time)\"></a>Конкретное "
"время, абстрактное время</h3>"

#: in_1/i5-6.html:90
msgctxt "in_1/i5-6.html:90"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:98
msgid ""
"<div class=\"SIntrapara\"><a href=\"part_five.html#%28part._sec~3achoice"
"%29\" data-pltdoc=\"x\">Making Choices</a> compares the running time of "
"<span class=\"RktSym\">gcd</span> and\n"
" <span class=\"RktSym\">gcd-generative</span>. In addition, it argues that "
"the latter is better\n"
" because it always uses fewer recursive steps than the former to compute\n"
" an answer.  We use this idea as the starting point to analyze the\n"
" performance of <span class=\"RktSym\">how-many</span>, a simple program "
"from\n"
" <a href=\"part_two.html#%28part._ch~3adesign-lists%29\" data-pltdoc=\"x"
"\">Designing with Self-Referential Data Definitions</a>:  <a name=\"(idx."
"_(gentag._695))\"></a>\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCodeFlow\"><table class="
"\"RktBlk\" cellspacing=\"0\" cellpadding=\"0\"><tbody><tr><td><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._define%29%29\" class=\"RktStxLink\" data-pltdoc="
"\"x\">define</a></span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktPn\">(</span><span class=\"RktSym\">how-many</span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktSym\">a-list</span><span class=\"RktPn\">)</"
"span></td></tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;</span><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._cond%29%29\" class=\"RktStxLink\" data-pltdoc="
"\"x\">cond</a></span></td></tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;"
"&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class=\"RktPn\">(</"
"span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-"
"langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib._lang"
"%2Fhtdp-intermediate-lambda..rkt%29._empty~3f%29%29\" class=\"RktValLink\" "
"data-pltdoc=\"x\">empty?</a></span><span class=\"hspace\">&nbsp;</span><span "
"class=\"RktSym\">a-list</span><span class=\"RktPn\">)</span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktVal\">0</span><span class=\"RktPn"
"\">]</span></td></tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;"
"</span><span class=\"RktPn\">[</span><span class=\"RktSym\"><a href="
"\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28form._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._else%29%29\" class="
"\"RktStxLink\" data-pltdoc=\"x\">else</a></span><span class=\"hspace\">&nbsp;"
"</span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href="
"\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-"
"intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._%2B"
"%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">+</a></span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym"
"\">how-many</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn"
"\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/"
"htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib."
"_lang%2Fhtdp-intermediate-lambda..rkt%29._rest%29%29\" class=\"RktValLink\" "
"data-pltdoc=\"x\">rest</a></span><span class=\"hspace\">&nbsp;</span><span "
"class=\"RktSym\">a-list</span><span class=\"RktPn\">)</span><span class="
"\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal"
"\">1</span><span class=\"RktPn\">)</span><span class=\"RktPn\">]</span><span "
"class=\"RktPn\">)</span><span class=\"RktPn\">)</span></td></tr></tbody></"
"table></blockquote></div>"
msgstr ""
"<div class=\"SIntrapara\"><a href=\"part_five.html#%28part._sec~3achoice"
"%29\" data-pltdoc=\"x\">Making Choices</a> сравнивает время работы <span "
"class=\"RktSym\">gcd</span> и\n"
" <span class=\"RktSym\">gcd-generative</span>. Кроме того, она утверждает, "
"что последняя лучше,\n"
"потому что она всегда использует меньше рекурсивных шагов, чем первая, для "
"вычисления ответа. \n"
"Мы используем эту идею в качестве отправной точки для анализа "
"производительности \n"
"<span class=\"RktSym\">how-many</span>, простой программы из раздела  \n"
" <a href=\"part_two.html#%28part._ch~3adesign-lists%29\" data-pltdoc=\"x"
"\">Проектирование с определениями данных ссылающихся на себя</a>:  <a name="
"\"(idx._(gentag._695))\"></a>\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCodeFlow\"><table class="
"\"RktBlk\" cellspacing=\"0\" cellpadding=\"0\"><tbody><tr><td><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._define%29%29\" class=\"RktStxLink\" data-pltdoc="
"\"x\">define</a></span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktPn\">(</span><span class=\"RktSym\">how-many</span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktSym\">a-list</span><span class=\"RktPn\">)</"
"span></td></tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;</span><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._cond%29%29\" class=\"RktStxLink\" data-pltdoc="
"\"x\">cond</a></span></td></tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;"
"&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class=\"RktPn\">(</"
"span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-"
"langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib._lang"
"%2Fhtdp-intermediate-lambda..rkt%29._empty~3f%29%29\" class=\"RktValLink\" "
"data-pltdoc=\"x\">empty?</a></span><span class=\"hspace\">&nbsp;</span><span "
"class=\"RktSym\">a-list</span><span class=\"RktPn\">)</span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktVal\">0</span><span class=\"RktPn"
"\">]</span></td></tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;"
"</span><span class=\"RktPn\">[</span><span class=\"RktSym\"><a href="
"\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28form._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._else%29%29\" class="
"\"RktStxLink\" data-pltdoc=\"x\">else</a></span><span class=\"hspace\">&nbsp;"
"</span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href="
"\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-"
"intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._%2B"
"%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">+</a></span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym"
"\">how-many</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn"
"\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/"
"htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib."
"_lang%2Fhtdp-intermediate-lambda..rkt%29._rest%29%29\" class=\"RktValLink\" "
"data-pltdoc=\"x\">rest</a></span><span class=\"hspace\">&nbsp;</span><span "
"class=\"RktSym\">a-list</span><span class=\"RktPn\">)</span><span class="
"\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal"
"\">1</span><span class=\"RktPn\">)</span><span class=\"RktPn\">]</span><span "
"class=\"RktPn\">)</span><span class=\"RktPn\">)</span></td></tr></tbody></"
"table></blockquote></div>"

#: in_1/i5-6.html:100
msgctxt "in_1/i5-6.html:100"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:104
msgctxt "in_1/i5-6.html:104"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:113
msgid ""
"<div class=\"SIntrapara\">Suppose we want to know how long it takes to "
"compute the length of some\n"
" unknown, non-empty list. Using the rules of computation from\n"
" <a href=\"i1-2.html\" data-pltdoc=\"x\">Intermezzo 1: Beginning Student "
"Language</a>, we can look at this process as a series of algebraic\n"
" manipulations:\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCodeFlow\"><table class="
"\"RktBlk\" cellspacing=\"0\" cellpadding=\"0\"><tbody><tr><td><span class="
"\"RktPn\">(</span><span class=\"RktSym\">how-many</span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktSym\">some-non-empty-list</span><span class="
"\"RktPn\">)</span></td></tr><tr><td><span class=\"RktSym\">==</span></td></"
"tr><tr><td><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href="
"\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28form._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._cond%29%29\" class="
"\"RktStxLink\" data-pltdoc=\"x\">cond</a></span></td></tr><tr><td><span "
"class=\"hspace\">&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span "
"class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-"
"lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._empty~3f%29%29\" class="
"\"RktValLink\" data-pltdoc=\"x\">empty?</a></span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktSym\">some-non-empty-list</span><span class="
"\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal"
"\">0</span><span class=\"RktPn\">]</span></td></tr><tr><td><span class="
"\"hspace\">&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class="
"\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-"
"lam.html#%28form._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._else"
"%29%29\" class=\"RktStxLink\" data-pltdoc=\"x\">else</a></span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym"
"\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#"
"%28def._htdp-intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-"
"lambda..rkt%29._%2B%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">+</a></"
"span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span "
"class=\"RktSym\">how-many</span><span class=\"hspace\">&nbsp;</span><span "
"class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-"
"lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._rest%29%29\" class="
"\"RktValLink\" data-pltdoc=\"x\">rest</a></span><span class=\"hspace\">&nbsp;"
"</span><span class=\"RktSym\">some-non-empty-list</span><span class=\"RktPn"
"\">)</span><span class=\"RktPn\">)</span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktVal\">1</span><span class=\"RktPn\">)</span><span "
"class=\"RktPn\">]</span><span class=\"RktPn\">)</span></td></"
"tr><tr><td><span class=\"RktSym\">==</span></td></tr><tr><td><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._cond%29%29\" class=\"RktStxLink\" data-pltdoc="
"\"x\">cond</a></span></td></tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;</"
"span><span class=\"RktPn\">[</span><span class=\"RktVal\">#false</span><span "
"class=\"hspace\">&nbsp;</span><span class=\"RktVal\">0</span><span class="
"\"RktPn\">]</span></td></tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;</"
"span><span class=\"RktPn\">[</span><span class=\"RktSym\"><a href=\"https://"
"docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28form._%28%28lib."
"_lang%2Fhtdp-intermediate-lambda..rkt%29._else%29%29\" class=\"RktStxLink\" "
"data-pltdoc=\"x\">else</a></span><span class=\"hspace\">&nbsp;</span><span "
"class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-"
"lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._%2B%29%29\" class="
"\"RktValLink\" data-pltdoc=\"x\">+</a></span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktPn\">(</span><span class=\"RktSym\">how-many</"
"span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span "
"class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/"
"intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib._lang"
"%2Fhtdp-intermediate-lambda..rkt%29._rest%29%29\" class=\"RktValLink\" data-"
"pltdoc=\"x\">rest</a></span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktSym\">some-non-empty-list</span><span class=\"RktPn\">)</span><span "
"class=\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktVal\">1</span><span class=\"RktPn\">)</span><span class=\"RktPn\">]</"
"span><span class=\"RktPn\">)</span></td></tr><tr><td><span class=\"RktSym"
"\">==</span></td></tr><tr><td><span class=\"RktPn\">(</span><span class="
"\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-"
"lam.html#%28form._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._cond"
"%29%29\" class=\"RktStxLink\" data-pltdoc=\"x\">cond</a></span></td></"
"tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"RktPn"
"\">[</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/"
"htdp-langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._else%29%29\" class=\"RktStxLink\" data-pltdoc="
"\"x\">else</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn"
"\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/"
"htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib."
"_lang%2Fhtdp-intermediate-lambda..rkt%29._%2B%29%29\" class=\"RktValLink\" "
"data-pltdoc=\"x\">+</a></span><span class=\"hspace\">&nbsp;</span><span "
"class=\"RktPn\">(</span><span class=\"RktSym\">how-many</span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym"
"\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#"
"%28def._htdp-intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-"
"lambda..rkt%29._rest%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">rest</"
"a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">some-non-"
"empty-list</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</"
"span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">1</"
"span><span class=\"RktPn\">)</span><span class=\"RktPn\">]</span><span class="
"\"RktPn\">)</span></td></tr><tr><td><span class=\"RktSym\">==</span></td></"
"tr><tr><td><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href="
"\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-"
"intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._%2B"
"%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">+</a></span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym"
"\">how-many</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn"
"\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/"
"htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib."
"_lang%2Fhtdp-intermediate-lambda..rkt%29._rest%29%29\" class=\"RktValLink\" "
"data-pltdoc=\"x\">rest</a></span><span class=\"hspace\">&nbsp;</span><span "
"class=\"RktSym\">some-non-empty-list</span><span class=\"RktPn\">)</"
"span><span class=\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span "
"class=\"RktVal\">1</span><span class=\"RktPn\">)</span></td></tr></tbody></"
"table></blockquote></div><div class=\"SIntrapara\">The first step is to "
"replace <span class=\"RktSym\">a-list</span> in the definition of\n"
" <span class=\"RktSym\">how-many</span> with the actual argument, <span "
"class=\"RktSym\">some-non-empty-list</span>, which\n"
" yields the first <span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._cond%29%29\" class=\"RktStxLink\" data-pltdoc="
"\"x\">cond</a></span> expression. Next we must evaluate\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCodeFlow\">"
msgstr ""
"<div class=\"SIntrapara\">Предположим, мы хотим знать, сколько времени "
"требуется, чтобы \n"
"вычислить длину некоторого неизвестного непустого списка. Используя правила "
"вычислений из\n"
"<a href=\"i1-2.html\" data-pltdoc=\"x\">Intermezzo 1: Beginning Student "
"Language</a>, мы можем\n"
"рассматривать этот процесс как серию алгебраических манипуляций: \n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCodeFlow\"><table class="
"\"RktBlk\" cellspacing=\"0\" cellpadding=\"0\"><tbody><tr><td><span class="
"\"RktPn\">(</span><span class=\"RktSym\">how-many</span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktSym\">some-non-empty-list</span><span class="
"\"RktPn\">)</span></td></tr><tr><td><span class=\"RktSym\">==</span></td></"
"tr><tr><td><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href="
"\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28form._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._cond%29%29\" class="
"\"RktStxLink\" data-pltdoc=\"x\">cond</a></span></td></tr><tr><td><span "
"class=\"hspace\">&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span "
"class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-"
"lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._empty~3f%29%29\" class="
"\"RktValLink\" data-pltdoc=\"x\">empty?</a></span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktSym\">some-non-empty-list</span><span class="
"\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal"
"\">0</span><span class=\"RktPn\">]</span></td></tr><tr><td><span class="
"\"hspace\">&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class="
"\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-"
"lam.html#%28form._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._else"
"%29%29\" class=\"RktStxLink\" data-pltdoc=\"x\">else</a></span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym"
"\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#"
"%28def._htdp-intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-"
"lambda..rkt%29._%2B%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">+</a></"
"span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span "
"class=\"RktSym\">how-many</span><span class=\"hspace\">&nbsp;</span><span "
"class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-"
"lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._rest%29%29\" class="
"\"RktValLink\" data-pltdoc=\"x\">rest</a></span><span class=\"hspace\">&nbsp;"
"</span><span class=\"RktSym\">some-non-empty-list</span><span class=\"RktPn"
"\">)</span><span class=\"RktPn\">)</span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktVal\">1</span><span class=\"RktPn\">)</span><span "
"class=\"RktPn\">]</span><span class=\"RktPn\">)</span></td></"
"tr><tr><td><span class=\"RktSym\">==</span></td></tr><tr><td><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._cond%29%29\" class=\"RktStxLink\" data-pltdoc="
"\"x\">cond</a></span></td></tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;</"
"span><span class=\"RktPn\">[</span><span class=\"RktVal\">#false</span><span "
"class=\"hspace\">&nbsp;</span><span class=\"RktVal\">0</span><span class="
"\"RktPn\">]</span></td></tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;</"
"span><span class=\"RktPn\">[</span><span class=\"RktSym\"><a href=\"https://"
"docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28form._%28%28lib."
"_lang%2Fhtdp-intermediate-lambda..rkt%29._else%29%29\" class=\"RktStxLink\" "
"data-pltdoc=\"x\">else</a></span><span class=\"hspace\">&nbsp;</span><span "
"class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-"
"lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._%2B%29%29\" class="
"\"RktValLink\" data-pltdoc=\"x\">+</a></span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktPn\">(</span><span class=\"RktSym\">how-many</"
"span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span "
"class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/"
"intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib._lang"
"%2Fhtdp-intermediate-lambda..rkt%29._rest%29%29\" class=\"RktValLink\" data-"
"pltdoc=\"x\">rest</a></span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktSym\">some-non-empty-list</span><span class=\"RktPn\">)</span><span "
"class=\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktVal\">1</span><span class=\"RktPn\">)</span><span class=\"RktPn\">]</"
"span><span class=\"RktPn\">)</span></td></tr><tr><td><span class=\"RktSym"
"\">==</span></td></tr><tr><td><span class=\"RktPn\">(</span><span class="
"\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-"
"lam.html#%28form._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._cond"
"%29%29\" class=\"RktStxLink\" data-pltdoc=\"x\">cond</a></span></td></"
"tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"RktPn"
"\">[</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/"
"htdp-langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._else%29%29\" class=\"RktStxLink\" data-pltdoc="
"\"x\">else</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn"
"\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/"
"htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib."
"_lang%2Fhtdp-intermediate-lambda..rkt%29._%2B%29%29\" class=\"RktValLink\" "
"data-pltdoc=\"x\">+</a></span><span class=\"hspace\">&nbsp;</span><span "
"class=\"RktPn\">(</span><span class=\"RktSym\">how-many</span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym"
"\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#"
"%28def._htdp-intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-"
"lambda..rkt%29._rest%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">rest</"
"a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">some-non-"
"empty-list</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</"
"span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">1</"
"span><span class=\"RktPn\">)</span><span class=\"RktPn\">]</span><span class="
"\"RktPn\">)</span></td></tr><tr><td><span class=\"RktSym\">==</span></td></"
"tr><tr><td><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href="
"\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-"
"intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._%2B"
"%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">+</a></span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym"
"\">how-many</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn"
"\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/"
"htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib."
"_lang%2Fhtdp-intermediate-lambda..rkt%29._rest%29%29\" class=\"RktValLink\" "
"data-pltdoc=\"x\">rest</a></span><span class=\"hspace\">&nbsp;</span><span "
"class=\"RktSym\">some-non-empty-list</span><span class=\"RktPn\">)</"
"span><span class=\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span "
"class=\"RktVal\">1</span><span class=\"RktPn\">)</span></td></tr></tbody></"
"table></blockquote></div><div class=\"SIntrapara\">\n"
"Первый шаг - заменить <span class=\"RktSym\">a-list</span> в определении \n"
"<span class=\"RktSym\">how-many</span> на фактический аргумент \n"
"<span class=\"RktSym\">some-non-empty-list</span>, который дает первое "
"выражение \n"
"<span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/"
"intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-intermediate-lambda.."
"rkt%29._cond%29%29\" class=\"RktStxLink\" data-pltdoc=\"x\">cond</a></span>. "
"Далее мы должны вычислить \n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCodeFlow\">"

#: in_1/i5-6.html:115
msgid ""
"<p><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://"
"docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-"
"intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29."
"_empty~3f%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">empty?</a></"
"span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">some-non-"
"empty-list</span><span class=\"RktPn\">)</span></p>"
msgstr ""

#: in_1/i5-6.html:125
msgid ""
"</blockquote></div><div class=\"SIntrapara\">By assumption the result is "
"<span class=\"RktVal\">#false</span>. The question is how long it\n"
" takes to determine this result. While we don’t know the precise amount of\n"
" time, it is safe to say that checking on the constructor of a list takes a\n"
" small and fixed amount of time. Indeed, this assumption also holds for the\n"
" next step, when <span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._cond%29%29\" class=\"RktStxLink\" data-pltdoc="
"\"x\">cond</a></span> checks what the value of the first condition\n"
" is. Since it is <span class=\"RktVal\">#false</span>, the first <span class="
"\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-"
"lam.html#%28form._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._cond"
"%29%29\" class=\"RktStxLink\" data-pltdoc=\"x\">cond</a></span> line is\n"
" dropped. Checking whether a <span class=\"RktSym\"><a href=\"https://docs."
"racket-lang.org/htdp-langs/intermediate-lam.html#%28form._%28%28lib._lang"
"%2Fhtdp-intermediate-lambda..rkt%29._cond%29%29\" class=\"RktStxLink\" data-"
"pltdoc=\"x\">cond</a></span> line starts with <span class=\"RktSym\"><a href="
"\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28form._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._else%29%29\" class="
"\"RktStxLink\" data-pltdoc=\"x\">else</a></span>\n"
" is equally fast, which means we are left with\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCodeFlow\">"
msgstr ""
"</blockquote></div><div class=\"SIntrapara\">По предположению результат - \n"
"<span class=\"RktVal\">#false</span>. Вопрос в том, сколько времени нужно, "
"чтобы определить этот\n"
"результат. Хотя мы не знаем точное количество времени, можно с уверенностью "
"сказать, что \n"
"проверка конструктора списка занимает небольшое и фиксированное время. "
"Действительно, это\n"
"предположение справедливо и для следующего шага, когда <span class=\"RktSym"
"\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#"
"%28form._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._cond%29%29\" "
"class=\"RktStxLink\" data-pltdoc=\"x\">cond</a></span> проверяет \n"
"значение первого условия. Поскольку это <span class=\"RktVal\">#false</"
"span>, первая строка \n"
"<span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/"
"intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-intermediate-lambda.."
"rkt%29._cond%29%29\" class=\"RktStxLink\" data-pltdoc=\"x\">cond</a></span> "
"отбрасывается. Проверка строки \n"
"<span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/"
"intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-intermediate-lambda.."
"rkt%29._cond%29%29\" class=\"RktStxLink\" data-pltdoc=\"x\">cond</a></span> "
"начинающейся с \n"
"<span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/"
"intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-intermediate-lambda.."
"rkt%29._else%29%29\" class=\"RktStxLink\" data-pltdoc=\"x\">else</a></span>, "
"выполняется \n"
"так же быстро, что означает, что мы остаемся с \n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCodeFlow\">"

#: in_1/i5-6.html:127
msgid ""
"<p><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://"
"docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-"
"intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._%2B"
"%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">+</a></span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym"
"\">how-many</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn"
"\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/"
"htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib."
"_lang%2Fhtdp-intermediate-lambda..rkt%29._rest%29%29\" class=\"RktValLink\" "
"data-pltdoc=\"x\">rest</a></span><span class=\"hspace\">&nbsp;</span><span "
"class=\"RktSym\">some-non-empty-list</span><span class=\"RktPn\">)</"
"span><span class=\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span "
"class=\"RktVal\">1</span><span class=\"RktPn\">)</span></p>"
msgstr ""

#: in_1/i5-6.html:133
msgid ""
"</blockquote></div><div class=\"SIntrapara\">Finally we may safely assume "
"that <span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-"
"langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib._lang"
"%2Fhtdp-intermediate-lambda..rkt%29._rest%29%29\" class=\"RktValLink\" data-"
"pltdoc=\"x\">rest</a></span> extracts the remainder of\n"
" the list in a fixed amount of time, but otherwise it looks like we are\n"
" stuck. To compute how long <span class=\"RktSym\">how-many</span> takes to "
"determine the length\n"
" of some list, we need to know how long <span class=\"RktSym\">how-many</"
"span> takes to count\n"
" the number of items in the rest of that list.</div>"
msgstr ""
"</blockquote></div><div class=\"SIntrapara\">Наконец, мы можем с "
"уверенностью предположить, \n"
"что <span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/"
"intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib._lang"
"%2Fhtdp-intermediate-lambda..rkt%29._rest%29%29\" class=\"RktValLink\" data-"
"pltdoc=\"x\">rest</a></span> извлекает \n"
"оставшуюся часть списка за фиксированный промежуток времени, но в остальном "
"похоже, что мы\n"
"застряли. Чтобы вычислить, сколько времени требуется <span class=\"RktSym"
"\">how-many</span> \n"
"для определения длины некоторого списка, нам нужно знать, сколько времени "
"требуется \n"
"<span class=\"RktSym\">how-many</span> для подсчета количества элементов в "
"оставшейся(rest) \n"
"части этого списка.\n"
"</div>"

#: in_1/i5-6.html:135
msgctxt "in_1/i5-6.html:135"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:145
msgid ""
"<p>Alternatively, if we assume that predicates and selectors take some "
"fixed\n"
" amount of time, the time it takes <span class=\"RktSym\">how-many</span> to "
"determine the\n"
" length of a list depends on the number of recursive steps it\n"
" takes. Somewhat more precisely, evaluating <span class=\"RktPn\">(</"
"span><span class=\"RktSym\">how-many</span><span class=\"stt\"> </span><span "
"class=\"RktSym\">some-list</span><span class=\"RktPn\">)</span>\n"
" takes roughly <span style=\"font-style: italic\">n</span> times some fixed "
"amount where <span style=\"font-style: italic\">n</span> is the\n"
" length of the list or, equivalently, the number of times the program\n"
" recurs.</p>"
msgstr ""
"<p>В качестве альтернативы, если мы предположим, что предикаты и селекторы "
"занимают \n"
"некоторое фиксированное время, время, необходимое <span class=\"RktSym\">how-"
"many</span> для\n"
"определения длины списка, зависит от количества выполняемых рекурсивных "
"шагов. Точнее, \n"
"вычисление <span class=\"RktPn\">(</span><span class=\"RktSym\">how-many</"
"span><span class=\"stt\"> </span><span class=\"RktSym\">some-list</"
"span><span class=\"RktPn\">)</span> требует примерно \n"
"<span style=\"font-style: italic\">n</span> раз некоторой фиксированного "
"количества времени, где \n"
"<span style=\"font-style: italic\">n</span> - длина списка или, что то же "
"самое, количество\n"
"повторений программы. </p>"

#: in_1/i5-6.html:158
msgid ""
"<p>Generalizing from this example suggests that the running time depends on\n"
" the size of the input and that the number of recursive steps is a good\n"
" estimate for the length of an evaluation sequence.  For this reason,\n"
" computer scientists discuss the <span style=\"font-style: italic\">abstract "
"running time</span> of a\n"
" program as a relationship between the size of the input and the number of\n"
" recursive steps in an evaluation.<span class=\"refelem\"><span class="
"\"refcolumn\"><span class=\"refcontent\">“Abstract” because\n"
"the measure ignores the details of how much time primitive steps take.</"
"span></span></span>\n"
" In our first example, the size of the input is the number of items on the\n"
" list. Thus, a list of one item requires one recursive step, a list of two\n"
" needs two steps, and for a list of <span style=\"font-style: italic\">n</"
"span> items, it’s <span style=\"font-style: italic\">n</span> steps.</p>"
msgstr ""
"<p>Обобщение этого примера предполагает, что время выполнения зависит от "
"размера \n"
"входных данных и что количество рекурсивных шагов является хорошей оценкой "
"длины\n"
"последовательности вычисления. По этой причине специалисты по информатике "
"обсуждают \n"
"<span style=\"font-style: italic\">abstract running time</span>(абстрактное "
"время выполнения)\n"
"программы как взаимосвязь между размером входных данных и количеством "
"рекурсивных шагов \n"
"в вычислении.\n"
"<span class=\"refelem\"><span class=\"refcolumn\"><span class=\"refcontent"
"\">\n"
"«Абстракция», потому что мера игнорирует детали того, сколько времени "
"занимают примитивные шаги.\n"
"</span></span></span>\n"
" В нашем первом примере размер ввода - это количество элементов в списке. "
"Таким образом, \n"
"для списка из одного элемента требуется один рекурсивный шаг, для списка из "
"двух требуется \n"
"два шага, а для списка из <span style=\"font-style: italic\">n</span> "
"элементов - это \n"
"<span style=\"font-style: italic\">n</span> шагов. </p>"

#: in_1/i5-6.html:167
msgid ""
"<p>Computer scientists use the phrase a program <span class=\"RktSym\">f</"
"span> takes “on the\n"
" order of <span style=\"font-style: italic\">n</span> steps” to formulate a "
"claim about the abstract running time\n"
" of <span class=\"RktSym\">f</span>. To use the phrase correctly, it must "
"come with an\n"
" explanation of <span style=\"font-style: italic\">n</span>, for example, "
"“it counts the number of items on\n"
" the given list” or “it is the number of digits in the given number.”\n"
" Without such an explanation, the original phrase is actually meaningless.</"
"p>"
msgstr ""
"<p>Специалисты по информатике используют фразу: программа <span class="
"\"RktSym\">f</span> \n"
"выполняется «порядка <span style=\"font-style: italic\">n</span> шагов», "
"чтобы сформулировать\n"
"утверждение об абстрактном времени работы <span class=\"RktSym\">f</span>. "
"Чтобы использовать \n"
"фразу правильно, она должна сопровождаться объяснением <span style=\"font-"
"style: italic\">n</span>,\n"
"например, «подсчитывает количество элементов в данном списке» или «это "
"количество цифр в данном\n"
"числе». Без такого объяснения исходная фраза фактически бессмысленна. </p>"

#: in_1/i5-6.html:171
msgctxt "in_1/i5-6.html:171"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:180
msgid ""
"<div class=\"SIntrapara\">Not all programs have the kind of simple abstract "
"running time as\n"
" <span class=\"RktSym\">how-many</span>.  Take a look at the first recursive "
"program in this\n"
" book: <a name=\"(idx._(gentag._696))\"></a>\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCodeFlow\"><table class="
"\"RktBlk\" cellspacing=\"0\" cellpadding=\"0\"><tbody><tr><td><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._define%29%29\" class=\"RktStxLink\" data-pltdoc="
"\"x\">define</a></span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktPn\">(</span><span class=\"RktSym\">contains-flatt?</span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktSym\">lo-names</span><span class="
"\"RktPn\">)</span></td></tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;</"
"span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://"
"docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28form._%28%28lib."
"_lang%2Fhtdp-intermediate-lambda..rkt%29._cond%29%29\" class=\"RktStxLink\" "
"data-pltdoc=\"x\">cond</a></span></td></tr><tr><td><span class=\"hspace"
"\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._empty~3f%29%29\" class="
"\"RktValLink\" data-pltdoc=\"x\">empty?</a></span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktSym\">lo-names</span><span class=\"RktPn"
"\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal"
"\">#false</span><span class=\"RktPn\">]</span></td></tr><tr><td><span class="
"\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</"
"span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://"
"docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-"
"intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29."
"_cons~3f%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">cons?</a></"
"span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">lo-names</"
"span><span class=\"RktPn\">)</span></td></tr><tr><td><span class=\"hspace"
"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">(</span><span "
"class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/"
"intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-intermediate-lambda.."
"rkt%29._or%29%29\" class=\"RktStxLink\" data-pltdoc=\"x\">or</a></span><span "
"class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class="
"\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-"
"lam.html#%28def._htdp-intermediate-lambda._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._string~3d~3f%29%29\" class=\"RktValLink\" data-"
"pltdoc=\"x\">string=?</a></span><span class=\"hspace\">&nbsp;</span><span "
"class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-"
"lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._first%29%29\" class="
"\"RktValLink\" data-pltdoc=\"x\">first</a></span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktSym\">lo-names</span><span class=\"RktPn"
"\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</"
"span><span class=\"RktVal\">flatt</span><span class=\"RktPn\">)</span></td></"
"tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
"&nbsp;&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym"
"\">contains-flatt?</span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._rest%29%29\" class="
"\"RktValLink\" data-pltdoc=\"x\">rest</a></span><span class=\"hspace\">&nbsp;"
"</span><span class=\"RktSym\">lo-names</span><span class=\"RktPn\">)</"
"span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span><span class="
"\"RktPn\">]</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</"
"span></td></tr></tbody></table></blockquote></div><div class=\"SIntrapara"
"\">For a list that starts with <span class=\"RktVal\">'</span><span class="
"\"RktVal\">flatt</span>, say,\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCodeFlow\"><table class="
"\"RktBlk\" cellspacing=\"0\" cellpadding=\"0\"><tbody><tr><td><span class="
"\"RktPn\">(</span><span class=\"RktSym\">contains-flatt?</span></td></"
"tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"RktPn"
"\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/"
"htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib."
"_lang%2Fhtdp-intermediate-lambda..rkt%29._list%29%29\" class=\"RktValLink\" "
"data-pltdoc=\"x\">list</a></span><span class=\"hspace\">&nbsp;</span><span "
"class=\"RktVal\">\"flatt\"</span><span class=\"hspace\">&nbsp;</span><span "
"class=\"RktVal\">\"robot\"</span><span class=\"hspace\">&nbsp;</span><span "
"class=\"RktVal\">\"ball\"</span><span class=\"hspace\">&nbsp;</span><span "
"class=\"RktVal\">\"game-boy\"</span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktVal\">\"pokemon\"</span><span class=\"RktPn\">)</"
"span><span class=\"RktPn\">)</span></td></tr></tbody></table></blockquote></"
"div><div class=\"SIntrapara\">the program requires no recursive steps. In "
"contrast, if\n"
"<span class=\"RktVal\">'</span><span class=\"RktVal\">flatt</span> occurs at "
"the end of the list, as in,\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCodeFlow\"><table class="
"\"RktBlk\" cellspacing=\"0\" cellpadding=\"0\"><tbody><tr><td><span class="
"\"RktPn\">(</span><span class=\"RktSym\">contains-flatt?</span></td></"
"tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"RktPn"
"\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/"
"htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib."
"_lang%2Fhtdp-intermediate-lambda..rkt%29._list%29%29\" class=\"RktValLink\" "
"data-pltdoc=\"x\">list</a></span><span class=\"hspace\">&nbsp;</span><span "
"class=\"RktVal\">\"robot\"</span><span class=\"hspace\">&nbsp;</span><span "
"class=\"RktVal\">\"ball\"</span><span class=\"hspace\">&nbsp;</span><span "
"class=\"RktVal\">\"game-boy\"</span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktVal\">\"pokemon\"</span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktVal\">\"flatt\"</span><span class=\"RktPn\">)</"
"span><span class=\"RktPn\">)</span></td></tr></tbody></table></blockquote></"
"div><div class=\"SIntrapara\">the evaluation needs as many recursive steps "
"as there are items in the\n"
" list.</div>"
msgstr ""
"<div class=\"SIntrapara\">Не все программы имеют такое простое абстрактное "
"время выполнения, \n"
"как <span class=\"RktSym\">how-many</span>. Взгляните на первую рекурсивную "
"программу в \n"
"этой книге:  \n"
"<a name=\"(idx._(gentag._696))\"></a>\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCodeFlow\"><table class="
"\"RktBlk\" cellspacing=\"0\" cellpadding=\"0\"><tbody><tr><td><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._define%29%29\" class=\"RktStxLink\" data-pltdoc="
"\"x\">define</a></span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktPn\">(</span><span class=\"RktSym\">contains-flatt?</span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktSym\">lo-names</span><span class="
"\"RktPn\">)</span></td></tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;</"
"span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://"
"docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28form._%28%28lib."
"_lang%2Fhtdp-intermediate-lambda..rkt%29._cond%29%29\" class=\"RktStxLink\" "
"data-pltdoc=\"x\">cond</a></span></td></tr><tr><td><span class=\"hspace"
"\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._empty~3f%29%29\" class="
"\"RktValLink\" data-pltdoc=\"x\">empty?</a></span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktSym\">lo-names</span><span class=\"RktPn"
"\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal"
"\">#false</span><span class=\"RktPn\">]</span></td></tr><tr><td><span class="
"\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</"
"span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://"
"docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-"
"intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29."
"_cons~3f%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">cons?</a></"
"span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">lo-names</"
"span><span class=\"RktPn\">)</span></td></tr><tr><td><span class=\"hspace"
"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">(</span><span "
"class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/"
"intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-intermediate-lambda.."
"rkt%29._or%29%29\" class=\"RktStxLink\" data-pltdoc=\"x\">or</a></span><span "
"class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class="
"\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-"
"lam.html#%28def._htdp-intermediate-lambda._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._string~3d~3f%29%29\" class=\"RktValLink\" data-"
"pltdoc=\"x\">string=?</a></span><span class=\"hspace\">&nbsp;</span><span "
"class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-"
"lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._first%29%29\" class="
"\"RktValLink\" data-pltdoc=\"x\">first</a></span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktSym\">lo-names</span><span class=\"RktPn"
"\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</"
"span><span class=\"RktVal\">flatt</span><span class=\"RktPn\">)</span></td></"
"tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
"&nbsp;&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym"
"\">contains-flatt?</span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._rest%29%29\" class="
"\"RktValLink\" data-pltdoc=\"x\">rest</a></span><span class=\"hspace\">&nbsp;"
"</span><span class=\"RktSym\">lo-names</span><span class=\"RktPn\">)</"
"span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span><span class="
"\"RktPn\">]</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</"
"span></td></tr></tbody></table></blockquote></div><div class=\"SIntrapara"
"\">\n"
"Для списка, который начинается с <span class=\"RktVal\">'</span><span class="
"\"RktVal\">flatt</span>,\n"
"скажем,\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCodeFlow\"><table class="
"\"RktBlk\" cellspacing=\"0\" cellpadding=\"0\"><tbody><tr><td><span class="
"\"RktPn\">(</span><span class=\"RktSym\">contains-flatt?</span></td></"
"tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"RktPn"
"\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/"
"htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib."
"_lang%2Fhtdp-intermediate-lambda..rkt%29._list%29%29\" class=\"RktValLink\" "
"data-pltdoc=\"x\">list</a></span><span class=\"hspace\">&nbsp;</span><span "
"class=\"RktVal\">\"flatt\"</span><span class=\"hspace\">&nbsp;</span><span "
"class=\"RktVal\">\"robot\"</span><span class=\"hspace\">&nbsp;</span><span "
"class=\"RktVal\">\"ball\"</span><span class=\"hspace\">&nbsp;</span><span "
"class=\"RktVal\">\"game-boy\"</span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktVal\">\"pokemon\"</span><span class=\"RktPn\">)</"
"span><span class=\"RktPn\">)</span></td></tr></tbody></table></blockquote></"
"div><div class=\"SIntrapara\">\n"
"программа не требует рекурсивных шагов. Напротив, если <span class=\"RktVal"
"\">'</span><span class=\"RktVal\">flatt</span> встречается в конце списка, "
"например,\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCodeFlow\"><table class="
"\"RktBlk\" cellspacing=\"0\" cellpadding=\"0\"><tbody><tr><td><span class="
"\"RktPn\">(</span><span class=\"RktSym\">contains-flatt?</span></td></"
"tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"RktPn"
"\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/"
"htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib."
"_lang%2Fhtdp-intermediate-lambda..rkt%29._list%29%29\" class=\"RktValLink\" "
"data-pltdoc=\"x\">list</a></span><span class=\"hspace\">&nbsp;</span><span "
"class=\"RktVal\">\"robot\"</span><span class=\"hspace\">&nbsp;</span><span "
"class=\"RktVal\">\"ball\"</span><span class=\"hspace\">&nbsp;</span><span "
"class=\"RktVal\">\"game-boy\"</span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktVal\">\"pokemon\"</span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktVal\">\"flatt\"</span><span class=\"RktPn\">)</"
"span><span class=\"RktPn\">)</span></td></tr></tbody></table></blockquote></"
"div><div class=\"SIntrapara\">\n"
"для вычисления требуется столько рекурсивных шагов, сколько элементов в "
"списке.</div>"

#: in_1/i5-6.html:182
msgctxt "in_1/i5-6.html:182"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:186
msgctxt "in_1/i5-6.html:186"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:190
msgid ""
"<div class=\"SIntrapara\">This second analysis brings us to the second "
"important idea of program\n"
" analysis, namely, the kind of analysis that is performed:\n"
"</div><div class=\"SIntrapara\"><ul><li>"
msgstr ""
"<div class=\"SIntrapara\">Этот второй анализ подводит нас ко второй важной "
"идее анализа программ, \n"
"а именно к типу выполняемого анализа: \n"
"</div><div class=\"SIntrapara\"><ul><li>"

#: in_1/i5-6.html:194
msgid ""
"<p>A <span style=\"font-style: italic\">best-case analysis</span> focuses on "
"the class of inputs for\n"
"which the program can easily find the answer. In our running example, a\n"
"list that starts with <span class=\"RktVal\">'</span><span class=\"RktVal"
"\">flatt</span> is the best kind of input.</p>"
msgstr ""
"<p>Анализ наилучшего случая(<span style=\"font-style: italic\">best-case "
"analysis</span>)\n"
"фокусируется на классе входных данных, для которого программа может легко "
"найти ответ. \n"
"В нашем текущем примере список, который начинается с <span class=\"RktVal"
"\">'</span><span class=\"RktVal\">flatt</span>, является лучшим типом "
"ввода.\n"
"</p>"

#: in_1/i5-6.html:196
msgctxt "in_1/i5-6.html:196"
msgid "</li><li>"
msgstr ""

#: in_1/i5-6.html:201
msgid ""
"<p>In turn, a <span style=\"font-style: italic\">worst-case analysis</span> "
"determines how badly a\n"
"program performs for those inputs that stress it most. The\n"
"<span class=\"RktSym\">contains-flatt?</span> function exhibits its worst "
"performance when\n"
"<span class=\"RktVal\">'</span><span class=\"RktVal\">flatt</span> is at the "
"end of the input list.</p>"
msgstr ""
"<p>В свою очередь, анализ наихудшего случая(<span style=\"font-style: italic"
"\">worst-case analysis</span>) определяет, насколько плохо программа "
"выполняет те входные данные, которые вызывают \n"
"у нее наибольшую нагрузку. Функция <span class=\"RktSym\">contains-flatt?</"
"span> показывает \n"
"худшую производительность, когда <span class=\"RktVal\">'</span><span class="
"\"RktVal\">flatt</span>\n"
"находится в конце входного списка. </p>"

#: in_1/i5-6.html:203
msgctxt "in_1/i5-6.html:203"
msgid "</li><li>"
msgstr ""

#: in_1/i5-6.html:213
msgid ""
"<p>Finally, an <span style=\"font-style: italic\">average analysis</span> "
"starts from the ideas that\n"
"programmers cannot assume that inputs are always of the best possible\n"
"shape and that they must hope that the inputs are not of the worst possible\n"
"shape. In many cases, they must estimate the <span style=\"font-weight: bold"
"\">average</span> time a\n"
"program takes. For example, <span class=\"RktSym\">contains-flatt?</span>  "
"finds, on the\n"
"average, <span class=\"RktVal\">'</span><span class=\"RktVal\">flatt</span> "
"somewhere in the middle of the input list. Thus,\n"
"if the latter consists of <span style=\"font-style: italic\">n</span> items, "
"the average\n"
"running time of <span class=\"RktSym\">contains-flatt?</span> is <img src="
"\"i5-6_files/pict_238.png\" alt=\"image\" width=\"20\" height=\"12\">, that "
"is, it\n"
"recurs half as often as there are items on the input.</p>"
msgstr ""
"<p>FНаконец, средний анализ(<span style=\"font-style: italic\">average "
"analysis</span>) \n"
"начинается с идеи, что программисты не могут предположить, что входные "
"данные всегда имеют\n"
"наилучшую возможную форму, и что они должны надеяться, что входные данные не "
"имеют худшей \n"
"из возможных форм. Во многих случаях они должны оценить \n"
"<span style=\"font-weight: bold\">average</span> (среднее) время, "
"затрачиваемое на \n"
"выполнение программы. Например, <span class=\"RktSym\">contains-flatt?</"
"span> в среднем находит\n"
"<span class=\"RktVal\">'</span><span class=\"RktVal\">flatt</span> где-"
"нибудь в середине списка ввода.\n"
"Таким образом, если последний состоит из <span style=\"font-style: italic"
"\">n</span> элементов,\n"
"среднее время работы <span class=\"RktSym\">contains-flatt?</span> "
"является \n"
"<img src=\"i5-6_files/pict_238.png\" alt=\"image\" width=\"20\" height="
"\"12\">, то \n"
"есть она повторяется вдвое реже, чем количество элементов на входе.</p>"

#: in_1/i5-6.html:216
msgid ""
"</li></ul></div><div class=\"SIntrapara\">Computer scientists therefore "
"usually employ the “on the order of”\n"
" phrase in conjunction with “on the average” or “in the worst case.”</div>"
msgstr ""
"</li></ul></div><div class=\"SIntrapara\">Поэтому специалисты по информатике "
"обычно используют \n"
"фразу «в порядке очереди» в сочетании со словами «в среднем» или «в худшем "
"случае». </div>"

#: in_1/i5-6.html:218
msgctxt "in_1/i5-6.html:218"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:222
msgctxt "in_1/i5-6.html:222"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:231
msgid ""
"<div class=\"SIntrapara\">Returning to the idea that <span class=\"RktSym"
"\">contains-flatt?</span> uses, on the average,\n"
" an “order of <img src=\"i5-6_files/pict_239.png\" alt=\"image\" width="
"\"20\" height=\"12\"> steps” brings us to one more characteristic\n"
" of abstract running time. Because it ignores the exact time it takes to\n"
" evaluate primitive computation steps— checking predicates, selecting\n"
" values, picking <span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._cond%29%29\" class=\"RktStxLink\" data-pltdoc="
"\"x\">cond</a></span> clauses— we can drop the division by\n"
" <span style=\"font-style: italic\"></span>2<span style=\"font-style: italic"
"\"></span>. Here is why. By assumption, each basic step takes <span style="
"\"font-style: italic\">k</span> units\n"
" of time, meaning <span class=\"RktSym\">contains-flatt?</span>  takes time\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCentered\">"
msgstr ""
"<div class=\"SIntrapara\">Возвращаясь к идее, что использование \n"
"<span class=\"RktSym\">contains-flatt?</span> занимает в среднем «порядка \n"
"<img src=\"i5-6_files/pict_239.png\" alt=\"image\" width=\"20\" height="
"\"12\"> шагов», \n"
"приводит нас к еще одной характеристике абстрактного времени выполнения. "
"Поскольку она \n"
"игнорирует точное время, необходимое для вычисления простых шагов вычислений "
"- проверка \n"
"предикатов, выбор значений, выбор условий <span class=\"RktSym\"><a href="
"\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28form._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._cond%29%29\" class="
"\"RktStxLink\" data-pltdoc=\"x\">cond</a></span> - мы можем\n"
"отбросить деление на  <span style=\"font-style: italic\"></span>2<span style="
"\"font-style: italic\"></span>. Вот почему. Предполагается, что каждый "
"базовый шаг занимает  \n"
"<span style=\"font-style: italic\">k</span> единиц времени, что означает \n"
"<span class=\"RktSym\">contains-flatt?</span> занимает время\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCentered\">"

#: in_1/i5-6.html:233
msgid ""
"<p><img src=\"i5-6_files/pict_240.png\" alt=\"image\" width=\"45\" height="
"\"15\"></p>"
msgstr ""

#: in_1/i5-6.html:238
msgid ""
"</blockquote></div><div class=\"SIntrapara\">If you had a newer computer, "
"these basic computations may run twice as\n"
" fast, in which case we would use <img src=\"i5-6_files/pict_241.png\" alt="
"\"image\" width=\"19\" height=\"12\"> as the constant for basic\n"
" work. Let’s call this constant <span style=\"font-style: italic\">c</span> "
"and calculate:\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCentered\">"
msgstr ""
"</blockquote></div><div class=\"SIntrapara\">Если бы у вас был более новый "
"компьютер, эти \n"
"базовые вычисления могли бы выполняться в два раза быстрее, и в этом случае "
"мы использовали \n"
"бы <img src=\"i5-6_files/pict_241.png\" alt=\"image\" width=\"19\" height="
"\"12\"> в качестве константы \n"
"для базовой работы. Назовем эту константу <span style=\"font-style: italic"
"\">c</span>и вычислим: \n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCentered\">"

#: in_1/i5-6.html:240
msgid ""
"<p><img src=\"i5-6_files/pict_242.png\" alt=\"image\" width=\"135\" height="
"\"15\"></p>"
msgstr ""

#: in_1/i5-6.html:243
msgid ""
"</blockquote></div><div class=\"SIntrapara\">that is, the abstract running "
"time is always <span style=\"font-style: italic\">n</span> multiplied by a\n"
" constant, and that’s all that matters to say “on the order of <span style="
"\"font-style: italic\">n</span>.”</div>"
msgstr ""
"</blockquote></div><div class=\"SIntrapara\">то есть абстрактное время "
"работы всегда умножается \n"
"на константу <span style=\"font-style: italic\">n</span>, и это все, что "
"имеет значение, чтобы \n"
"сказать “в порядке <span style=\"font-style: italic\">n</span>.”</div>"

#: in_1/i5-6.html:245
msgctxt "in_1/i5-6.html:245"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:249
msgctxt "in_1/i5-6.html:249"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:258
msgid ""
"<div class=\"SIntrapara\">Now consider our sorting program from <a href="
"\"part_two.html#%28counter._%28figure._fig~3asort%29%29\" data-pltdoc=\"x"
"\">figure&nbsp;<span class=\"FigureRef\">72</span></a>. Here is a\n"
" hand-evaluation for a small input, listing all recursive steps:\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCodeFlow\"><table class="
"\"RktBlk\" cellspacing=\"0\" cellpadding=\"0\"><tbody><tr><td><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._sort%29%29\" class="
"\"RktValLink\" data-pltdoc=\"x\">sort</a></span><span class=\"hspace\">&nbsp;"
"</span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href="
"\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-"
"intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._list"
"%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">list</a></span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktVal\">3</span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktVal\">1</span><span class=\"hspace\">&nbsp;"
"</span><span class=\"RktVal\">2</span><span class=\"RktPn\">)</span><span "
"class=\"RktPn\">)</span></td></tr><tr><td><span class=\"RktSym\">==</"
"span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span "
"class=\"RktSym\">insert</span><span class=\"hspace\">&nbsp;</span><span "
"class=\"RktVal\">3</span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._sort%29%29\" class="
"\"RktValLink\" data-pltdoc=\"x\">sort</a></span><span class=\"hspace\">&nbsp;"
"</span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href="
"\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-"
"intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._list"
"%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">list</a></span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktVal\">1</span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktVal\">2</span><span class=\"RktPn\">)</"
"span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span></td></"
"tr><tr><td><span class=\"RktSym\">==</span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktPn\">(</span><span class=\"RktSym\">insert</span><span "
"class=\"hspace\">&nbsp;</span><span class=\"RktVal\">3</span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym"
"\">insert</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal"
"\">1</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</"
"span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-"
"langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib._lang"
"%2Fhtdp-intermediate-lambda..rkt%29._sort%29%29\" class=\"RktValLink\" data-"
"pltdoc=\"x\">sort</a></span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._list%29%29\" class="
"\"RktValLink\" data-pltdoc=\"x\">list</a></span><span class=\"hspace\">&nbsp;"
"</span><span class=\"RktVal\">2</span><span class=\"RktPn\">)</span><span "
"class=\"RktPn\">)</span><span class=\"RktPn\">)</span><span class=\"RktPn"
"\">)</span></td></tr><tr><td><span class=\"RktSym\">==</span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym"
"\">insert</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal"
"\">3</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</"
"span><span class=\"RktSym\">insert</span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktVal\">1</span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktPn\">(</span><span class=\"RktSym\">insert</span><span "
"class=\"hspace\">&nbsp;</span><span class=\"RktVal\">2</span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym"
"\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#"
"%28def._htdp-intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-"
"lambda..rkt%29._sort%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">sort</"
"a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</"
"span><span class=\"RktVal\">(</span><span class=\"RktVal\">)</span><span "
"class=\"RktPn\">)</span><span class=\"RktPn\">)</span><span class=\"RktPn"
"\">)</span><span class=\"RktPn\">)</span></td></tr><tr><td><span class="
"\"RktSym\">==</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn"
"\">(</span><span class=\"RktSym\">insert</span><span class=\"hspace\">&nbsp;"
"</span><span class=\"RktVal\">3</span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktPn\">(</span><span class=\"RktSym\">insert</span><span "
"class=\"hspace\">&nbsp;</span><span class=\"RktVal\">1</span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym"
"\">insert</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal"
"\">2</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</"
"span><span class=\"RktVal\">(</span><span class=\"RktVal\">)</span><span "
"class=\"RktPn\">)</span><span class=\"RktPn\">)</span><span class=\"RktPn"
"\">)</span></td></tr><tr><td><span class=\"RktSym\">==</span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym"
"\">insert</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal"
"\">3</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</"
"span><span class=\"RktSym\">insert</span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktVal\">1</span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://"
"docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-"
"intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._list"
"%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">list</a></span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktVal\">2</span><span class=\"RktPn"
"\">)</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span></"
"td></tr><tr><td><span class=\"RktSym\">==</span><span class=\"hspace\">&nbsp;"
"</span><span class=\"RktPn\">(</span><span class=\"RktSym\">insert</"
"span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">3</"
"span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span "
"class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/"
"intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib._lang"
"%2Fhtdp-intermediate-lambda..rkt%29._cons%29%29\" class=\"RktValLink\" data-"
"pltdoc=\"x\">cons</a></span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktVal\">2</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn"
"\">(</span><span class=\"RktSym\">insert</span><span class=\"hspace\">&nbsp;"
"</span><span class=\"RktVal\">1</span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktVal\">'</span><span class=\"RktVal\">(</span><span "
"class=\"RktVal\">)</span><span class=\"RktPn\">)</span><span class=\"RktPn"
"\">)</span><span class=\"RktPn\">)</span></td></tr><tr><td><span class="
"\"RktSym\">==</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn"
"\">(</span><span class=\"RktSym\">insert</span><span class=\"hspace\">&nbsp;"
"</span><span class=\"RktVal\">3</span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://"
"docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-"
"intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._list"
"%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">list</a></span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktVal\">2</span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktVal\">1</span><span class=\"RktPn\">)</"
"span><span class=\"RktPn\">)</span></td></tr><tr><td><span class=\"RktSym"
"\">==</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</"
"span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-"
"langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib._lang"
"%2Fhtdp-intermediate-lambda..rkt%29._list%29%29\" class=\"RktValLink\" data-"
"pltdoc=\"x\">list</a></span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktVal\">3</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal"
"\">2</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">1</"
"span><span class=\"RktPn\">)</span></td></tr></tbody></table></blockquote></"
"div><div class=\"SIntrapara\">The evaluation shows how <span class=\"RktSym"
"\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#"
"%28def._htdp-intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-"
"lambda..rkt%29._sort%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">sort</"
"a></span> traverses the given list and how it\n"
" sets up an application of <span class=\"RktSym\">insert</span> for each "
"number in the list. Put\n"
" differently, <span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/"
"htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib."
"_lang%2Fhtdp-intermediate-lambda..rkt%29._sort%29%29\" class=\"RktValLink\" "
"data-pltdoc=\"x\">sort</a></span> is a two-phase program.  During the first "
"one,\n"
" the recursive steps for <span class=\"RktSym\"><a href=\"https://docs."
"racket-lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-"
"lambda._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._sort%29%29\" "
"class=\"RktValLink\" data-pltdoc=\"x\">sort</a></span> set up as many "
"applications of\n"
" <span class=\"RktSym\">insert</span> as there are items in the list. During "
"the second phase,\n"
" each application of <span class=\"RktSym\">insert</span> traverses a sorted "
"list.</div>"
msgstr ""
"<div class=\"SIntrapara\">Теперь рассмотрим нашу программу сортировки из \n"
"<a href=\"part_two.html#%28counter._%28figure._fig~3asort%29%29\" data-"
"pltdoc=\"x\">рисунка&nbsp;<span class=\"FigureRef\">72</span></a>. Вот "
"ручное вычисление небольшого ввода со списком всех\n"
" рекурсивных шагов: \n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCodeFlow\"><table class="
"\"RktBlk\" cellspacing=\"0\" cellpadding=\"0\"><tbody><tr><td><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._sort%29%29\" class="
"\"RktValLink\" data-pltdoc=\"x\">sort</a></span><span class=\"hspace\">&nbsp;"
"</span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href="
"\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-"
"intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._list"
"%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">list</a></span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktVal\">3</span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktVal\">1</span><span class=\"hspace\">&nbsp;"
"</span><span class=\"RktVal\">2</span><span class=\"RktPn\">)</span><span "
"class=\"RktPn\">)</span></td></tr><tr><td><span class=\"RktSym\">==</"
"span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span "
"class=\"RktSym\">insert</span><span class=\"hspace\">&nbsp;</span><span "
"class=\"RktVal\">3</span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._sort%29%29\" class="
"\"RktValLink\" data-pltdoc=\"x\">sort</a></span><span class=\"hspace\">&nbsp;"
"</span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href="
"\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-"
"intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._list"
"%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">list</a></span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktVal\">1</span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktVal\">2</span><span class=\"RktPn\">)</"
"span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span></td></"
"tr><tr><td><span class=\"RktSym\">==</span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktPn\">(</span><span class=\"RktSym\">insert</span><span "
"class=\"hspace\">&nbsp;</span><span class=\"RktVal\">3</span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym"
"\">insert</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal"
"\">1</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</"
"span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-"
"langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib._lang"
"%2Fhtdp-intermediate-lambda..rkt%29._sort%29%29\" class=\"RktValLink\" data-"
"pltdoc=\"x\">sort</a></span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._list%29%29\" class="
"\"RktValLink\" data-pltdoc=\"x\">list</a></span><span class=\"hspace\">&nbsp;"
"</span><span class=\"RktVal\">2</span><span class=\"RktPn\">)</span><span "
"class=\"RktPn\">)</span><span class=\"RktPn\">)</span><span class=\"RktPn"
"\">)</span></td></tr><tr><td><span class=\"RktSym\">==</span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym"
"\">insert</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal"
"\">3</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</"
"span><span class=\"RktSym\">insert</span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktVal\">1</span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktPn\">(</span><span class=\"RktSym\">insert</span><span "
"class=\"hspace\">&nbsp;</span><span class=\"RktVal\">2</span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym"
"\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#"
"%28def._htdp-intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-"
"lambda..rkt%29._sort%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">sort</"
"a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</"
"span><span class=\"RktVal\">(</span><span class=\"RktVal\">)</span><span "
"class=\"RktPn\">)</span><span class=\"RktPn\">)</span><span class=\"RktPn"
"\">)</span><span class=\"RktPn\">)</span></td></tr><tr><td><span class="
"\"RktSym\">==</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn"
"\">(</span><span class=\"RktSym\">insert</span><span class=\"hspace\">&nbsp;"
"</span><span class=\"RktVal\">3</span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktPn\">(</span><span class=\"RktSym\">insert</span><span "
"class=\"hspace\">&nbsp;</span><span class=\"RktVal\">1</span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym"
"\">insert</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal"
"\">2</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</"
"span><span class=\"RktVal\">(</span><span class=\"RktVal\">)</span><span "
"class=\"RktPn\">)</span><span class=\"RktPn\">)</span><span class=\"RktPn"
"\">)</span></td></tr><tr><td><span class=\"RktSym\">==</span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym"
"\">insert</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal"
"\">3</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</"
"span><span class=\"RktSym\">insert</span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktVal\">1</span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://"
"docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-"
"intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._list"
"%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">list</a></span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktVal\">2</span><span class=\"RktPn"
"\">)</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span></"
"td></tr><tr><td><span class=\"RktSym\">==</span><span class=\"hspace\">&nbsp;"
"</span><span class=\"RktPn\">(</span><span class=\"RktSym\">insert</"
"span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">3</"
"span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span "
"class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/"
"intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib._lang"
"%2Fhtdp-intermediate-lambda..rkt%29._cons%29%29\" class=\"RktValLink\" data-"
"pltdoc=\"x\">cons</a></span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktVal\">2</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn"
"\">(</span><span class=\"RktSym\">insert</span><span class=\"hspace\">&nbsp;"
"</span><span class=\"RktVal\">1</span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktVal\">'</span><span class=\"RktVal\">(</span><span "
"class=\"RktVal\">)</span><span class=\"RktPn\">)</span><span class=\"RktPn"
"\">)</span><span class=\"RktPn\">)</span></td></tr><tr><td><span class="
"\"RktSym\">==</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn"
"\">(</span><span class=\"RktSym\">insert</span><span class=\"hspace\">&nbsp;"
"</span><span class=\"RktVal\">3</span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://"
"docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-"
"intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._list"
"%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">list</a></span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktVal\">2</span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktVal\">1</span><span class=\"RktPn\">)</"
"span><span class=\"RktPn\">)</span></td></tr><tr><td><span class=\"RktSym"
"\">==</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</"
"span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-"
"langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib._lang"
"%2Fhtdp-intermediate-lambda..rkt%29._list%29%29\" class=\"RktValLink\" data-"
"pltdoc=\"x\">list</a></span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktVal\">3</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal"
"\">2</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">1</"
"span><span class=\"RktPn\">)</span></td></tr></tbody></table></blockquote></"
"div><div class=\"SIntrapara\">\n"
"Вычисление показывает, как <span class=\"RktSym\"><a href=\"https://docs."
"racket-lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-"
"lambda._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._sort%29%29\" "
"class=\"RktValLink\" data-pltdoc=\"x\">sort</a></span> перемещается \n"
"по заданному списку и как она устанавливает применение  <span class=\"RktSym"
"\">insert</span>\n"
"для каждого числа в списке. Иными словами, <span class=\"RktSym\"><a href="
"\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-"
"intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._sort"
"%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">sort</a></span>\n"
" - это двухэтапная программа. На первом этапе рекурсивные шаги для <span "
"class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/"
"intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib._lang"
"%2Fhtdp-intermediate-lambda..rkt%29._sort%29%29\" class=\"RktValLink\" data-"
"pltdoc=\"x\">sort</a></span> устанавливают столько применений <span class="
"\"RktSym\">insert</span>,\n"
"сколько элементов в списке. На втором этапе каждое применение \n"
"<span class=\"RktSym\">insert</span> проходит отсортированный список.</div>"

#: in_1/i5-6.html:260
msgctxt "in_1/i5-6.html:260"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:270
msgid ""
"<p>Inserting an item is similar to finding one, so it is not surprising\n"
" that the performance of <span class=\"RktSym\">insert</span> and <span "
"class=\"RktSym\">contains-flatt?</span> are\n"
" alike. The applications of <span class=\"RktSym\">insert</span> to a list "
"of <span style=\"font-style: italic\">l</span> items\n"
" triggers between <span style=\"font-style: italic\"></span>0<span style="
"\"font-style: italic\"></span> and <span style=\"font-style: italic\">l</"
"span> recursive steps. On the average, we\n"
" assume it requires <span style=\"font-style: italic\">l/</span>2<span style="
"\"font-style: italic\"></span>, which means\n"
" that <span class=\"RktSym\">insert</span> takes “on the order of <span "
"style=\"font-style: italic\">l</span> steps” where\n"
" <span style=\"font-style: italic\">l</span> is the length of the given list."
"</p>"
msgstr ""
"<p>Вставка элемента похожа на его поиск, поэтому неудивительно, что "
"производительность \n"
"<span class=\"RktSym\">insert</span> и <span class=\"RktSym\">contains-flatt?"
"</span> похожи. \n"
"Применение <span class=\"RktSym\">insert</span> к списку из <span style="
"\"font-style: italic\">l</span>\n"
"элементов запускается между <span style=\"font-style: italic\"></span>0<span "
"style=\"font-style: italic\"></span> и <span style=\"font-style: italic\">l</"
"span> рекурсивными шагами. В среднем мы\n"
"предполагаем, что для этого требуется <span style=\"font-style: italic\">l/</"
"span>2<span style=\"font-style: italic\"></span>, что означает, что <span "
"class=\"RktSym\">insert</span> занимает «порядка \n"
"<span style=\"font-style: italic\">l</span> шагов», где <span style=\"font-"
"style: italic\">l</span>\n"
" - длина данного списка.\n"
"</p>"

#: in_1/i5-6.html:274
msgctxt "in_1/i5-6.html:274"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:281
msgid ""
"<div class=\"SIntrapara\">The question is how long these lists are to which "
"<span class=\"RktSym\">insert</span> adds\n"
" numbers. Generalizing from the above calculation, we can see that the\n"
" first one is <img src=\"i5-6_files/pict_243.png\" alt=\"image\" width="
"\"29\" height=\"9\"> items long, the second one <img src=\"i5-6_files/"
"pict_244.png\" alt=\"image\" width=\"29\" height=\"9\">, and so\n"
" on, all the way down to the empty list. Hence, we get that <span class="
"\"RktSym\">insert</span>\n"
" performs\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCentered\">"
msgstr ""
"<div class=\"SIntrapara\">Вопрос в том, какова длина этих списков, к "
"которым \n"
"<span class=\"RktSym\">insert</span> добавляет числа. Обобщая приведенный "
"выше расчет, \n"
"мы можем видеть, что первый - это  длинные элементы <img src=\"i5-6_files/"
"pict_243.png\" alt=\"image\" width=\"29\" height=\"9\">, второй - <img src="
"\"i5-6_files/pict_244.png\" alt=\"image\" width=\"29\" height=\"9\"> и так "
"далее, вплоть до пустого списка. Следовательно, мы получаем, что \n"
"<span class=\"RktSym\">insert</span> выполняет \n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCentered\">"

#: in_1/i5-6.html:283
msgid ""
"<p><img src=\"i5-6_files/pict_245.png\" alt=\"image\" width=\"365\" height="
"\"17\"></p>"
msgstr ""

#: in_1/i5-6.html:286
msgid ""
"</blockquote></div><div class=\"SIntrapara\">meaning\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCentered\">"
msgstr ""
"</blockquote></div><div class=\"SIntrapara\">имея в виду\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCentered\">"

#: in_1/i5-6.html:288
msgid ""
"<p><img src=\"i5-6_files/pict_246.png\" alt=\"image\" width=\"68\" height="
"\"15\"></p>"
msgstr ""

#: in_1/i5-6.html:294
msgid ""
"</blockquote></div><div class=\"SIntrapara\">represents the best “guess” at "
"the average number of insertion steps.\n"
" In this last term, <span style=\"font-style: italic\">n</span><span style="
"\"vertical-align: super; font-size: 80%\"><span style=\"font-style: italic"
"\"></span>2<span style=\"font-style: italic\"></span></span><span style="
"\"font-style: italic\"></span> is the dominant factor, and so we say that a\n"
" sorting process takes “on the order of <span style=\"font-style: italic"
"\">n</span><span style=\"vertical-align: super; font-size: 80%\"><span style="
"\"font-style: italic\"></span>2<span style=\"font-style: italic\"></span></"
"span><span style=\"font-style: italic\"></span> steps.”\n"
" <a href=\"#%28counter._%28exercise._ex~3abig-o1%29%29\" data-pltdoc=\"x"
"\">Exercise&nbsp;486</a> ask you to argue why it is correct to simplify "
"this\n"
" claim in this way.</div>"
msgstr ""
"</blockquote></div><div class=\"SIntrapara\">представляет собой наилучшую "
"«догадку» при среднем\n"
"количестве шагов вставки. В этом последнем члене <span style=\"font-style: "
"italic\">n</span><span style=\"vertical-align: super; font-size: 80%\"><span "
"style=\"font-style: italic\"></span>2<span style=\"font-style: italic\"></"
"span></span><span style=\"font-style: italic\"></span> является\n"
"доминирующим фактором, и поэтому мы говорим, что процесс сортировки занимает "
"«порядка \n"
"<span style=\"font-style: italic\">n</span><span style=\"vertical-align: "
"super; font-size: 80%\"><span style=\"font-style: italic\"></span>2<span "
"style=\"font-style: italic\"></span></span><span style=\"font-style: italic"
"\"></span> шагов». В \n"
"<a href=\"#%28counter._%28exercise._ex~3abig-o1%29%29\" data-pltdoc=\"x"
"\">упражнении&nbsp;486</a> \n"
"вас попросят аргументировать, почему правильно упрощать это утверждение "
"таким образом.\n"
"</div>"

#: in_1/i5-6.html:296
msgctxt "in_1/i5-6.html:296"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:300
msgid ""
"<p>See <a href=\"#%28counter._%28exercise._ex~3abig-o1%29%29\" data-pltdoc="
"\"x\">exercise&nbsp;486</a> for why this is the case.</p>"
msgstr ""
"<p>См. <a href=\"#%28counter._%28exercise._ex~3abig-o1%29%29\" data-pltdoc="
"\"x\">Упражнение&nbsp;486</a>, чтобы узнать, почему это так. </p>"

#: in_1/i5-6.html:309
msgid ""
"<p>We can also proceed with less formalism and rigor. Because <span class="
"\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-"
"lam.html#%28def._htdp-intermediate-lambda._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._sort%29%29\" class=\"RktValLink\" data-pltdoc="
"\"x\">sort</a></span>\n"
" uses <span class=\"RktSym\">insert</span> once per item on the list, we get "
"an “order of\n"
" <span style=\"font-style: italic\">n</span>” <span class=\"RktSym\">insert</"
"span> steps where <span style=\"font-style: italic\">n</span> is the size of "
"the\n"
" list. Since <span class=\"RktSym\">insert</span> needs <img src="
"\"i5-6_files/pict_247.png\" alt=\"image\" width=\"20\" height=\"12\"> steps, "
"we now see that a\n"
" sorting process needs <img src=\"i5-6_files/pict_248.png\" alt=\"image\" "
"width=\"36\" height=\"12\"> steps or “on the order of\n"
" <span style=\"font-style: italic\">n</span><span style=\"vertical-align: "
"super; font-size: 80%\"><span style=\"font-style: italic\"></span>2<span "
"style=\"font-style: italic\"></span></span><span style=\"font-style: italic"
"\"></span>.”</p>"
msgstr ""
"<p>Мы также можем придерживаться меньшего формализма и строгости. Поскольку "
"<span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/"
"intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib._lang"
"%2Fhtdp-intermediate-lambda..rkt%29._sort%29%29\" class=\"RktValLink\" data-"
"pltdoc=\"x\">sort</a></span> использует <span class=\"RktSym\">insert</"
"span>\n"
"один раз для каждого элемента в списке, мы получаем «порядок \n"
"<span style=\"font-style: italic\">n</span>» шагов вставки, где <span style="
"\"font-style: italic\">n</span> - размер списка. Поскольку для <span class="
"\"RktSym\">insert</span> требуются шаги\n"
"<img src=\"i5-6_files/pict_247.png\" alt=\"image\" width=\"20\" height="
"\"12\">, теперь мы видим, что \n"
"для процесса сортировки требуются шаги \n"
"<img src=\"i5-6_files/pict_248.png\" alt=\"image\" width=\"36\" height="
"\"12\"> или «порядка \n"
"<span style=\"font-style: italic\">n</span><span style=\"vertical-align: "
"super; font-size: 80%\"><span style=\"font-style: italic\"></span>2<span "
"style=\"font-style: italic\"></span></span><span style=\"font-style: italic"
"\"></span>».\n"
" </p>"

#: in_1/i5-6.html:313
msgctxt "in_1/i5-6.html:313"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:318
msgid ""
"<div class=\"SIntrapara\">Totaling it all up, we get that <span class="
"\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-"
"lam.html#%28def._htdp-intermediate-lambda._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._sort%29%29\" class=\"RktValLink\" data-pltdoc="
"\"x\">sort</a></span> takes on the “order of\n"
" <span style=\"font-style: italic\">n</span> steps” plus <span style=\"font-"
"style: italic\">n</span><span style=\"vertical-align: super; font-size: 80%"
"\"><span style=\"font-style: italic\"></span>2<span style=\"font-style: "
"italic\"></span></span><span style=\"font-style: italic\"></span> recursive "
"steps in <span class=\"RktSym\">insert</span> for a\n"
" list of <span style=\"font-style: italic\">n</span> items, which yields\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCentered\">"
msgstr ""
"<div class=\"SIntrapara\">Суммируя все это, мы получаем, что <span class="
"\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-"
"lam.html#%28def._htdp-intermediate-lambda._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._sort%29%29\" class=\"RktValLink\" data-pltdoc="
"\"x\">sort</a></span> выполняет «порядок из <span style=\"font-style: italic"
"\">n</span> шагов»\n"
"плюс <span style=\"font-style: italic\">n</span><span style=\"vertical-"
"align: super; font-size: 80%\"><span style=\"font-style: italic\"></"
"span>2<span style=\"font-style: italic\"></span></span><span style=\"font-"
"style: italic\"></span> рекурсивных шагов в <span class=\"RktSym\">insert</"
"span> \n"
"для списка из <span style=\"font-style: italic\">n</span> элементов, что "
"дает \n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCentered\">"

#: in_1/i5-6.html:320
msgid ""
"<p><img src=\"i5-6_files/pict_249.png\" alt=\"image\" width=\"35\" height="
"\"11\"></p>"
msgstr ""

#: in_1/i5-6.html:324
msgid ""
"</blockquote></div><div class=\"SIntrapara\">steps. See again <a href=\"#"
"%28counter._%28exercise._ex~3abig-o1%29%29\" data-pltdoc=\"x"
"\">exercise&nbsp;486</a> for details.\n"
" <span style=\"font-weight: bold\">Note</span> This analysis assumes that "
"comparing two items on the list\n"
" takes a fixed amount of time. <span style=\"font-weight: bold\">End</span></"
"div>"
msgstr ""
"</blockquote></div><div class=\"SIntrapara\">шагов. Снова см. \n"
"<a href=\"#%28counter._%28exercise._ex~3abig-o1%29%29\" data-pltdoc=\"x"
"\">Упражнение&nbsp;486</a> \n"
"для подробностей. <span style=\"font-weight: bold\">Примечание</span> Этот "
"анализ предполагает, \n"
"что сравнение двух элементов в списке занимает фиксированное время. \n"
" <span style=\"font-weight: bold\">Конец</span></div>"

#: in_1/i5-6.html:326
msgctxt "in_1/i5-6.html:326"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:330
msgctxt "in_1/i5-6.html:330"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:333
msgid ""
"<div class=\"SIntrapara\">Our final example is the <span class=\"RktSym"
"\">inf</span> program from <a href=\"part_three.html#%28part._sec~3alocal-"
"definitions%29\" data-pltdoc=\"x\">Local Definitions</a>:<a name=\"(idx."
"_(gentag._697))\"></a>\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCodeFlow\"><table class="
"\"RktBlk\" cellspacing=\"0\" cellpadding=\"0\"><tbody><tr><td><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._define%29%29\" class=\"RktStxLink\" data-pltdoc="
"\"x\">define</a></span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktPn\">(</span><span class=\"RktSym\">inf</span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktSym\">l</span><span class=\"RktPn\">)</"
"span></td></tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;</span><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._cond%29%29\" class=\"RktStxLink\" data-pltdoc="
"\"x\">cond</a></span></td></tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;"
"&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class=\"RktPn\">(</"
"span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-"
"langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib._lang"
"%2Fhtdp-intermediate-lambda..rkt%29._empty~3f%29%29\" class=\"RktValLink\" "
"data-pltdoc=\"x\">empty?</a></span><span class=\"hspace\">&nbsp;</span><span "
"class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-"
"lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._rest%29%29\" class="
"\"RktValLink\" data-pltdoc=\"x\">rest</a></span><span class=\"hspace\">&nbsp;"
"</span><span class=\"RktSym\">l</span><span class=\"RktPn\">)</span><span "
"class=\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._first%29%29\" class="
"\"RktValLink\" data-pltdoc=\"x\">first</a></span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktSym\">l</span><span class=\"RktPn\">)</"
"span><span class=\"RktPn\">]</span></td></tr><tr><td><span class=\"hspace"
"\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class="
"\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-"
"lam.html#%28form._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._else"
"%29%29\" class=\"RktStxLink\" data-pltdoc=\"x\">else</a></span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym"
"\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#"
"%28form._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._if%29%29\" "
"class=\"RktStxLink\" data-pltdoc=\"x\">if</a></span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href="
"\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-"
"intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._~3c"
"%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">&lt;</a></span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym"
"\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#"
"%28def._htdp-intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-"
"lambda..rkt%29._first%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">first</"
"a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">l</"
"span><span class=\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span "
"class=\"RktPn\">(</span><span class=\"RktSym\">inf</span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href="
"\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-"
"intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._rest"
"%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">rest</a></span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktSym\">l</span><span class=\"RktPn"
"\">)</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span></"
"td></tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn"
"\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/"
"htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib."
"_lang%2Fhtdp-intermediate-lambda..rkt%29._first%29%29\" class=\"RktValLink\" "
"data-pltdoc=\"x\">first</a></span><span class=\"hspace\">&nbsp;</span><span "
"class=\"RktSym\">l</span><span class=\"RktPn\">)</span></td></"
"tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">(</"
"span><span class=\"RktSym\">inf</span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://"
"docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-"
"intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._rest"
"%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">rest</a></span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktSym\">l</span><span class=\"RktPn"
"\">)</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span><span "
"class=\"RktPn\">]</span><span class=\"RktPn\">)</span><span class=\"RktPn"
"\">)</span></td></tr></tbody></table></blockquote></div>"
msgstr ""
"<div class=\"SIntrapara\">Наш последний пример - это программа <span class="
"\"RktSym\">inf</span> \n"
"из <a href=\"part_three.html#%28part._sec~3alocal-definitions%29\" data-"
"pltdoc=\"x\">Локальные Определения</a>:\n"
"<a name=\"(idx._(gentag._697))\"></a>\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCodeFlow\"><table class="
"\"RktBlk\" cellspacing=\"0\" cellpadding=\"0\"><tbody><tr><td><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._define%29%29\" class=\"RktStxLink\" data-pltdoc="
"\"x\">define</a></span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktPn\">(</span><span class=\"RktSym\">inf</span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktSym\">l</span><span class=\"RktPn\">)</"
"span></td></tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;</span><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._cond%29%29\" class=\"RktStxLink\" data-pltdoc="
"\"x\">cond</a></span></td></tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;"
"&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class=\"RktPn\">(</"
"span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-"
"langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib._lang"
"%2Fhtdp-intermediate-lambda..rkt%29._empty~3f%29%29\" class=\"RktValLink\" "
"data-pltdoc=\"x\">empty?</a></span><span class=\"hspace\">&nbsp;</span><span "
"class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-"
"lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._rest%29%29\" class="
"\"RktValLink\" data-pltdoc=\"x\">rest</a></span><span class=\"hspace\">&nbsp;"
"</span><span class=\"RktSym\">l</span><span class=\"RktPn\">)</span><span "
"class=\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._first%29%29\" class="
"\"RktValLink\" data-pltdoc=\"x\">first</a></span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktSym\">l</span><span class=\"RktPn\">)</"
"span><span class=\"RktPn\">]</span></td></tr><tr><td><span class=\"hspace"
"\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class="
"\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-"
"lam.html#%28form._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._else"
"%29%29\" class=\"RktStxLink\" data-pltdoc=\"x\">else</a></span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym"
"\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#"
"%28form._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._if%29%29\" "
"class=\"RktStxLink\" data-pltdoc=\"x\">if</a></span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href="
"\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-"
"intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._~3c"
"%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">&lt;</a></span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym"
"\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#"
"%28def._htdp-intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-"
"lambda..rkt%29._first%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">first</"
"a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">l</"
"span><span class=\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span "
"class=\"RktPn\">(</span><span class=\"RktSym\">inf</span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href="
"\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-"
"intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._rest"
"%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">rest</a></span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktSym\">l</span><span class=\"RktPn"
"\">)</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span></"
"td></tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn"
"\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/"
"htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib."
"_lang%2Fhtdp-intermediate-lambda..rkt%29._first%29%29\" class=\"RktValLink\" "
"data-pltdoc=\"x\">first</a></span><span class=\"hspace\">&nbsp;</span><span "
"class=\"RktSym\">l</span><span class=\"RktPn\">)</span></td></"
"tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">(</"
"span><span class=\"RktSym\">inf</span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://"
"docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-"
"intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._rest"
"%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">rest</a></span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktSym\">l</span><span class=\"RktPn"
"\">)</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span><span "
"class=\"RktPn\">]</span><span class=\"RktPn\">)</span><span class=\"RktPn"
"\">)</span></td></tr></tbody></table></blockquote></div>"

#: in_1/i5-6.html:335
msgctxt "in_1/i5-6.html:335"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:339
msgctxt "in_1/i5-6.html:339"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:345
msgid ""
"<div class=\"SIntrapara\">Let’s start with a small input: <span class=\"RktPn"
"\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/"
"htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib."
"_lang%2Fhtdp-intermediate-lambda..rkt%29._list%29%29\" class=\"RktValLink\" "
"data-pltdoc=\"x\">list</a></span><span class=\"stt\"> </span><span class="
"\"RktVal\">3</span><span class=\"stt\"> </span><span class=\"RktVal\">2</"
"span><span class=\"stt\"> </span><span class=\"RktVal\">1</span><span class="
"\"stt\"> </span><span class=\"RktVal\">0</span><span class=\"RktPn\">)</"
"span>.  We know that the\n"
" result is <span class=\"RktVal\">0</span>. Here is the first important step "
"of a hand-evaluation:\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCodeFlow\"><table class="
"\"RktBlk\" cellspacing=\"0\" cellpadding=\"0\"><tbody><tr><td><span class="
"\"RktPn\">(</span><span class=\"RktSym\">inf</span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href="
"\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-"
"intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._list"
"%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">list</a></span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktVal\">3</span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktVal\">2</span><span class=\"hspace\">&nbsp;"
"</span><span class=\"RktVal\">1</span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktVal\">0</span><span class=\"RktPn\">)</span><span "
"class=\"RktPn\">)</span></td></tr><tr><td><span class=\"RktSym\">==</span></"
"td></tr><tr><td><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href="
"\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28form._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._if%29%29\" class="
"\"RktStxLink\" data-pltdoc=\"x\">if</a></span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://"
"docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-"
"intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._~3c"
"%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">&lt;</a></span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktVal\">3</span><span class=\"hspace"
"\">&nbsp;</span><span class=\"highlighted\"><span class=\"RktPn\">(</"
"span><span class=\"RktSym\">inf</span><span class=\"stt\"> </span><span "
"class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-"
"lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._list%29%29\" class="
"\"RktValLink\" data-pltdoc=\"x\">list</a></span><span class=\"stt\"> </"
"span><span class=\"RktVal\">2</span><span class=\"stt\"> </span><span class="
"\"RktVal\">1</span><span class=\"stt\"> </span><span class=\"RktVal\">0</"
"span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span></"
"span><span class=\"RktPn\">)</span></td></tr><tr><td><span class=\"hspace"
"\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktVal\">3</span></td></"
"tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="
"\"highlighted\"><span class=\"RktPn\">(</span><span class=\"RktSym\">inf</"
"span><span class=\"stt\"> </span><span class=\"RktPn\">(</span><span class="
"\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-"
"lam.html#%28def._htdp-intermediate-lambda._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._list%29%29\" class=\"RktValLink\" data-pltdoc="
"\"x\">list</a></span><span class=\"stt\"> </span><span class=\"RktVal\">2</"
"span><span class=\"stt\"> </span><span class=\"RktVal\">1</span><span class="
"\"stt\"> </span><span class=\"RktVal\">0</span><span class=\"RktPn\">)</"
"span><span class=\"RktPn\">)</span></span><span class=\"RktPn\">)</span></"
"td></tr></tbody></table></blockquote></div><div class=\"SIntrapara\">From "
"here, we must evaluate the first recursive call. Because the result is\n"
" <span class=\"RktVal\">0</span> and the condition is thus <span class="
"\"RktVal\">#false</span>, we must evaluate the\n"
" recursion in the else-branch as well.</div>"
msgstr ""
"<div class=\"SIntrapara\">Начнем с небольшого ввода: <span class=\"RktPn"
"\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/"
"htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib."
"_lang%2Fhtdp-intermediate-lambda..rkt%29._list%29%29\" class=\"RktValLink\" "
"data-pltdoc=\"x\">list</a></span><span class=\"stt\"> </span><span class="
"\"RktVal\">3</span><span class=\"stt\"> </span><span class=\"RktVal\">2</"
"span><span class=\"stt\"> </span><span class=\"RktVal\">1</span><span class="
"\"stt\"> </span><span class=\"RktVal\">0</span><span class=\"RktPn\">)</"
"span>. Мы знаем, что результат равен <span class=\"RktVal\">0</span>. \n"
"Вот первый важный шаг ручного вычисления: \n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCodeFlow\"><table class="
"\"RktBlk\" cellspacing=\"0\" cellpadding=\"0\"><tbody><tr><td><span class="
"\"RktPn\">(</span><span class=\"RktSym\">inf</span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href="
"\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-"
"intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._list"
"%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">list</a></span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktVal\">3</span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktVal\">2</span><span class=\"hspace\">&nbsp;"
"</span><span class=\"RktVal\">1</span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktVal\">0</span><span class=\"RktPn\">)</span><span "
"class=\"RktPn\">)</span></td></tr><tr><td><span class=\"RktSym\">==</span></"
"td></tr><tr><td><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href="
"\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28form._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._if%29%29\" class="
"\"RktStxLink\" data-pltdoc=\"x\">if</a></span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://"
"docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-"
"intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._~3c"
"%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">&lt;</a></span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktVal\">3</span><span class=\"hspace"
"\">&nbsp;</span><span class=\"highlighted\"><span class=\"RktPn\">(</"
"span><span class=\"RktSym\">inf</span><span class=\"stt\"> </span><span "
"class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-"
"lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._list%29%29\" class="
"\"RktValLink\" data-pltdoc=\"x\">list</a></span><span class=\"stt\"> </"
"span><span class=\"RktVal\">2</span><span class=\"stt\"> </span><span class="
"\"RktVal\">1</span><span class=\"stt\"> </span><span class=\"RktVal\">0</"
"span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span></"
"span><span class=\"RktPn\">)</span></td></tr><tr><td><span class=\"hspace"
"\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktVal\">3</span></td></"
"tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="
"\"highlighted\"><span class=\"RktPn\">(</span><span class=\"RktSym\">inf</"
"span><span class=\"stt\"> </span><span class=\"RktPn\">(</span><span class="
"\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-"
"lam.html#%28def._htdp-intermediate-lambda._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._list%29%29\" class=\"RktValLink\" data-pltdoc="
"\"x\">list</a></span><span class=\"stt\"> </span><span class=\"RktVal\">2</"
"span><span class=\"stt\"> </span><span class=\"RktVal\">1</span><span class="
"\"stt\"> </span><span class=\"RktVal\">0</span><span class=\"RktPn\">)</"
"span><span class=\"RktPn\">)</span></span><span class=\"RktPn\">)</span></"
"td></tr></tbody></table></blockquote></div><div class=\"SIntrapara\">Отсюда "
"мы должны вычислить первый рекурсивный вызов. Поскольку\n"
"результат равен <span class=\"RktVal\">0</span>, а условие, таким образом, "
"равно \n"
"<span class=\"RktVal\">#false</span>, мы также должны вычислить рекурсию в "
"ветке else.\n"
"</div>"

#: in_1/i5-6.html:347
msgctxt "in_1/i5-6.html:347"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:351
msgctxt "in_1/i5-6.html:351"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:355
msgid ""
"<div class=\"SIntrapara\">Once we do so, we see two evaluations of <span "
"class=\"RktPn\">(</span><span class=\"RktSym\">inf</span><span class=\"stt"
"\"> </span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href="
"\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-"
"intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._list"
"%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">list</a></span><span class="
"\"stt\"> </span><span class=\"RktVal\">1</span><span class=\"stt\"> </"
"span><span class=\"RktVal\">0</span><span class=\"RktPn\">)</span><span "
"class=\"RktPn\">)</span>:\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCodeFlow\"><table class="
"\"RktBlk\" cellspacing=\"0\" cellpadding=\"0\"><tbody><tr><td><span class="
"\"RktPn\">(</span><span class=\"RktSym\">inf</span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href="
"\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-"
"intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._list"
"%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">list</a></span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktVal\">2</span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktVal\">1</span><span class=\"hspace\">&nbsp;"
"</span><span class=\"RktVal\">0</span><span class=\"RktPn\">)</span><span "
"class=\"RktPn\">)</span></td></tr><tr><td><span class=\"RktSym\">==</span></"
"td></tr><tr><td><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href="
"\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28form._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._if%29%29\" class="
"\"RktStxLink\" data-pltdoc=\"x\">if</a></span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://"
"docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-"
"intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._~3c"
"%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">&lt;</a></span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktVal\">2</span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\">inf</"
"span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span "
"class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/"
"intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib._lang"
"%2Fhtdp-intermediate-lambda..rkt%29._list%29%29\" class=\"RktValLink\" data-"
"pltdoc=\"x\">list</a></span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktVal\">1</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal"
"\">0</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span><span "
"class=\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktVal\">2</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn"
"\">(</span><span class=\"RktSym\">inf</span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://"
"docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-"
"intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._list"
"%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">list</a></span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktVal\">1</span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktVal\">0</span><span class=\"RktPn\">)</"
"span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span></td></tr></"
"tbody></table></blockquote></div><div class=\"SIntrapara\">At this point we "
"can generalize the pattern and summarize it in a table:\n"
"</div><div class=\"SIntrapara\"><blockquote><table style=\"border-collapse: "
"collapse;\" cellspacing=\"0\" cellpadding=\"0\"><tbody><tr><td style="
"\"border-bottom: 1px solid black;\">"
msgstr ""
"<div class=\"SIntrapara\">Как только мы это сделаем, мы увидим два "
"вычисления \n"
"<span class=\"RktPn\">(</span><span class=\"RktSym\">inf</span><span class="
"\"stt\"> </span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href="
"\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-"
"intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._list"
"%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">list</a></span><span class="
"\"stt\"> </span><span class=\"RktVal\">1</span><span class=\"stt\"> </"
"span><span class=\"RktVal\">0</span><span class=\"RktPn\">)</span><span "
"class=\"RktPn\">)</span>:\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCodeFlow\"><table class="
"\"RktBlk\" cellspacing=\"0\" cellpadding=\"0\"><tbody><tr><td><span class="
"\"RktPn\">(</span><span class=\"RktSym\">inf</span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href="
"\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-"
"intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._list"
"%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">list</a></span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktVal\">2</span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktVal\">1</span><span class=\"hspace\">&nbsp;"
"</span><span class=\"RktVal\">0</span><span class=\"RktPn\">)</span><span "
"class=\"RktPn\">)</span></td></tr><tr><td><span class=\"RktSym\">==</span></"
"td></tr><tr><td><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href="
"\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28form._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._if%29%29\" class="
"\"RktStxLink\" data-pltdoc=\"x\">if</a></span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://"
"docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-"
"intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._~3c"
"%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">&lt;</a></span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktVal\">2</span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\">inf</"
"span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span "
"class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/"
"intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib._lang"
"%2Fhtdp-intermediate-lambda..rkt%29._list%29%29\" class=\"RktValLink\" data-"
"pltdoc=\"x\">list</a></span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktVal\">1</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal"
"\">0</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span><span "
"class=\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktVal\">2</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn"
"\">(</span><span class=\"RktSym\">inf</span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://"
"docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-"
"intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._list"
"%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">list</a></span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktVal\">1</span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktVal\">0</span><span class=\"RktPn\">)</"
"span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span></td></tr></"
"tbody></table></blockquote></div><div class=\"SIntrapara\">\n"
"На этом этапе мы можем обобщить паттерн и свести его в виде таблицы: \n"
"</div><div class=\"SIntrapara\"><blockquote><table style=\"border-collapse: "
"collapse;\" cellspacing=\"0\" cellpadding=\"0\"><tbody><tr><td style="
"\"border-bottom: 1px solid black;\">"

#: in_1/i5-6.html:357
msgid "<p>original expression</p>"
msgstr "<p>исходное выражение</p>"

#: in_1/i5-6.html:359
msgctxt "in_1/i5-6.html:359"
msgid "</td><td style=\"border-bottom: 1px solid black;\">"
msgstr ""

#: in_1/i5-6.html:361
msgctxt "in_1/i5-6.html:361"
msgid "<p><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p>"
msgstr ""

#: in_1/i5-6.html:363
msgctxt "in_1/i5-6.html:363"
msgid "</td><td style=\"border-bottom: 1px solid black;\">"
msgstr ""

#: in_1/i5-6.html:365
msgid "<p>requires two evaluations of</p>"
msgstr "<p>требует двух вычислений</p>"

#: in_1/i5-6.html:367
msgctxt "in_1/i5-6.html:367"
msgid "</td></tr><tr><td>"
msgstr ""

#: in_1/i5-6.html:369
msgid ""
"<p><span class=\"RktPn\">(</span><span class=\"RktSym\">inf</span><span "
"class=\"stt\"> </span><span class=\"RktPn\">(</span><span class=\"RktSym"
"\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#"
"%28def._htdp-intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-"
"lambda..rkt%29._list%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">list</"
"a></span><span class=\"stt\"> </span><span class=\"RktVal\">3</span><span "
"class=\"stt\"> </span><span class=\"RktVal\">2</span><span class=\"stt\"> </"
"span><span class=\"RktVal\">1</span><span class=\"stt\"> </span><span class="
"\"RktVal\">0</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</"
"span></p>"
msgstr ""

#: in_1/i5-6.html:371
msgctxt "in_1/i5-6.html:371"
msgid "</td><td>"
msgstr ""

#: in_1/i5-6.html:373
msgctxt "in_1/i5-6.html:373"
msgid "<p><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p>"
msgstr ""

#: in_1/i5-6.html:375
msgctxt "in_1/i5-6.html:375"
msgid "</td><td>"
msgstr ""

#: in_1/i5-6.html:377
msgctxt "in_1/i5-6.html:377"
msgid ""
"<p><span class=\"RktPn\">(</span><span class=\"RktSym\">inf</span><span "
"class=\"stt\"> </span><span class=\"RktPn\">(</span><span class=\"RktSym"
"\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#"
"%28def._htdp-intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-"
"lambda..rkt%29._list%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">list</"
"a></span><span class=\"stt\"> </span><span class=\"RktVal\">2</span><span "
"class=\"stt\"> </span><span class=\"RktVal\">1</span><span class=\"stt\"> </"
"span><span class=\"RktVal\">0</span><span class=\"RktPn\">)</span><span "
"class=\"RktPn\">)</span></p>"
msgstr ""

#: in_1/i5-6.html:379
msgctxt "in_1/i5-6.html:379"
msgid "</td></tr><tr><td>"
msgstr ""

#: in_1/i5-6.html:381
msgctxt "in_1/i5-6.html:381"
msgid ""
"<p><span class=\"RktPn\">(</span><span class=\"RktSym\">inf</span><span "
"class=\"stt\"> </span><span class=\"RktPn\">(</span><span class=\"RktSym"
"\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#"
"%28def._htdp-intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-"
"lambda..rkt%29._list%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">list</"
"a></span><span class=\"stt\"> </span><span class=\"RktVal\">2</span><span "
"class=\"stt\"> </span><span class=\"RktVal\">1</span><span class=\"stt\"> </"
"span><span class=\"RktVal\">0</span><span class=\"RktPn\">)</span><span "
"class=\"RktPn\">)</span></p>"
msgstr ""

#: in_1/i5-6.html:383
msgctxt "in_1/i5-6.html:383"
msgid "</td><td>"
msgstr ""

#: in_1/i5-6.html:385
msgctxt "in_1/i5-6.html:385"
msgid "<p><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p>"
msgstr ""

#: in_1/i5-6.html:387
msgctxt "in_1/i5-6.html:387"
msgid "</td><td>"
msgstr ""

#: in_1/i5-6.html:389
msgctxt "in_1/i5-6.html:389"
msgid ""
"<p><span class=\"RktPn\">(</span><span class=\"RktSym\">inf</span><span "
"class=\"stt\"> </span><span class=\"RktPn\">(</span><span class=\"RktSym"
"\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#"
"%28def._htdp-intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-"
"lambda..rkt%29._list%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">list</"
"a></span><span class=\"stt\"> </span><span class=\"RktVal\">1</span><span "
"class=\"stt\"> </span><span class=\"RktVal\">0</span><span class=\"RktPn"
"\">)</span><span class=\"RktPn\">)</span></p>"
msgstr ""

#: in_1/i5-6.html:391
msgctxt "in_1/i5-6.html:391"
msgid "</td></tr><tr><td>"
msgstr ""

#: in_1/i5-6.html:393
msgctxt "in_1/i5-6.html:393"
msgid ""
"<p><span class=\"RktPn\">(</span><span class=\"RktSym\">inf</span><span "
"class=\"stt\"> </span><span class=\"RktPn\">(</span><span class=\"RktSym"
"\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#"
"%28def._htdp-intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-"
"lambda..rkt%29._list%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">list</"
"a></span><span class=\"stt\"> </span><span class=\"RktVal\">1</span><span "
"class=\"stt\"> </span><span class=\"RktVal\">0</span><span class=\"RktPn"
"\">)</span><span class=\"RktPn\">)</span></p>"
msgstr ""

#: in_1/i5-6.html:395
msgctxt "in_1/i5-6.html:395"
msgid "</td><td>"
msgstr ""

#: in_1/i5-6.html:397
msgctxt "in_1/i5-6.html:397"
msgid "<p><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p>"
msgstr ""

#: in_1/i5-6.html:399
msgctxt "in_1/i5-6.html:399"
msgid "</td><td>"
msgstr ""

#: in_1/i5-6.html:401
msgid ""
"<p><span class=\"RktPn\">(</span><span class=\"RktSym\">inf</span><span "
"class=\"stt\"> </span><span class=\"RktPn\">(</span><span class=\"RktSym"
"\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#"
"%28def._htdp-intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-"
"lambda..rkt%29._list%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">list</"
"a></span><span class=\"stt\"> </span><span class=\"RktVal\">0</span><span "
"class=\"RktPn\">)</span><span class=\"RktPn\">)</span></p>"
msgstr ""

#: in_1/i5-6.html:408
msgid ""
"</td></tr></tbody></table></blockquote></div><div class=\"SIntrapara\">In "
"total, the hand-evaluation requires eight recursive steps for a list of\n"
"four items. If we added <span class=\"RktVal\">4</span> to the front of the "
"list, we would double the\n"
"number of recursive steps again. Speaking algebraically, <span class=\"RktSym"
"\">inf</span> needs\n"
"on the order of <span style=\"font-style: italic\"></span>2<span style="
"\"font-style: italic\"></span><span style=\"vertical-align: super; font-"
"size: 80%\"><span style=\"font-style: italic\">n</span></span><span style="
"\"font-style: italic\"></span> recursive steps for a list of <span style="
"\"font-style: italic\">n</span> numbers\n"
"when the last number is the maximum, which is clearly the worst case for\n"
"<span class=\"RktSym\">inf</span>.</div>"
msgstr ""
"</td></tr></tbody></table></blockquote></div><div class=\"SIntrapara\">В "
"общей сложности ручное\n"
"вычисление требует восьми рекурсивных шагов для списка из четырех элементов. "
"Если бы мы \n"
"добавили <span class=\"RktVal\">4</span> в начало списка, мы снова удвоили "
"бы количество \n"
"рекурсивных шагов. Говоря алгебраически, <span class=\"RktSym\">inf</span> "
"требуется порядка \n"
"<span style=\"font-style: italic\"></span>2<span style=\"font-style: italic"
"\"></span><span style=\"vertical-align: super; font-size: 80%\"><span style="
"\"font-style: italic\">n</span></span><span style=\"font-style: italic\"></"
"span> рекурсивных шагов для списка из \n"
"<span style=\"font-style: italic\">n</span> чисел, когда последнее число "
"является максимальным, \n"
"что явно является наихудшим случаем для <span class=\"RktSym\">inf</span>.</"
"div>"

#: in_1/i5-6.html:410
msgctxt "in_1/i5-6.html:410"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:416
msgid ""
"<p>Stop! If you paid close attention, you know that the above suggestion is\n"
"sloppy. The <span class=\"RktSym\">inf</span> program really just needs <img "
"src=\"i5-6_files/pict_250.png\" alt=\"image\" width=\"25\" height=\"10\">\n"
"recursive steps for a list of <span style=\"font-style: italic\">n</span> "
"items. What is going on?</p>"
msgstr ""
"<p>Стоп! Если вы обратили пристальное внимание, то знаете, что приведенное "
"выше предложение\n"
"неаккуратно. Программе <span class=\"RktSym\">inf</span> действительно нужны "
"рекурсивные шаги\n"
"<img src=\"i5-6_files/pict_250.png\" alt=\"image\" width=\"25\" height="
"\"10\"> для списка из \n"
"<span style=\"font-style: italic\">n</span> элементов. Что здесь происходит? "
"</p>"

#: in_1/i5-6.html:420
msgctxt "in_1/i5-6.html:420"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:426
msgid ""
"<div class=\"SIntrapara\">Remember that we don’t really measure the exact "
"time when we say “on the\n"
"order of.” Instead we skip over all built-in predicates,\n"
"selectors, constructors, arithmetic, and so on and focus on recursive\n"
"steps only. Now consider this calculation:\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCentered\">"
msgstr ""
"<div class=\"SIntrapara\">Помните, что на самом деле мы не измеряем точное "
"время, когда \n"
"говорим «порядка». Вместо этого мы пропускаем все встроенные предикаты, "
"селекторы, конструкторы,\n"
"арифметику и т. Д. И сосредотачиваемся только на рекурсивных шагах. Теперь "
"рассмотрим этот \n"
"расчет: \n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCentered\">"

#: in_1/i5-6.html:428
msgid ""
"<p><img src=\"i5-6_files/pict_251.png\" alt=\"image\" width=\"77\" height="
"\"15\"></p>"
msgstr ""

#: in_1/i5-6.html:436
msgid ""
"</blockquote></div><div class=\"SIntrapara\">It shows that <img src="
"\"i5-6_files/pict_252.png\" alt=\"image\" width=\"25\" height=\"10\"> and "
"<img src=\"i5-6_files/pict_253.png\" alt=\"image\" width=\"12\" height="
"\"8\"> differ by a small factor:\n"
" <span style=\"font-style: italic\"></span>2<span style=\"font-style: italic"
"\"></span>, meaning “on the order of <img src=\"i5-6_files/pict_254.png\" "
"alt=\"image\" width=\"25\" height=\"10\"> steps” describes\n"
" <span class=\"RktSym\">inf</span> in a world where all basic operations "
"provided by <span class=\"stt\">*SL</span> run\n"
" at half the speed when compared to an <span class=\"RktSym\">inf</span> "
"program that runs at\n"
" “the order of <img src=\"i5-6_files/pict_255.png\" alt=\"image\" width="
"\"12\" height=\"8\"> steps.” In this sense, the two expressions\n"
" really mean the same thing. The question is what exactly they mean, and\n"
" that is the subject of the next section.</div>"
msgstr ""
"</blockquote></div><div class=\"SIntrapara\">Оно показывает, что \n"
"<img src=\"i5-6_files/pict_252.png\" alt=\"image\" width=\"25\" height="
"\"10\"> и \n"
"<img src=\"i5-6_files/pict_253.png\" alt=\"image\" width=\"12\" height="
"\"8\"> различаются на небольшой\n"
"коэффициент: <span style=\"font-style: italic\"></span>2<span style=\"font-"
"style: italic\"></span>, \n"
"что означает «в порядке шагов <img src=\"i5-6_files/pict_254.png\" alt="
"\"image\" width=\"25\" height=\"10\">», описывает <span class=\"RktSym"
"\">inf</span> в мире, где все базовые операции,\n"
"предоставляемые <span class=\"stt\">*SL</span>, выполняются на половину "
"скорости по сравнению с\n"
"программой <span class=\"RktSym\">inf</span>, которая работает на «Порядок "
"<img src=\"i5-6_files/pict_255.png\" alt=\"image\" width=\"12\" height="
"\"8\"> шагов». В этом смысле два выражения \n"
"действительно означают одно и то же. Вопрос в том, что именно они означают, "
"и это тема \n"
"следующего раздела.</div>"

#: in_1/i5-6.html:438
msgctxt "in_1/i5-6.html:438"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:442
msgctxt "in_1/i5-6.html:442"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:452
msgid ""
"<div class=\"SIntrapara\"><a name=\"(counter._(exercise._ex~3aorder-"
"of-0))\"></a><span style=\"font-weight: bold\">Exercise</span>&nbsp;484. "
"While a list sorted in descending order is\n"
" clearly the worst possible input for <span class=\"RktSym\">inf</span>, the "
"analysis of\n"
" <span class=\"RktSym\">inf</span>’s abstract running time explains why the "
"rewrite of\n"
" <span class=\"RktSym\">inf</span> with <span class=\"RktSym\"><a href="
"\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28form._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._local%29%29\" class="
"\"RktStxLink\" data-pltdoc=\"x\">local</a></span> reduces the running time. "
"For\n"
" convenience, we replicate this version here: <a name=\"(idx._(gentag."
"_698))\"></a>\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCodeFlow\"><table class="
"\"RktBlk\" cellspacing=\"0\" cellpadding=\"0\"><tbody><tr><td><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._define%29%29\" class=\"RktStxLink\" data-pltdoc="
"\"x\">define</a></span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktPn\">(</span><span class=\"RktSym\">infL</span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktSym\">l</span><span class=\"RktPn\">)</"
"span></td></tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;</span><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._cond%29%29\" class=\"RktStxLink\" data-pltdoc="
"\"x\">cond</a></span></td></tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;"
"&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class=\"RktPn\">(</"
"span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-"
"langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib._lang"
"%2Fhtdp-intermediate-lambda..rkt%29._empty~3f%29%29\" class=\"RktValLink\" "
"data-pltdoc=\"x\">empty?</a></span><span class=\"hspace\">&nbsp;</span><span "
"class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-"
"lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._rest%29%29\" class="
"\"RktValLink\" data-pltdoc=\"x\">rest</a></span><span class=\"hspace\">&nbsp;"
"</span><span class=\"RktSym\">l</span><span class=\"RktPn\">)</span><span "
"class=\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._first%29%29\" class="
"\"RktValLink\" data-pltdoc=\"x\">first</a></span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktSym\">l</span><span class=\"RktPn\">)</"
"span><span class=\"RktPn\">]</span></td></tr><tr><td><span class=\"hspace"
"\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class="
"\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-"
"lam.html#%28form._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._else"
"%29%29\" class=\"RktStxLink\" data-pltdoc=\"x\">else</a></span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym"
"\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#"
"%28form._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._local%29%29\" "
"class=\"RktStxLink\" data-pltdoc=\"x\">local</a></span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktPn\">(</"
"span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-"
"langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-intermediate-"
"lambda..rkt%29._define%29%29\" class=\"RktStxLink\" data-pltdoc=\"x"
"\">define</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym"
"\">s</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</"
"span><span class=\"RktSym\">infL</span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://"
"docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-"
"intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._rest"
"%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">rest</a></span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktSym\">l</span><span class=\"RktPn"
"\">)</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span><span "
"class=\"RktPn\">)</span></td></tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;"
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span "
"class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-"
"lang.org/htdp-langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._if%29%29\" class=\"RktStxLink\" data-pltdoc=\"x"
"\">if</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</"
"span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-"
"langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib._lang"
"%2Fhtdp-intermediate-lambda..rkt%29._~3c%29%29\" class=\"RktValLink\" data-"
"pltdoc=\"x\">&lt;</a></span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._first%29%29\" class="
"\"RktValLink\" data-pltdoc=\"x\">first</a></span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktSym\">l</span><span class=\"RktPn\">)</"
"span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">s</"
"span><span class=\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span "
"class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-"
"lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._first%29%29\" class="
"\"RktValLink\" data-pltdoc=\"x\">first</a></span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktSym\">l</span><span class=\"RktPn\">)</"
"span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">s</"
"span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span><span class="
"\"RktPn\">]</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</"
"span></td></tr></tbody></table></blockquote></div><div class=\"SIntrapara"
"\">Hand-evaluate <span class=\"RktPn\">(</span><span class=\"RktSym\">infL</"
"span><span class=\"stt\"> </span><span class=\"RktPn\">(</span><span class="
"\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-"
"lam.html#%28def._htdp-intermediate-lambda._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._list%29%29\" class=\"RktValLink\" data-pltdoc="
"\"x\">list</a></span><span class=\"stt\"> </span><span class=\"RktVal\">3</"
"span><span class=\"stt\"> </span><span class=\"RktVal\">2</span><span class="
"\"stt\"> </span><span class=\"RktVal\">1</span><span class=\"stt\"> </"
"span><span class=\"RktVal\">0</span><span class=\"RktPn\">)</span><span "
"class=\"RktPn\">)</span>. Then argue that\n"
" <span class=\"RktSym\">infL</span> uses on the “order of <span style=\"font-"
"style: italic\">n</span> steps” in\n"
" the best and the worst case. You may now wish to revisit\n"
" <a href=\"part_three.html#%28counter._%28exercise._ex~3alocal-"
"interm1%29%29\" data-pltdoc=\"x\">exercise&nbsp;261</a>, which asks you to "
"explore a similar problem. <a href=\"#%28counter._%28exercise._ex~3aorder-"
"of-0%29%29\" class=\"ex-end\" data-pltdoc=\"x\"></a></div>"
msgstr ""
"<div class=\"SIntrapara\"><a name=\"(counter._(exercise._ex~3aorder-"
"of-0))\"></a><span style=\"font-weight: bold\">Упражнение</span>&nbsp;484. "
"Хотя список, отсортированный в порядке убывания, \n"
"явно является наихудшим исходным параметром для <span class=\"RktSym\">inf</"
"span>, анализ\n"
"абстрактного времени выполнения <span class=\"RktSym\">inf</span> объясняет, "
"почему переписывание\n"
"<span class=\"RktSym\">inf</span> с помощью <span class=\"RktSym\"><a href="
"\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28form._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._local%29%29\" class="
"\"RktStxLink\" data-pltdoc=\"x\">local</a></span> сокращает \n"
"время выполнения. Для удобства реплицируем эту версию здесь:  \n"
"<a name=\"(idx._(gentag._698))\"></a>\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCodeFlow\"><table class="
"\"RktBlk\" cellspacing=\"0\" cellpadding=\"0\"><tbody><tr><td><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._define%29%29\" class=\"RktStxLink\" data-pltdoc="
"\"x\">define</a></span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktPn\">(</span><span class=\"RktSym\">infL</span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktSym\">l</span><span class=\"RktPn\">)</"
"span></td></tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;</span><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._cond%29%29\" class=\"RktStxLink\" data-pltdoc="
"\"x\">cond</a></span></td></tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;"
"&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class=\"RktPn\">(</"
"span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-"
"langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib._lang"
"%2Fhtdp-intermediate-lambda..rkt%29._empty~3f%29%29\" class=\"RktValLink\" "
"data-pltdoc=\"x\">empty?</a></span><span class=\"hspace\">&nbsp;</span><span "
"class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-"
"lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._rest%29%29\" class="
"\"RktValLink\" data-pltdoc=\"x\">rest</a></span><span class=\"hspace\">&nbsp;"
"</span><span class=\"RktSym\">l</span><span class=\"RktPn\">)</span><span "
"class=\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._first%29%29\" class="
"\"RktValLink\" data-pltdoc=\"x\">first</a></span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktSym\">l</span><span class=\"RktPn\">)</"
"span><span class=\"RktPn\">]</span></td></tr><tr><td><span class=\"hspace"
"\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class="
"\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-"
"lam.html#%28form._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._else"
"%29%29\" class=\"RktStxLink\" data-pltdoc=\"x\">else</a></span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym"
"\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#"
"%28form._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._local%29%29\" "
"class=\"RktStxLink\" data-pltdoc=\"x\">local</a></span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktPn\">(</"
"span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-"
"langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-intermediate-"
"lambda..rkt%29._define%29%29\" class=\"RktStxLink\" data-pltdoc=\"x"
"\">define</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym"
"\">s</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</"
"span><span class=\"RktSym\">infL</span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://"
"docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-"
"intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._rest"
"%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">rest</a></span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktSym\">l</span><span class=\"RktPn"
"\">)</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span><span "
"class=\"RktPn\">)</span></td></tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;"
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span "
"class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-"
"lang.org/htdp-langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._if%29%29\" class=\"RktStxLink\" data-pltdoc=\"x"
"\">if</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</"
"span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-"
"langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib._lang"
"%2Fhtdp-intermediate-lambda..rkt%29._~3c%29%29\" class=\"RktValLink\" data-"
"pltdoc=\"x\">&lt;</a></span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._first%29%29\" class="
"\"RktValLink\" data-pltdoc=\"x\">first</a></span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktSym\">l</span><span class=\"RktPn\">)</"
"span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">s</"
"span><span class=\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span "
"class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-"
"lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._first%29%29\" class="
"\"RktValLink\" data-pltdoc=\"x\">first</a></span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktSym\">l</span><span class=\"RktPn\">)</"
"span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">s</"
"span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span><span class="
"\"RktPn\">]</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</"
"span></td></tr></tbody></table></blockquote></div><div class=\"SIntrapara"
"\">\n"
"Ручное вычилсение <span class=\"RktPn\">(</span><span class=\"RktSym\">infL</"
"span><span class=\"stt\"> </span><span class=\"RktPn\">(</span><span class="
"\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-"
"lam.html#%28def._htdp-intermediate-lambda._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._list%29%29\" class=\"RktValLink\" data-pltdoc="
"\"x\">list</a></span><span class=\"stt\"> </span><span class=\"RktVal\">3</"
"span><span class=\"stt\"> </span><span class=\"RktVal\">2</span><span class="
"\"stt\"> </span><span class=\"RktVal\">1</span><span class=\"stt\"> </"
"span><span class=\"RktVal\">0</span><span class=\"RktPn\">)</span><span "
"class=\"RktPn\">)</span>. Затем аргументируйте, что \n"
"<span class=\"RktSym\">infL</span> использует «порядок из <span style=\"font-"
"style: italic\">n</span>\n"
"шагов» в лучшем и худшем случаях. Теперь вы можете вернуться к \n"
"<a href=\"part_three.html#%28counter._%28exercise._ex~3alocal-"
"interm1%29%29\" data-pltdoc=\"x\">упражнению&nbsp;261</a>, в котором вам "
"предлагается изучить аналогичную проблему. \n"
"<a href=\"#%28counter._%28exercise._ex~3aorder-of-0%29%29\" class=\"ex-end\" "
"data-pltdoc=\"x\"></a></div>"

#: in_1/i5-6.html:454
msgctxt "in_1/i5-6.html:454"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:462
msgid ""
"<p><a name=\"(counter._(exercise._ex~3aorder-of-2))\"></a><span style=\"font-"
"weight: bold\">Exercise</span>&nbsp;485. A number tree is either a number or "
"a pair of\n"
"number trees. Design <span class=\"RktSym\">sum-tree</span>, which "
"determines the\n"
"sum of the numbers in a tree. What is its abstract running time? What is\n"
"an acceptable measure of the size of such a tree? What is the worst\n"
"possible shape of the tree? What’s the best possible shape? <a href=\"#"
"%28counter._%28exercise._ex~3aorder-of-2%29%29\" class=\"ex-end\" data-"
"pltdoc=\"x\"></a></p>"
msgstr ""
"<p><a name=\"(counter._(exercise._ex~3aorder-of-2))\"></a><span style=\"font-"
"weight: bold\">Упражнение</span>&nbsp;485. Числовое дерево - это либо "
"числовое дерево, либо пара числовых деревьев. \n"
"Создайте <span class=\"RktSym\">sum-tree</span>, которое определяет сумму "
"чисел в дереве. \n"
"Каково его абстрактное время работы? Каков допустимый размер такого дерева? "
"Какая наихудшая \n"
"форма дерева? Какая форма лучше всего? \n"
"<a href=\"#%28counter._%28exercise._ex~3aorder-of-2%29%29\" class=\"ex-end\" "
"data-pltdoc=\"x\"></a></p>"

#: in_1/i5-6.html:464
msgid ""
"<h3><a name=\"(part._.The_.Definition_of__.On_the_.Order_.Of_)\"></a>The "
"Definition of “On the Order Of”</h3>"
msgstr ""
"<h3><a name=\"(part._.The_.Definition_of__.On_the_.Order_.Of_)\"></"
"a>Определение “On the Order Of”\n"
"(в порядке)</h3>"

#: in_1/i5-6.html:466
msgctxt "in_1/i5-6.html:466"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:472
msgid ""
"<div class=\"SIntrapara\">The preceding section alluded to all the key "
"ingredients of the phrase “on\n"
" the order of.” Now it is time to introduce a rigorous description of the\n"
" phrase. Let’s start with the two ideas that the preceding section\n"
" develops:\n"
"</div><div class=\"SIntrapara\"><ol><li>"
msgstr ""
"<div class=\"SIntrapara\">В предыдущем разделе упоминались все ключевые "
"составляющие фразы \n"
"“в порядке”. Теперь пришло время ввести строгое описание этой фразы. Давайте "
"начнем с двух идей,\n"
"которые развивает предыдущий раздел:\n"
"</div><div class=\"SIntrapara\"><ol><li>"

#: in_1/i5-6.html:478
msgid ""
"<p>The abstract measurement of performance is a relationship between\n"
"two quantities: the size of the input and the number of recursive steps\n"
"needed to determine the answer. The relationship is actually a\n"
"mathematical function that maps one natural number (the size of the\n"
"input) to another (the time needed).</p>"
msgstr ""
"<p>Абстрактное измерение производительности - это соотношение между двумя "
"величинами: \n"
"размером входных данных и количеством рекурсивных шагов, необходимых для "
"определения ответа. \n"
"Связь на самом деле представляет собой математическую функцию, которая "
"сопоставляет \n"
"одно натуральное число (размер входных данных) с другим (необходимое время)."
"</p>"

#: in_1/i5-6.html:480
msgctxt "in_1/i5-6.html:480"
msgid "</li><li>"
msgstr ""

#: in_1/i5-6.html:484
msgid ""
"<p>Hence, a general statement about the performance of a program is a\n"
"statement about a function, and a comparison of the performance of two\n"
"programs calls for the comparison of two such functions.</p>"
msgstr ""
"<p>Следовательно, общее утверждение о производительности программы - это \n"
"утверждение о функции, а сравнение производительности двух программ "
"требует \n"
"сравнения двух таких функций.</p>"

#: in_1/i5-6.html:486
msgid ""
"</li></ol></div><div class=\"SIntrapara\">How do you decide whether one such "
"function is “better” than another?</div>"
msgstr ""
"</li></ol></div><div class=\"SIntrapara\">Как решить, «лучше» ли одна такая "
"функция другой? </div>"

#: in_1/i5-6.html:488
msgctxt "in_1/i5-6.html:488"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:490
msgid ""
"<blockquote class=\"refpara\"><blockquote class=\"refcolumn\"><blockquote "
"class=\"refcontent\">"
msgstr ""

#: in_1/i5-6.html:495
msgid ""
"<p><a href=\"part_three.html#%28counter._%28exercise._ex~3asem2-funcs"
"%29%29\" data-pltdoc=\"x\">Exercise&nbsp;245</a> tackles a different "
"question, namely,\n"
"whether we can formulate a program that decides whether two other programs\n"
"are equal. In this intermezzo, we are not writing a program;\n"
"we are using plain mathematical arguments.</p>"
msgstr ""
"<p>В <a href=\"part_three.html#%28counter._%28exercise._ex~3asem2-funcs"
"%29%29\" data-pltdoc=\"x\">упражнении&nbsp;245</a> решается другой вопрос, а "
"именно: можем ли мы \n"
"сформулировать программу, которая решает, равны ли две другие программы. В "
"этом \n"
"интермеццо мы не пишем программу; мы используем простые математические "
"аргументы. </p>"

#: in_1/i5-6.html:497
msgid "</blockquote></blockquote></blockquote>"
msgstr ""

#: in_1/i5-6.html:499
msgctxt "in_1/i5-6.html:499"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:506
msgid ""
"<div class=\"SIntrapara\">Let’s return to the imaginary programs from the "
"introduction: <span class=\"RktSym\">prog-linear</span><span class=\"RktMeta"
"\"></span> and\n"
" <span class=\"RktSym\">prog-square</span><span class=\"RktMeta\"></span>. "
"They compute the same results but their performance differs. The\n"
" <span class=\"RktSym\">prog-linear</span><span class=\"RktMeta\"></span> "
"program requires “on the order of <span style=\"font-style: italic\">n</"
"span> steps” while <span class=\"RktSym\">prog-square</span><span class="
"\"RktMeta\"></span>\n"
" uses “on the order of <span style=\"font-style: italic\">n</span><span "
"style=\"vertical-align: super; font-size: 80%\"><span style=\"font-style: "
"italic\"></span>2<span style=\"font-style: italic\"></span></span><span "
"style=\"font-style: italic\"></span> steps.”  Mathematically speaking, the\n"
" performance function for <span class=\"RktSym\">prog-linear</span><span "
"class=\"RktMeta\"></span> is\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCentered\">"
msgstr ""
"<div class=\"SIntrapara\">Вернемся к воображаемым программам из введения: \n"
"<span class=\"RktSym\">prog-linear</span><span class=\"RktMeta\"></span> и\n"
" <span class=\"RktSym\">prog-square</span><span class=\"RktMeta\"></span>. "
"Они вычисляют одинаковые\n"
"результаты, но их производительность различается. <span class=\"RktSym"
"\">prog-linear</span><span class=\"RktMeta\"></span> программа требует "
"«порядка <span style=\"font-style: italic\">n</span>\n"
"шагов», в то время как <span class=\"RktSym\">prog-square</span><span class="
"\"RktMeta\"></span>\n"
"использует «порядка <span style=\"font-style: italic\">n</span><span style="
"\"vertical-align: super; font-size: 80%\"><span style=\"font-style: italic"
"\"></span>2<span style=\"font-style: italic\"></span></span><span style="
"\"font-style: italic\"></span> шагов». С математической точки зрения, \n"
"функция производительности для <span class=\"RktSym\">prog-linear</"
"span><span class=\"RktMeta\"></span> функции это\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCentered\">"

#: in_1/i5-6.html:508
msgid ""
"<p><img src=\"i5-6_files/pict_256.png\" alt=\"image\" width=\"71\" height="
"\"12\"></p>"
msgstr ""

#: in_1/i5-6.html:511
msgid ""
"</blockquote></div><div class=\"SIntrapara\">and <span class=\"RktSym\">prog-"
"square</span><span class=\"RktMeta\"></span>’s associated performance "
"function is\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCentered\">"
msgstr ""
"</blockquote></div><div class=\"SIntrapara\">и функция производительности, "
"связанная с \n"
"<span class=\"RktSym\">prog-square</span><span class=\"RktMeta\"></span>, "
"это\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCentered\">"

#: in_1/i5-6.html:513
msgid ""
"<p><img src=\"i5-6_files/pict_257.png\" alt=\"image\" width=\"76\" height="
"\"13\"></p>"
msgstr ""

#: in_1/i5-6.html:516
msgid ""
"</blockquote></div><div class=\"SIntrapara\">In these definitions, <span "
"style=\"font-style: italic\">c</span><span style=\"vertical-align: sub; font-"
"size: 80%\"><span style=\"font-style: italic\">L</span></span><span style="
"\"font-style: italic\"></span> is the cost for each recursive step in\n"
" <span class=\"RktSym\">prog-square</span><span class=\"RktMeta\"></span> "
"and <span style=\"font-style: italic\">c</span><span style=\"vertical-align: "
"sub; font-size: 80%\"><span style=\"font-style: italic\">S</span></"
"span><span style=\"font-style: italic\"></span> is the cost per step in "
"<span class=\"RktSym\">prog-linear</span><span class=\"RktMeta\"></span>.</"
"div>"
msgstr ""
"</blockquote></div><div class=\"SIntrapara\">В этих определениях <span style="
"\"font-style: italic\">c</span><span style=\"vertical-align: sub; font-size: "
"80%\"><span style=\"font-style: italic\">L</span></span><span style=\"font-"
"style: italic\"></span> - это стоимость каждого рекурсивного шага в \n"
"<span class=\"RktSym\">prog-square</span><span class=\"RktMeta\"></span>, а "
"<span style=\"font-style: italic\">c</span><span style=\"vertical-align: "
"sub; font-size: 80%\"><span style=\"font-style: italic\">S</span></"
"span><span style=\"font-style: italic\"></span> - стоимость шага в \n"
"<span class=\"RktSym\">prog-linear</span><span class=\"RktMeta\"></span>.</"
"div>"

#: in_1/i5-6.html:518
msgctxt "in_1/i5-6.html:518"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:523
msgid ""
"<p>Say we figure out that <span style=\"font-style: italic\">c</span><span "
"style=\"vertical-align: sub; font-size: 80%\"><span style=\"font-style: "
"italic\">L</span></span><span style=\"font-style: italic\"> = </span>1<span "
"style=\"font-style: italic\"></span>0<span style=\"font-style: italic\"></"
"span>0<span style=\"font-style: italic\"></span>0<span style=\"font-style: "
"italic\"></span> and <span style=\"font-style: italic\">c</span><span style="
"\"vertical-align: sub; font-size: 80%\"><span style=\"font-style: italic"
"\">S</span></span><span style=\"font-style: italic\"> = </span>1<span style="
"\"font-style: italic\"></span>. Then we can\n"
" tabulate these abstract running times to make the comparison concrete:</p>"
msgstr ""
"<p>Скажем, мы выяснили, что <span style=\"font-style: italic\">c</span><span "
"style=\"vertical-align: sub; font-size: 80%\"><span style=\"font-style: "
"italic\">L</span></span><span style=\"font-style: italic\"> = </span>1<span "
"style=\"font-style: italic\"></span>0<span style=\"font-style: italic\"></"
"span>0<span style=\"font-style: italic\"></span>0<span style=\"font-style: "
"italic\"></span> и \n"
"<span style=\"font-style: italic\">c</span><span style=\"vertical-align: "
"sub; font-size: 80%\"><span style=\"font-style: italic\">S</span></"
"span><span style=\"font-style: italic\"> = </span>1<span style=\"font-style: "
"italic\"></span>.. Затем мы можем свести эти абстрактные времена работы \n"
"в таблицу, чтобы сделать сравнение конкретным: </p>"

#: in_1/i5-6.html:527
msgctxt "in_1/i5-6.html:527"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:529
msgid ""
"<div class=\"SIntrapara\"><blockquote><table style=\"border-collapse: "
"collapse;\" cellspacing=\"0\" cellpadding=\"0\"><tbody><tr><td style="
"\"border-bottom: 1px solid black;\" align=\"right\">"
msgstr ""

#: in_1/i5-6.html:531
msgid "<p><span style=\"font-style: italic\">n</span></p>"
msgstr ""

#: in_1/i5-6.html:533
msgctxt "in_1/i5-6.html:533"
msgid "</td><td style=\"border-bottom: 1px solid black;\" align=\"right\">"
msgstr ""

#: in_1/i5-6.html:535
msgctxt "in_1/i5-6.html:535"
msgid "<p><span class=\"hspace\">&nbsp;&nbsp;&nbsp;</span></p>"
msgstr ""

#: in_1/i5-6.html:537
msgctxt "in_1/i5-6.html:537"
msgid "</td><td style=\"border-bottom: 1px solid black;\" align=\"right\">"
msgstr ""

#: in_1/i5-6.html:539
msgid "<p>10</p>"
msgstr ""

#: in_1/i5-6.html:541
msgctxt "in_1/i5-6.html:541"
msgid "</td><td style=\"border-bottom: 1px solid black;\" align=\"right\">"
msgstr ""

#: in_1/i5-6.html:543
msgctxt "in_1/i5-6.html:543"
msgid "<p><span class=\"hspace\">&nbsp;&nbsp;&nbsp;</span></p>"
msgstr ""

#: in_1/i5-6.html:545
msgctxt "in_1/i5-6.html:545"
msgid "</td><td style=\"border-bottom: 1px solid black;\" align=\"right\">"
msgstr ""

#: in_1/i5-6.html:547
msgctxt "in_1/i5-6.html:547"
msgid "<p>100</p>"
msgstr ""

#: in_1/i5-6.html:549
msgctxt "in_1/i5-6.html:549"
msgid "</td><td style=\"border-bottom: 1px solid black;\" align=\"right\">"
msgstr ""

#: in_1/i5-6.html:551
msgctxt "in_1/i5-6.html:551"
msgid "<p><span class=\"hspace\">&nbsp;&nbsp;&nbsp;</span></p>"
msgstr ""

#: in_1/i5-6.html:553
msgctxt "in_1/i5-6.html:553"
msgid "</td><td style=\"border-bottom: 1px solid black;\" align=\"right\">"
msgstr ""

#: in_1/i5-6.html:555
msgid "<p>1000</p>"
msgstr ""

#: in_1/i5-6.html:557
msgctxt "in_1/i5-6.html:557"
msgid "</td><td style=\"border-bottom: 1px solid black;\" align=\"right\">"
msgstr ""

#: in_1/i5-6.html:559
msgctxt "in_1/i5-6.html:559"
msgid "<p><span class=\"hspace\">&nbsp;&nbsp;&nbsp;</span></p>"
msgstr ""

#: in_1/i5-6.html:561
msgctxt "in_1/i5-6.html:561"
msgid "</td><td style=\"border-bottom: 1px solid black;\" align=\"right\">"
msgstr ""

#: in_1/i5-6.html:563
msgid "<p>2000</p>"
msgstr ""

#: in_1/i5-6.html:565
msgctxt "in_1/i5-6.html:565"
msgid "</td></tr><tr><td align=\"right\">"
msgstr ""

#: in_1/i5-6.html:567
msgid ""
"<p><span class=\"RktSym\">prog-square</span><span class=\"RktMeta\"></span></"
"p>"
msgstr ""

#: in_1/i5-6.html:569
msgctxt "in_1/i5-6.html:569"
msgid "</td><td align=\"right\">"
msgstr ""

#: in_1/i5-6.html:571
msgctxt "in_1/i5-6.html:571"
msgid "<p><span class=\"hspace\">&nbsp;&nbsp;&nbsp;</span></p>"
msgstr ""

#: in_1/i5-6.html:573
msgctxt "in_1/i5-6.html:573"
msgid "</td><td align=\"right\">"
msgstr ""

#: in_1/i5-6.html:575
msgctxt "in_1/i5-6.html:575"
msgid "<p>100</p>"
msgstr ""

#: in_1/i5-6.html:577
msgctxt "in_1/i5-6.html:577"
msgid "</td><td align=\"right\">"
msgstr ""

#: in_1/i5-6.html:579
msgctxt "in_1/i5-6.html:579"
msgid "<p><span class=\"hspace\">&nbsp;&nbsp;&nbsp;</span></p>"
msgstr ""

#: in_1/i5-6.html:581
msgctxt "in_1/i5-6.html:581"
msgid "</td><td align=\"right\">"
msgstr ""

#: in_1/i5-6.html:583
msgctxt "in_1/i5-6.html:583"
msgid "<p>10000</p>"
msgstr ""

#: in_1/i5-6.html:585
msgctxt "in_1/i5-6.html:585"
msgid "</td><td align=\"right\">"
msgstr ""

#: in_1/i5-6.html:587
msgctxt "in_1/i5-6.html:587"
msgid "<p><span class=\"hspace\">&nbsp;&nbsp;&nbsp;</span></p>"
msgstr ""

#: in_1/i5-6.html:589
msgctxt "in_1/i5-6.html:589"
msgid "</td><td align=\"right\">"
msgstr ""

#: in_1/i5-6.html:591
msgctxt "in_1/i5-6.html:591"
msgid "<p>1000000</p>"
msgstr ""

#: in_1/i5-6.html:593
msgctxt "in_1/i5-6.html:593"
msgid "</td><td align=\"right\">"
msgstr ""

#: in_1/i5-6.html:595
msgctxt "in_1/i5-6.html:595"
msgid "<p><span class=\"hspace\">&nbsp;&nbsp;&nbsp;</span></p>"
msgstr ""

#: in_1/i5-6.html:597
msgctxt "in_1/i5-6.html:597"
msgid "</td><td align=\"right\">"
msgstr ""

#: in_1/i5-6.html:599
msgid "<p>4000000</p>"
msgstr ""

#: in_1/i5-6.html:601
msgctxt "in_1/i5-6.html:601"
msgid "</td></tr><tr><td align=\"right\">"
msgstr ""

#: in_1/i5-6.html:603
msgid ""
"<p><span class=\"RktSym\">prog-linear</span><span class=\"RktMeta\"></span></"
"p>"
msgstr ""

#: in_1/i5-6.html:605
msgctxt "in_1/i5-6.html:605"
msgid "</td><td align=\"right\">"
msgstr ""

#: in_1/i5-6.html:607
msgctxt "in_1/i5-6.html:607"
msgid "<p><span class=\"hspace\">&nbsp;&nbsp;&nbsp;</span></p>"
msgstr ""

#: in_1/i5-6.html:609
msgctxt "in_1/i5-6.html:609"
msgid "</td><td align=\"right\">"
msgstr ""

#: in_1/i5-6.html:611
msgctxt "in_1/i5-6.html:611"
msgid "<p>10000</p>"
msgstr ""

#: in_1/i5-6.html:613
msgctxt "in_1/i5-6.html:613"
msgid "</td><td align=\"right\">"
msgstr ""

#: in_1/i5-6.html:615
msgctxt "in_1/i5-6.html:615"
msgid "<p><span class=\"hspace\">&nbsp;&nbsp;&nbsp;</span></p>"
msgstr ""

#: in_1/i5-6.html:617
msgctxt "in_1/i5-6.html:617"
msgid "</td><td align=\"right\">"
msgstr ""

#: in_1/i5-6.html:619
msgid "<p>100000</p>"
msgstr ""

#: in_1/i5-6.html:621
msgctxt "in_1/i5-6.html:621"
msgid "</td><td align=\"right\">"
msgstr ""

#: in_1/i5-6.html:623
msgctxt "in_1/i5-6.html:623"
msgid "<p><span class=\"hspace\">&nbsp;&nbsp;&nbsp;</span></p>"
msgstr ""

#: in_1/i5-6.html:625
msgctxt "in_1/i5-6.html:625"
msgid "</td><td align=\"right\">"
msgstr ""

#: in_1/i5-6.html:627
msgctxt "in_1/i5-6.html:627"
msgid "<p>1000000</p>"
msgstr ""

#: in_1/i5-6.html:629
msgctxt "in_1/i5-6.html:629"
msgid "</td><td align=\"right\">"
msgstr ""

#: in_1/i5-6.html:631
msgctxt "in_1/i5-6.html:631"
msgid "<p><span class=\"hspace\">&nbsp;&nbsp;&nbsp;</span></p>"
msgstr ""

#: in_1/i5-6.html:633
msgctxt "in_1/i5-6.html:633"
msgid "</td><td align=\"right\">"
msgstr ""

#: in_1/i5-6.html:635
msgid "<p>2000000</p>"
msgstr ""

#: in_1/i5-6.html:643
msgid ""
"</td></tr></tbody></table></blockquote></div><div class=\"SIntrapara\">Like "
"the graphs in <a href=\"#%28counter._%28figure._fig~3aperformance%29%29\" "
"data-pltdoc=\"x\">figure&nbsp;<span class=\"FigureRef\">176</span></a>, the "
"table at first seems\n"
" to say that <span class=\"RktSym\">prog-square</span><span class=\"RktMeta"
"\"></span> is better than <span class=\"RktSym\">prog-linear</span><span "
"class=\"RktMeta\"></span>, because for inputs of the same\n"
" size <span style=\"font-style: italic\">n</span>, <span class=\"RktSym"
"\">prog-square</span><span class=\"RktMeta\"></span>’s result is smaller "
"than <span class=\"RktSym\">prog-linear</span><span class=\"RktMeta\"></"
"span>’s.  But look at the\n"
" last column in the table. Once the inputs are sufficiently large,\n"
" <span class=\"RktSym\">prog-square</span><span class=\"RktMeta\"></span>’s "
"advantage decreases until it disappears at an input size of\n"
" <span style=\"font-style: italic\"></span>1<span style=\"font-style: italic"
"\"></span>0<span style=\"font-style: italic\"></span>0<span style=\"font-"
"style: italic\"></span>0<span style=\"font-style: italic\"></span>. <span "
"style=\"font-weight: bold\">Thereafter</span> <span class=\"RktSym\">prog-"
"square</span><span class=\"RktMeta\"></span> is <span style=\"font-weight: "
"bold\">always</span> slower than\n"
" <span class=\"RktSym\">prog-linear</span><span class=\"RktMeta\"></span>.</"
"div>"
msgstr ""
"</td></tr></tbody></table></blockquote></div><div class=\"SIntrapara\">Как и "
"графики на \n"
"<a href=\"#%28counter._%28figure._fig~3aperformance%29%29\" data-pltdoc=\"x"
"\">рисунке&nbsp;<span class=\"FigureRef\">176</span></a>, таблица сначала "
"кажется, что <span class=\"RktSym\">prog-square</span><span class=\"RktMeta"
"\"></span> лучше, чем <span class=\"RktSym\">prog-linear</span><span class="
"\"RktMeta\"></span>, потому что для входов одинакового размера \n"
"<span style=\"font-style: italic\">n</span> результат <span class=\"RktSym"
"\">prog-square</span><span class=\"RktMeta\"></span> меньше, чем <span class="
"\"RktSym\">prog-linear</span><span class=\"RktMeta\"></span>. Но посмотрите "
"на последний столбец в таблице. Как только входные данные становятся\n"
"достаточно большими, преимущество <span class=\"RktSym\">prog-square</"
"span><span class=\"RktMeta\"></span> уменьшается до тех пор, пока оно не "
"исчезает при входном размере <span style=\"font-style: italic\"></"
"span>1<span style=\"font-style: italic\"></span>0<span style=\"font-style: "
"italic\"></span>0<span style=\"font-style: italic\"></span>0<span style="
"\"font-style: italic\"></span>. \n"
"После этого /span> <span class=\"RktSym\">prog-square</span><span class="
"\"RktMeta\"></span> \n"
"всегда работает медленнее, чем  <span class=\"RktSym\">prog-linear</"
"span><span class=\"RktMeta\"></span>.</div>"

#: in_1/i5-6.html:645
msgctxt "in_1/i5-6.html:645"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:655
msgid ""
"<p>This last insight is the key to the precise definition of the phrase\n"
" “order of.” If a function <span style=\"font-style: italic\">f</span> on "
"the natural numbers produces\n"
" larger numbers than some function <span style=\"font-style: italic\">g</"
"span> <span style=\"font-weight: bold\">for all</span> natural numbers,\n"
" then <span style=\"font-style: italic\">f</span> is clearly larger than "
"<span style=\"font-style: italic\">g</span>. But what if this comparison\n"
" fails for just a few inputs, say for <span style=\"font-style: italic\"></"
"span>1<span style=\"font-style: italic\"></span>0<span style=\"font-style: "
"italic\"></span>0<span style=\"font-style: italic\"></span>0<span style="
"\"font-style: italic\"></span> or <span style=\"font-style: italic\"></"
"span>1<span style=\"font-style: italic\"></span>0<span style=\"font-style: "
"italic\"></span>0<span style=\"font-style: italic\"></span>0<span style="
"\"font-style: italic\"></span>0<span style=\"font-style: italic\"></"
"span>0<span style=\"font-style: italic\"></span>0<span style=\"font-style: "
"italic\"></span>, and\n"
" holds for all others? In that case, we would still like to say <span style="
"\"font-style: italic\">f</span>\n"
" is better than <span style=\"font-style: italic\">g</span>. And this brings "
"us to the following definition.</p>"
msgstr ""
"<p>Это последнее открытие является ключом к точному определению фразы "
"«порядок». Если функция \n"
"<span style=\"font-style: italic\">f</span> для натуральных чисел производит "
"большие числа, \n"
"чем некоторая функция <span style=\"font-style: italic\">g</span> \n"
"<span style=\"font-weight: bold\">для всех</span> натуральных чисел, тогда \n"
"<span style=\"font-style: italic\">f</span> явно больше, чем \n"
"<span style=\"font-style: italic\">g</span>. Но что, если это сравнение не "
"удастся только для\n"
"нескольких входов, скажем, для <span style=\"font-style: italic\"></"
"span>1<span style=\"font-style: italic\"></span>0<span style=\"font-style: "
"italic\"></span>0<span style=\"font-style: italic\"></span>0<span style="
"\"font-style: italic\"></span> или <span style=\"font-style: italic\"></"
"span>1<span style=\"font-style: italic\"></span>0<span style=\"font-style: "
"italic\"></span>0<span style=\"font-style: italic\"></span>0<span style="
"\"font-style: italic\"></span>0<span style=\"font-style: italic\"></"
"span>0<span style=\"font-style: italic\"></span>0<span style=\"font-style: "
"italic\"></span>, \n"
"и будет верным для всех остальных? В этом случае мы все равно хотели бы "
"сказать, что \n"
"<span style=\"font-style: italic\">f</span> лучше, чем <span style=\"font-"
"style: italic\">g</span>. \n"
"И это подводит нас к следующему определению. </p>"

#: in_1/i5-6.html:657
msgid "<blockquote>"
msgstr ""

#: in_1/i5-6.html:659
msgctxt "in_1/i5-6.html:659"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:665
msgid ""
"<div class=\"SIntrapara\"><span style=\"font-weight: bold\">Definition</"
"span> Given a function <span style=\"font-style: italic\">g</span> on the "
"natural numbers,\n"
" <span style=\"font-style: italic\">O</span>(<span style=\"font-style: italic"
"\">g</span>)<span style=\"font-style: italic\"></span> (pronounced: “big-O "
"of g”) is a class of functions on\n"
" natural numbers.  A function <span style=\"font-style: italic\">f</span> is "
"a member of <span style=\"font-style: italic\">O</span>(<span style=\"font-"
"style: italic\">g</span>)<span style=\"font-style: italic\"></span> if\n"
" <span style=\"font-weight: bold\">there exist</span> numbers <span style="
"\"font-style: italic\">c</span> and <span style=\"font-style: italic"
"\">bigEnough</span> such that\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCentered\">"
msgstr ""
"<div class=\"SIntrapara\"><span style=\"font-weight: bold\">Определение</"
"span> Учитывая функцию \n"
"<span style=\"font-style: italic\">g</span> от натуральных чисел, \n"
"<span style=\"font-style: italic\">O</span>(<span style=\"font-style: italic"
"\">g</span>)<span style=\"font-style: italic\"></span> (произносится: «big-O "
"of g») является классом функций от\n"
"натуральных чисел. Функция <span style=\"font-style: italic\">f</span> "
"является членом \n"
"<span style=\"font-style: italic\">O</span>(<span style=\"font-style: italic"
"\">g</span>)<span style=\"font-style: italic\"></span>, если <span style="
"\"font-weight: bold\">существуют</span> числа \n"
"<span style=\"font-style: italic\">c</span> и <span style=\"font-style: "
"italic\">bigEnough</span>\n"
"такие, что\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCentered\">"

#: in_1/i5-6.html:670
msgid ""
"<p><span style=\"font-weight: bold\">for all</span>\n"
"<img src=\"i5-6_files/pict_258.png\" alt=\"image\" width=\"79\" height="
"\"12\">\n"
"it is true that\n"
"<img src=\"i5-6_files/pict_259.png\" alt=\"image\" width=\"84\" height="
"\"12\"></p>"
msgstr ""
"<p><span style=\"font-weight: bold\">для всех</span>\n"
"<img src=\"i5-6_files/pict_258.png\" alt=\"image\" width=\"79\" height="
"\"12\">\n"
"это правда, что\n"
"<img src=\"i5-6_files/pict_259.png\" alt=\"image\" width=\"84\" height="
"\"12\"></p>"

#: in_1/i5-6.html:672
msgid "</blockquote></div>"
msgstr ""

#: in_1/i5-6.html:674
msgctxt "in_1/i5-6.html:674"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:679
msgid ""
"<p><span style=\"font-weight: bold\">Terminology</span> If <img src="
"\"i5-6_files/pict_260.png\" alt=\"image\" width=\"48\" height=\"12\">, we "
"say <span style=\"font-style: italic\">f</span> is no worse than\n"
"<span style=\"font-style: italic\">g</span>.</p>"
msgstr ""
"<p><span style=\"font-weight: bold\">Терминология</span> Если <img src="
"\"i5-6_files/pict_260.png\" alt=\"image\" width=\"48\" height=\"12\">, мы "
"говорим, что <span style=\"font-style: italic\">f</span> \n"
"не хуже, чем <span style=\"font-style: italic\">g</span>.</p>"

#: in_1/i5-6.html:681
msgctxt "in_1/i5-6.html:681"
msgid "</blockquote>"
msgstr ""

#: in_1/i5-6.html:683
msgctxt "in_1/i5-6.html:683"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:688
msgid ""
"<div class=\"SIntrapara\">Naturally, we would love to illustrate this "
"definition with the example of\n"
" <span class=\"RktSym\">prog-linear</span><span class=\"RktMeta\"></span> "
"and <span class=\"RktSym\">prog-square</span><span class=\"RktMeta\"></span> "
"from above. Recall the performance functions for <span class=\"RktSym\">prog-"
"linear</span><span class=\"RktMeta\"></span>\n"
" and <span class=\"RktSym\">prog-square</span><span class=\"RktMeta\"></"
"span>, with the constants plugged in:\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCentered\">"
msgstr ""
"<div class=\"SIntrapara\">Естественно, мы хотели бы проиллюстрировать это "
"определение на примере \n"
"<span class=\"RktSym\">prog-linear</span><span class=\"RktMeta\"></span> и "
"<span class=\"RktSym\">prog-square</span><span class=\"RktMeta\"></span> "
"сверху. Вспомните функции производительности для \n"
"<span class=\"RktSym\">prog-linear</span><span class=\"RktMeta\"></span>\n"
" и <span class=\"RktSym\">prog-square</span><span class=\"RktMeta\"></span> "
"с подключенными константами: \n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCentered\">"

#: in_1/i5-6.html:690
msgid ""
"<p><img src=\"i5-6_files/pict_261.png\" alt=\"image\" width=\"70\" height="
"\"13\"></p>"
msgstr ""

#: in_1/i5-6.html:693
msgctxt "in_1/i5-6.html:693"
msgid ""
"</blockquote></div><div class=\"SIntrapara\">and\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCentered\">"
msgstr ""
"</blockquote></div><div class=\"SIntrapara\">и\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCentered\">"

#: in_1/i5-6.html:695
msgid ""
"<p><img src=\"i5-6_files/pict_262.png\" alt=\"image\" width=\"89\" height="
"\"12\"></p>"
msgstr ""

#: in_1/i5-6.html:701
msgid ""
"</blockquote></div><div class=\"SIntrapara\">The key is to find the magic "
"numbers <span style=\"font-style: italic\">c</span> and\n"
" <span style=\"font-style: italic\">bigEnough</span> such that <img src="
"\"i5-6_files/pict_263.png\" alt=\"image\" width=\"51\" height=\"12\">, which "
"would validate that\n"
" <span class=\"RktSym\">prog-square</span><span class=\"RktMeta\"></span>’s "
"performance is no worse than <span class=\"RktSym\">prog-linear</span><span "
"class=\"RktMeta\"></span>’s. For now, we just\n"
" tell you what these numbers are:\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCentered\">"
msgstr ""
"</blockquote></div><div class=\"SIntrapara\">Ключ в том, чтобы найти "
"магические числа \n"
"<span style=\"font-style: italic\">c</span> и <span style=\"font-style: "
"italic\">bigEnough</span>,\n"
"такие как это <img src=\"i5-6_files/pict_263.png\" alt=\"image\" width="
"\"51\" height=\"12\">, \n"
"которое подтвердило бы, что производительность <span class=\"RktSym\">prog-"
"square</span><span class=\"RktMeta\"></span> не хуже, чем <span class="
"\"RktSym\">prog-linear</span><span class=\"RktMeta\"></span>. А пока мы "
"просто скажем вам, что это за числа:\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCentered\">"

#: in_1/i5-6.html:703
msgid ""
"<p><img src=\"i5-6_files/pict_264.png\" alt=\"image\" width=\"135\" height="
"\"12\"></p>"
msgstr ""

#: in_1/i5-6.html:706
msgid ""
"</blockquote></div><div class=\"SIntrapara\">Using these numbers, we need to "
"show that\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCentered\">"
msgstr ""
"</blockquote></div><div class=\"SIntrapara\">Используя эти числа, нам нужно "
"показать, что \n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCentered\">"

#: in_1/i5-6.html:708
msgid ""
"<p><img src=\"i5-6_files/pict_265.png\" alt=\"image\" width=\"82\" height="
"\"12\"></p>"
msgstr ""

#: in_1/i5-6.html:712
msgid ""
"</blockquote></div><div class=\"SIntrapara\">for every single <span style="
"\"font-style: italic\">n</span> larger than <span style=\"font-style: italic"
"\"></span>1<span style=\"font-style: italic\"></span>0<span style=\"font-"
"style: italic\"></span>0<span style=\"font-style: italic\"></span>0<span "
"style=\"font-style: italic\"></span>. Here is how this kind\n"
" of argument is spelled out:\n"
"</div><div class=\"SIntrapara\"><blockquote>"
msgstr ""
"</blockquote></div><div class=\"SIntrapara\">для каждого <span style=\"font-"
"style: italic\">n</span>\n"
"больше <span style=\"font-style: italic\"></span>1<span style=\"font-style: "
"italic\"></span>0<span style=\"font-style: italic\"></span>0<span style="
"\"font-style: italic\"></span>0<span style=\"font-style: italic\"></span>. "
"Вот как изложен такой аргумент:\n"
"</div><div class=\"SIntrapara\"><blockquote>"

#: in_1/i5-6.html:714
msgctxt "in_1/i5-6.html:714"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:718
msgid ""
"<div class=\"SIntrapara\">Pick some specific <span style=\"font-style: italic"
"\">n</span><span style=\"vertical-align: sub; font-size: 80%\"><span style="
"\"font-style: italic\"></span>0<span style=\"font-style: italic\"></span></"
"span><span style=\"font-style: italic\"></span> that satisfies the\n"
" condition:\n"
"</div><div class=\"SIntrapara\"><blockquote>"
msgstr ""
"<div class=\"SIntrapara\">Выберите конкретный номер <span style=\"font-"
"style: italic\">n</span><span style=\"vertical-align: sub; font-size: 80%"
"\"><span style=\"font-style: italic\"></span>0<span style=\"font-style: "
"italic\"></span></span><span style=\"font-style: italic\"></span>, \n"
"удовлетворяющий условию: \n"
"</div><div class=\"SIntrapara\"><blockquote>"

#: in_1/i5-6.html:720
msgid ""
"<p><img src=\"i5-6_files/pict_266.png\" alt=\"image\" width=\"59\" height="
"\"10\"></p>"
msgstr ""

#: in_1/i5-6.html:726
msgid ""
"</blockquote></div><div class=\"SIntrapara\">We use the symbolic name <span "
"style=\"font-style: italic\">n</span><span style=\"vertical-align: sub; font-"
"size: 80%\"><span style=\"font-style: italic\"></span>0<span style=\"font-"
"style: italic\"></span></span><span style=\"font-style: italic\"></span> so "
"that we don’t make any specific\n"
" assumptions about it. Now recall from algebra that you can multiply both\n"
" sides of the inequality with the same positive factor, and the inequality\n"
" still holds. We use <span style=\"font-style: italic\">n</span><span style="
"\"vertical-align: sub; font-size: 80%\"><span style=\"font-style: italic\"></"
"span>0<span style=\"font-style: italic\"></span></span><span style=\"font-"
"style: italic\"></span>:\n"
"</div><div class=\"SIntrapara\"><blockquote>"
msgstr ""
"</blockquote></div><div class=\"SIntrapara\">Мы используем символическое "
"имя \n"
"<span style=\"font-style: italic\">n</span><span style=\"vertical-align: "
"sub; font-size: 80%\"><span style=\"font-style: italic\"></span>0<span style="
"\"font-style: italic\"></span></span><span style=\"font-style: italic\"></"
"span>, чтобы не делать никаких конкретных предположений \n"
"относительно него. Теперь вспомним из алгебры, что вы можете умножить обе "
"части неравенства \n"
"на один и тот же положительный множитель, и неравенство по-прежнему "
"выполняется. Мы \n"
"используем  <span style=\"font-style: italic\">n</span><span style="
"\"vertical-align: sub; font-size: 80%\"><span style=\"font-style: italic\"></"
"span>0<span style=\"font-style: italic\"></span></span><span style=\"font-"
"style: italic\"></span>:\n"
"</div><div class=\"SIntrapara\"><blockquote>"

#: in_1/i5-6.html:728
msgid ""
"<p><img src=\"i5-6_files/pict_267.png\" alt=\"image\" width=\"103\" height="
"\"10\"></p>"
msgstr ""

#: in_1/i5-6.html:732
msgid ""
"</blockquote></div><div class=\"SIntrapara\">At this point, it is time to "
"observe that the left side of the inequality\n"
" is just <span style=\"font-style: italic\">L</span>(<span style=\"font-"
"style: italic\">n</span><span style=\"vertical-align: sub; font-size: 80%"
"\"><span style=\"font-style: italic\"></span>0<span style=\"font-style: "
"italic\"></span></span><span style=\"font-style: italic\"></span>)<span "
"style=\"font-style: italic\"></span> and the right side is <span style="
"\"font-style: italic\">S</span>(<span style=\"font-style: italic\">n</"
"span><span style=\"vertical-align: sub; font-size: 80%\"><span style=\"font-"
"style: italic\"></span>0<span style=\"font-style: italic\"></span></"
"span><span style=\"font-style: italic\"></span>)<span style=\"font-style: "
"italic\"></span>:\n"
"</div><div class=\"SIntrapara\"><blockquote>"
msgstr ""
"</blockquote></div><div class=\"SIntrapara\">На этом этапе настало время "
"заметить, что левая часть\n"
"неравенства - это просто <span style=\"font-style: italic\">L</span>(<span "
"style=\"font-style: italic\">n</span><span style=\"vertical-align: sub; font-"
"size: 80%\"><span style=\"font-style: italic\"></span>0<span style=\"font-"
"style: italic\"></span></span><span style=\"font-style: italic\"></"
"span>)<span style=\"font-style: italic\"></span>, а правая часть - это <span "
"style=\"font-style: italic\">S</span>(<span style=\"font-style: italic\">n</"
"span><span style=\"vertical-align: sub; font-size: 80%\"><span style=\"font-"
"style: italic\"></span>0<span style=\"font-style: italic\"></span></"
"span><span style=\"font-style: italic\"></span>)<span style=\"font-style: "
"italic\"></span>:\n"
"</div><div class=\"SIntrapara\"><blockquote>"

#: in_1/i5-6.html:734
msgid ""
"<p><img src=\"i5-6_files/pict_268.png\" alt=\"image\" width=\"84\" height="
"\"12\"></p>"
msgstr ""

#: in_1/i5-6.html:737
msgid ""
"</blockquote></div><div class=\"SIntrapara\">Since <span style=\"font-style: "
"italic\">n</span><span style=\"vertical-align: sub; font-size: 80%\"><span "
"style=\"font-style: italic\"></span>0<span style=\"font-style: italic\"></"
"span></span><span style=\"font-style: italic\"></span> is a generic number "
"of the right kind, we have shown\n"
" exactly what we wanted to show.</div>"
msgstr ""
"</blockquote></div><div class=\"SIntrapara\">Поскольку <span style=\"font-"
"style: italic\">n</span><span style=\"vertical-align: sub; font-size: 80%"
"\"><span style=\"font-style: italic\"></span>0<span style=\"font-style: "
"italic\"></span></span><span style=\"font-style: italic\"></span> - общее \n"
"число правильного типа, мы показали именно то, что хотели показать.</div>"

#: in_1/i5-6.html:739
msgctxt "in_1/i5-6.html:739"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:743
msgid ""
"</blockquote></div><div class=\"SIntrapara\">Usually you find <span style="
"\"font-style: italic\">bigEnough</span> and <span style=\"font-style: italic"
"\">c</span> by working your way backward\n"
" through such an argument. While this kind of mathematical reasoning is\n"
" fascinating, we leave it to a course on algorithms.</div>"
msgstr ""
"</blockquote></div><div class=\"SIntrapara\">Обычно вы находите \n"
"<span style=\"font-style: italic\">bigEnough</span> и <span style=\"font-"
"style: italic\">c</span>,\n"
"продвигаясь назад через такой аргумент. Хотя такого рода математические "
"рассуждения увлекательны,\n"
"мы оставим их курсу алгоритмов.\n"
"</div>"

#: in_1/i5-6.html:745
msgctxt "in_1/i5-6.html:745"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:749
msgctxt "in_1/i5-6.html:749"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:755
msgid ""
"<div class=\"SIntrapara\">The definition of <span style=\"font-style: italic"
"\">O</span> also explains with mathematical rigor why we don’t\n"
" have to pay attention to specific constants in our comparisons of abstract\n"
" running times. Say we can make each basic step of <span class=\"RktSym"
"\">prog-linear</span><span class=\"RktMeta\"></span> go twice as\n"
" fast so that we have:\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCentered\">"
msgstr ""
"<div class=\"SIntrapara\">Определение <span style=\"font-style: italic\">O</"
"span> также объясняет \n"
"с математической строгостью, почему нам не нужно обращать внимание на "
"конкретные константы при\n"
"сравнении абстрактного времени работы. Скажем, мы можем сделать каждый "
"базовый шаг \n"
"<span class=\"RktSym\">prog-linear</span><span class=\"RktMeta\"></span> "
"программы в два раза быстрее,\n"
"чтобы у нас было: \n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCentered\">"

#: in_1/i5-6.html:757
msgid ""
"<p><img src=\"i5-6_files/pict_269.png\" alt=\"image\" width=\"72\" height="
"\"15\"></p>"
msgstr ""

#: in_1/i5-6.html:760
msgctxt "in_1/i5-6.html:760"
msgid ""
"</blockquote></div><div class=\"SIntrapara\">and\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCentered\">"
msgstr ""
"</blockquote></div><div class=\"SIntrapara\">и\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCentered\">"

#: in_1/i5-6.html:762
msgid ""
"<p><img src=\"i5-6_files/pict_270.png\" alt=\"image\" width=\"89\" height="
"\"12\"></p>"
msgstr ""

#: in_1/i5-6.html:764
msgid ""
"</blockquote></div><div class=\"SIntrapara\">The above argument goes through "
"by doubling <span style=\"font-style: italic\">bigEnough</span> to <span "
"style=\"font-style: italic\"></span>2<span style=\"font-style: italic\"></"
"span>0<span style=\"font-style: italic\"></span>0<span style=\"font-style: "
"italic\"></span>0<span style=\"font-style: italic\"></span>.</div>"
msgstr ""
"</blockquote></div><div class=\"SIntrapara\">Приведенный выше аргумент "
"подтверждается удвоением\n"
" <span style=\"font-style: italic\">bigEnough</span> до \n"
" <span style=\"font-style: italic\"></span>2<span style=\"font-style: italic"
"\"></span>0<span style=\"font-style: italic\"></span>0<span style=\"font-"
"style: italic\"></span>0<span style=\"font-style: italic\"></span>.</div>"

#: in_1/i5-6.html:766
msgctxt "in_1/i5-6.html:766"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:777
msgid ""
"<p>Finally, most people use <span style=\"font-style: italic\">O</span> "
"together with a short-hand for stating\n"
" functions. Thus they say <span class=\"RktSym\">how-many</span>’s running "
"time is\n"
" <span style=\"font-style: italic\">O</span>(<span style=\"font-style: italic"
"\">n</span>)<span style=\"font-style: italic\"></span>— because they tend to "
"think of <span style=\"font-style: italic\">n</span> as an abbreviation of\n"
" the (mathematical) function <span style=\"font-style: italic\">id</"
"span>(<span style=\"font-style: italic\">n</span>)<span style=\"font-style: "
"italic\"> = n</span>. Similarly, this use yields\n"
" the claim that <span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._sort%29%29\" class="
"\"RktValLink\" data-pltdoc=\"x\">sort</a></span>’s worst-case running time "
"is <span style=\"font-style: italic\">O</span>(<span style=\"font-style: "
"italic\">n</span><span style=\"vertical-align: super; font-size: 80%\"><span "
"style=\"font-style: italic\"></span>2<span style=\"font-style: italic\"></"
"span></span><span style=\"font-style: italic\"></span>)<span style=\"font-"
"style: italic\"></span>\n"
" and <span class=\"RktSym\">inc</span>’s is <span style=\"font-style: italic"
"\">O</span>(<span style=\"font-style: italic\"></span>2<span style=\"font-"
"style: italic\"></span><span style=\"vertical-align: super; font-size: 80%"
"\"><span style=\"font-style: italic\">n</span></span><span style=\"font-"
"style: italic\"></span>)<span style=\"font-style: italic\"></span>— again "
"because <span style=\"font-style: italic\">n</span><span style=\"vertical-"
"align: super; font-size: 80%\"><span style=\"font-style: italic\"></"
"span>2<span style=\"font-style: italic\"></span></span><span style=\"font-"
"style: italic\"></span> is\n"
" short-hand for the function <span style=\"font-style: italic\">sqr</"
"span>(<span style=\"font-style: italic\">n</span>)<span style=\"font-style: "
"italic\"> = n</span><span style=\"vertical-align: super; font-size: 80%"
"\"><span style=\"font-style: italic\"></span>2<span style=\"font-style: "
"italic\"></span></span><span style=\"font-style: italic\"></span> and <span "
"style=\"font-style: italic\"></span>2<span style=\"font-style: italic\"></"
"span><span style=\"vertical-align: super; font-size: 80%\"><span style="
"\"font-style: italic\">n</span></span><span style=\"font-style: italic\"></"
"span> is short\n"
" for <span style=\"font-style: italic\">expt</span>(<span style=\"font-"
"style: italic\">n</span>)<span style=\"font-style: italic\"> = </span>2<span "
"style=\"font-style: italic\"></span><span style=\"vertical-align: super; "
"font-size: 80%\"><span style=\"font-style: italic\">n</span></span><span "
"style=\"font-style: italic\"></span>.</p>"
msgstr ""
"<p>Наконец, большинство людей используют <span style=\"font-style: italic"
"\">O</span> вместе с\n"
"сокращенным обозначением функций. Таким образом, они говорят, что время "
"выполнения \n"
"<span class=\"RktSym\">how-many</span> равно <span style=\"font-style: italic"
"\">O</span>(<span style=\"font-style: italic\">n</span>)<span style=\"font-"
"style: italic\"></span>, потому что они\n"
"склонны думать о <span style=\"font-style: italic\">n</span> как об "
"аббревиатуре (математической)\n"
"функции <span style=\"font-style: italic\">id</span>(<span style=\"font-"
"style: italic\">n</span>)<span style=\"font-style: italic\"> = n</span>. "
"Точно так же это использование приводит к утверждению, \n"
"что время работы <span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._sort%29%29\" class="
"\"RktValLink\" data-pltdoc=\"x\">sort</a></span> в наихудшем \n"
"случае равно <span style=\"font-style: italic\">O</span>(<span style=\"font-"
"style: italic\">n</span><span style=\"vertical-align: super; font-size: 80%"
"\"><span style=\"font-style: italic\"></span>2<span style=\"font-style: "
"italic\"></span></span><span style=\"font-style: italic\"></span>)<span "
"style=\"font-style: italic\"></span>, а <span class=\"RktSym\">inc</span>’s "
"is <span style=\"font-style: italic\">O</span>(<span style=\"font-style: "
"italic\"></span>2<span style=\"font-style: italic\"></span><span style="
"\"vertical-align: super; font-size: 80%\"><span style=\"font-style: italic"
"\">n</span></span><span style=\"font-style: italic\"></span>)<span style="
"\"font-style: italic\"></span> - опять же, потому что <span style=\"font-"
"style: italic\">n</span><span style=\"vertical-align: super; font-size: 80%"
"\"><span style=\"font-style: italic\"></span>2<span style=\"font-style: "
"italic\"></span></span><span style=\"font-style: italic\"></span> является "
"сокращением для функции\n"
"<span style=\"font-style: italic\">sqr</span>(<span style=\"font-style: "
"italic\">n</span>)<span style=\"font-style: italic\"> = n</span><span style="
"\"vertical-align: super; font-size: 80%\"><span style=\"font-style: italic"
"\"></span>2<span style=\"font-style: italic\"></span></span><span style="
"\"font-style: italic\"></span>, а <span style=\"font-style: italic\"></"
"span>2<span style=\"font-style: italic\"></span><span style=\"vertical-"
"align: super; font-size: 80%\"><span style=\"font-style: italic\">n</span></"
"span><span style=\"font-style: italic\"></span> - сокращением от \n"
" <span style=\"font-style: italic\">expt</span>(<span style=\"font-style: "
"italic\">n</span>)<span style=\"font-style: italic\"> = </span>2<span style="
"\"font-style: italic\"></span><span style=\"vertical-align: super; font-"
"size: 80%\"><span style=\"font-style: italic\">n</span></span><span style="
"\"font-style: italic\"></span>.</p>"

#: in_1/i5-6.html:782
msgid ""
"<p>Stop! What does it mean to say that a function’s performance is\n"
"<span style=\"font-style: italic\">O</span>(<span style=\"font-style: italic"
"\"></span>1<span style=\"font-style: italic\"></span>)<span style=\"font-"
"style: italic\"></span>?</p>"
msgstr ""
"<p>Стоп! Что значит сказать, что производительность функции равна \n"
"<span style=\"font-style: italic\">O</span>(<span style=\"font-style: italic"
"\"></span>1<span style=\"font-style: italic\"></span>)<span style=\"font-"
"style: italic\"></span>?</p>"

#: in_1/i5-6.html:788
msgid ""
"<p><a name=\"(counter._(exercise._ex~3abig-o1))\"></a><span style=\"font-"
"weight: bold\">Exercise</span>&nbsp;486. In the first subsection, we stated "
"that the function\n"
"<span style=\"font-style: italic\">f</span>(<span style=\"font-style: italic"
"\">n</span>)<span style=\"font-style: italic\"> = n</span><span style="
"\"vertical-align: super; font-size: 80%\"><span style=\"font-style: italic"
"\"></span>2<span style=\"font-style: italic\"></span></span><span style="
"\"font-style: italic\"> + n</span> belongs to the class <span style=\"font-"
"style: italic\">O</span>(<span style=\"font-style: italic\">n</span><span "
"style=\"vertical-align: super; font-size: 80%\"><span style=\"font-style: "
"italic\"></span>2<span style=\"font-style: italic\"></span></span><span "
"style=\"font-style: italic\"></span>)<span style=\"font-style: italic\"></"
"span>. Determine the\n"
"pair of numbers <span style=\"font-style: italic\">c</span> and <span style="
"\"font-style: italic\">bigEnough</span> that verify this claim. <a href=\"#"
"%28counter._%28exercise._ex~3abig-o1%29%29\" class=\"ex-end\" data-pltdoc=\"x"
"\"></a></p>"
msgstr ""
"<p><a name=\"(counter._(exercise._ex~3abig-o1))\"></a><span style=\"font-"
"weight: bold\">Упражнение</span>&nbsp;486. В первом пункте мы утверждали, "
"что функция \n"
"<span style=\"font-style: italic\">f</span>(<span style=\"font-style: italic"
"\">n</span>)<span style=\"font-style: italic\"> = n</span><span style="
"\"vertical-align: super; font-size: 80%\"><span style=\"font-style: italic"
"\"></span>2<span style=\"font-style: italic\"></span></span><span style="
"\"font-style: italic\"> + n</span> принадлежит классу <span style=\"font-"
"style: italic\">O</span>(<span style=\"font-style: italic\">n</span><span "
"style=\"vertical-align: super; font-size: 80%\"><span style=\"font-style: "
"italic\"></span>2<span style=\"font-style: italic\"></span></span><span "
"style=\"font-style: italic\"></span>)<span style=\"font-style: italic\"></"
"span>. Определите пару чисел <span style=\"font-style: italic\">c</span> \n"
"и <span style=\"font-style: italic\">bigEnough</span>, которые подтверждают "
"это утверждение.\n"
"<a href=\"#%28counter._%28exercise._ex~3abig-o1%29%29\" class=\"ex-end\" "
"data-pltdoc=\"x\"></a></p>"

#: in_1/i5-6.html:796
msgid ""
"<p><a name=\"(counter._(exercise._ex~3abig-o2))\"></a><span style=\"font-"
"weight: bold\">Exercise</span>&nbsp;487. Consider the functions <span style="
"\"font-style: italic\">f</span>(<span style=\"font-style: italic\">n</"
"span>)<span style=\"font-style: italic\"> = </span>2<span style=\"font-"
"style: italic\"></span><span style=\"vertical-align: super; font-size: 80%"
"\"><span style=\"font-style: italic\">n</span></span><span style=\"font-"
"style: italic\"></span> and\n"
"<span style=\"font-style: italic\">g</span>(<span style=\"font-style: italic"
"\">n</span>)<span style=\"font-style: italic\"> = </span>1<span style=\"font-"
"style: italic\"></span>0<span style=\"font-style: italic\"></span>0<span "
"style=\"font-style: italic\"></span>0<span style=\"font-style: italic\"> n</"
"span>. Show that <span style=\"font-style: italic\">g</span> belongs to "
"<span style=\"font-style: italic\">O</span>(<span style=\"font-style: italic"
"\">f</span>)<span style=\"font-style: italic\"></span>,\n"
"which means that <span style=\"font-style: italic\">f</span> is, abstractly "
"speaking, more (or at least\n"
"equally) expensive than <span style=\"font-style: italic\">g</span>. If the "
"input size is guaranteed to be\n"
"between 3 and 12, which function is better? <a href=\"#%28counter._"
"%28exercise._ex~3abig-o2%29%29\" class=\"ex-end\" data-pltdoc=\"x\"></a></p>"
msgstr ""
"<p><a name=\"(counter._(exercise._ex~3abig-o2))\"></a><span style=\"font-"
"weight: bold\">Упражнение</span>&nbsp;487. Рассмотрим функции <span style="
"\"font-style: italic\">f</span>(<span style=\"font-style: italic\">n</"
"span>)<span style=\"font-style: italic\"> = </span>2<span style=\"font-"
"style: italic\"></span><span style=\"vertical-align: super; font-size: 80%"
"\"><span style=\"font-style: italic\">n</span></span><span style=\"font-"
"style: italic\"></span>\n"
"и <span style=\"font-style: italic\">g</span>(<span style=\"font-style: "
"italic\">n</span>)<span style=\"font-style: italic\"> = </span>1<span style="
"\"font-style: italic\"></span>0<span style=\"font-style: italic\"></"
"span>0<span style=\"font-style: italic\"></span>0<span style=\"font-style: "
"italic\"> n</span>. Докажите, что <span style=\"font-style: italic\">g</"
"span> принадлежит <span style=\"font-style: italic\">O</span>(<span style="
"\"font-style: italic\">f</span>)<span style=\"font-style: italic\"></span>, "
"а это означает, что \n"
"<span style=\"font-style: italic\">f</span>, абстрактно говоря, дороже (или, "
"по \n"
"крайней мере, в равной степени), чем <span style=\"font-style: italic\">g</"
"span>. \n"
"Если размер ввода гарантированно составляет от 3 до 12, какая функция "
"лучше? \n"
"<a href=\"#%28counter._%28exercise._ex~3abig-o2%29%29\" class=\"ex-end\" "
"data-pltdoc=\"x\"></a></p>"

#: in_1/i5-6.html:800
msgid ""
"<p><a name=\"(counter._(exercise._ex~3abig-o3))\"></a><span style=\"font-"
"weight: bold\">Exercise</span>&nbsp;488. Compare <img src=\"i5-6_files/"
"pict_271.png\" alt=\"image\" width=\"83\" height=\"12\"> and <img src="
"\"i5-6_files/pict_272.png\" alt=\"image\" width=\"53\" height=\"13\">. Does "
"<span style=\"font-style: italic\">f</span> belong to <span style=\"font-"
"style: italic\">O</span>(<span style=\"font-style: italic\">g</span>)<span "
"style=\"font-style: italic\"></span> or <span style=\"font-style: italic"
"\">g</span> to <span style=\"font-style: italic\">O</span>(<span style="
"\"font-style: italic\">f</span>)<span style=\"font-style: italic\">?</span> "
"<a href=\"#%28counter._%28exercise._ex~3abig-o3%29%29\" class=\"ex-end\" "
"data-pltdoc=\"x\"></a></p>"
msgstr ""
"<p><a name=\"(counter._(exercise._ex~3abig-o3))\"></a><span style=\"font-"
"weight: bold\">Упражнение</span>&nbsp;488. Сравните <img src=\"i5-6_files/"
"pict_271.png\" alt=\"image\" width=\"83\" height=\"12\"> и <img src="
"\"i5-6_files/pict_272.png\" alt=\"image\" width=\"53\" height=\"13\">. "
"Принадлежит ли <span style=\"font-style: italic\">f</span> к \n"
"<span style=\"font-style: italic\">O</span>(<span style=\"font-style: italic"
"\">g</span>)<span style=\"font-style: italic\"></span> или <span style="
"\"font-style: italic\">g</span> к \n"
"<span style=\"font-style: italic\">O</span>(<span style=\"font-style: italic"
"\">f</span>)<span style=\"font-style: italic\">?</span>  \n"
"<a href=\"#%28counter._%28exercise._ex~3abig-o3%29%29\" class=\"ex-end\" "
"data-pltdoc=\"x\"></a></p>"

#: in_1/i5-6.html:802
msgid ""
"<h3><a name=\"(part._.Why_.Do_.Programs_.Use_.Predicates_and_."
"Selectors_)\"></a>Why Do Programs Use Predicates and Selectors?</h3>"
msgstr ""
"<h3><a name=\"(part._.Why_.Do_.Programs_.Use_.Predicates_and_."
"Selectors_)\"></a>Почему программы используют предикаты и селекторы?</h3>"

#: in_1/i5-6.html:804
msgctxt "in_1/i5-6.html:804"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:811
msgid ""
"<div class=\"SIntrapara\">The notion of “on the order of” explains why the "
"<a name=\"(idx._(gentag._699))\"></a>design recipes produce\n"
" both well-organized and “performant” programs. We illustrate this\n"
" insight with a single example, the design of a program that searches for\n"
" a number in a list of numbers. Here are the signature, the purpose\n"
" statement, and examples formulated as tests:\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCodeFlow\"><table class="
"\"RktBlk\" cellspacing=\"0\" cellpadding=\"0\"><tbody><tr><td><span class="
"\"RktCmt\">;</span><span class=\"RktCmt\">&nbsp;</span><a href=\"part_one."
"html#%28tech._number%29\" class=\"techoutside\" data-pltdoc=\"x\"><span "
"class=\"techinside\">Number</span></a><span class=\"RktCmt\"> [</span><a "
"href=\"part_three.html#%28tech._sim-dd._list._of%29\" class=\"techoutside\" "
"data-pltdoc=\"x\"><span class=\"techinside\">List-of</span></a><span class="
"\"RktCmt\"> </span><a href=\"part_one.html#%28tech._number%29\" class="
"\"techoutside\" data-pltdoc=\"x\"><span class=\"techinside\">Number</span></"
"a><span class=\"RktCmt\">] -&gt; </span><a href=\"part_one.html#%28tech."
"_boolean%29\" class=\"techoutside\" data-pltdoc=\"x\"><span class="
"\"techinside\">Boolean</span></a></td></tr><tr><td><span class=\"RktCmt\">;</"
"span><span class=\"RktCmt\">&nbsp;</span><span class=\"RktCmt\">is </"
"span><span class=\"RktSym\">x</span><span class=\"RktCmt\"> in </span><span "
"class=\"RktSym\">l</span></td></tr><tr><td><span class=\"hspace\">&nbsp;</"
"span></td></tr><tr><td><span class=\"RktPn\">(</span><span class=\"RktSym"
"\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#"
"%28form._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._check-expect"
"%29%29\" class=\"RktStxLink\" data-pltdoc=\"x\">check-expect</a></span><span "
"class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class="
"\"RktSym\">search</span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktVal\">0</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal"
"\">'</span><span class=\"RktVal\">(</span><span class=\"RktVal\">3</"
"span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">2</"
"span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">1</"
"span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">0</"
"span><span class=\"RktVal\">)</span><span class=\"RktPn\">)</span><span "
"class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#true</span><span class="
"\"RktPn\">)</span></td></tr><tr><td><span class=\"RktPn\">(</span><span "
"class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/"
"intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-intermediate-lambda.."
"rkt%29._check-expect%29%29\" class=\"RktStxLink\" data-pltdoc=\"x\">check-"
"expect</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn"
"\">(</span><span class=\"RktSym\">search</span><span class=\"hspace\">&nbsp;"
"</span><span class=\"RktVal\">4</span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktVal\">'</span><span class=\"RktVal\">(</span><span "
"class=\"RktVal\">3</span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktVal\">2</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal"
"\">1</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">0</"
"span><span class=\"RktVal\">)</span><span class=\"RktPn\">)</span><span "
"class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#false</span><span "
"class=\"RktPn\">)</span></td></tr></tbody></table></blockquote></div>"
msgstr ""
"<div class=\"SIntrapara\">Понятие «в порядке очереди» объясняет, почему \n"
"<a name=\"(idx._(gentag._699))\"></a>рецепты  проектирования создают как "
"хорошо\n"
"организованные, так и «эффективные» программы. Мы проиллюстрируем это "
"понимание \n"
"на единственном примере - разработке программы, которая ищет число в списке "
"чисел. \n"
"Вот сигнатура, предназначение и примеры, сформулированные в виде тестов: \n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCodeFlow\"><table class="
"\"RktBlk\" cellspacing=\"0\" cellpadding=\"0\"><tbody><tr><td><span class="
"\"RktCmt\">;</span><span class=\"RktCmt\">&nbsp;</span><a href=\"part_one."
"html#%28tech._number%29\" class=\"techoutside\" data-pltdoc=\"x\"><span "
"class=\"techinside\">Number</span></a><span class=\"RktCmt\"> [</span><a "
"href=\"part_three.html#%28tech._sim-dd._list._of%29\" class=\"techoutside\" "
"data-pltdoc=\"x\"><span class=\"techinside\">List-of</span></a><span class="
"\"RktCmt\"> </span><a href=\"part_one.html#%28tech._number%29\" class="
"\"techoutside\" data-pltdoc=\"x\"><span class=\"techinside\">Number</span></"
"a><span class=\"RktCmt\">] -&gt; </span><a href=\"part_one.html#%28tech."
"_boolean%29\" class=\"techoutside\" data-pltdoc=\"x\"><span class="
"\"techinside\">Boolean</span></a></td></tr><tr><td><span class=\"RktCmt\">;</"
"span><span class=\"RktCmt\">&nbsp;</span><span class=\"RktCmt\">is </"
"span><span class=\"RktSym\">x</span><span class=\"RktCmt\"> in </span><span "
"class=\"RktSym\">l</span></td></tr><tr><td><span class=\"hspace\">&nbsp;</"
"span></td></tr><tr><td><span class=\"RktPn\">(</span><span class=\"RktSym"
"\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#"
"%28form._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._check-expect"
"%29%29\" class=\"RktStxLink\" data-pltdoc=\"x\">check-expect</a></span><span "
"class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class="
"\"RktSym\">search</span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktVal\">0</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal"
"\">'</span><span class=\"RktVal\">(</span><span class=\"RktVal\">3</"
"span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">2</"
"span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">1</"
"span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">0</"
"span><span class=\"RktVal\">)</span><span class=\"RktPn\">)</span><span "
"class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#true</span><span class="
"\"RktPn\">)</span></td></tr><tr><td><span class=\"RktPn\">(</span><span "
"class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/"
"intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-intermediate-lambda.."
"rkt%29._check-expect%29%29\" class=\"RktStxLink\" data-pltdoc=\"x\">check-"
"expect</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn"
"\">(</span><span class=\"RktSym\">search</span><span class=\"hspace\">&nbsp;"
"</span><span class=\"RktVal\">4</span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktVal\">'</span><span class=\"RktVal\">(</span><span "
"class=\"RktVal\">3</span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktVal\">2</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal"
"\">1</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">0</"
"span><span class=\"RktVal\">)</span><span class=\"RktPn\">)</span><span "
"class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#false</span><span "
"class=\"RktPn\">)</span></td></tr></tbody></table></blockquote></div>"

#: in_1/i5-6.html:813
msgctxt "in_1/i5-6.html:813"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:817
msgctxt "in_1/i5-6.html:817"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:826
msgid ""
"<div class=\"SIntrapara\">Here are two definitions that live up to these "
"expectations: <a name=\"(idx._(gentag._700))\"></a> <a name=\"(idx._(gentag."
"_701))\"></a>\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SVInsetFlow\"><table "
"cellspacing=\"0\" cellpadding=\"0\"><tbody><tr><td><table class=\"RktBlk\" "
"cellspacing=\"0\" cellpadding=\"0\"><tbody><tr><td><span class=\"RktPn\">(</"
"span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-"
"langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-intermediate-"
"lambda..rkt%29._define%29%29\" class=\"RktStxLink\" data-pltdoc=\"x"
"\">define</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn"
"\">(</span><span class=\"RktSym\">searchL</span><span class=\"hspace\">&nbsp;"
"</span><span class=\"RktSym\">x</span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktSym\">l</span><span class=\"RktPn\">)</span></td></"
"tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"RktPn"
"\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/"
"htdp-langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._cond%29%29\" class=\"RktStxLink\" data-pltdoc="
"\"x\">cond</a></span></td></tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;"
"&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class=\"RktPn\">(</"
"span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-"
"langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib._lang"
"%2Fhtdp-intermediate-lambda..rkt%29._empty~3f%29%29\" class=\"RktValLink\" "
"data-pltdoc=\"x\">empty?</a></span><span class=\"hspace\">&nbsp;</span><span "
"class=\"RktSym\">l</span><span class=\"RktPn\">)</span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktVal\">#false</span><span class=\"RktPn\">]</"
"span></td></tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</"
"span><span class=\"RktPn\">[</span><span class=\"RktSym\"><a href=\"https://"
"docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28form._%28%28lib."
"_lang%2Fhtdp-intermediate-lambda..rkt%29._else%29%29\" class=\"RktStxLink\" "
"data-pltdoc=\"x\">else</a></span></td></tr><tr><td><span class=\"hspace"
"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">(</span><span "
"class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/"
"intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-intermediate-lambda.."
"rkt%29._or%29%29\" class=\"RktStxLink\" data-pltdoc=\"x\">or</a></span><span "
"class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class="
"\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-"
"lam.html#%28def._htdp-intermediate-lambda._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._~3d%29%29\" class=\"RktValLink\" data-pltdoc=\"x"
"\">=</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</"
"span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-"
"langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib._lang"
"%2Fhtdp-intermediate-lambda..rkt%29._first%29%29\" class=\"RktValLink\" data-"
"pltdoc=\"x\">first</a></span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktSym\">l</span><span class=\"RktPn\">)</span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktSym\">x</span><span class=\"RktPn\">)</"
"span></td></tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
"&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">(</span><span class="
"\"RktSym\">searchL</span></td></tr><tr><td><span class=\"hspace\">&nbsp;"
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span "
"class=\"RktSym\">x</span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._rest%29%29\" class="
"\"RktValLink\" data-pltdoc=\"x\">rest</a></span><span class=\"hspace\">&nbsp;"
"</span><span class=\"RktSym\">l</span><span class=\"RktPn\">)</span><span "
"class=\"RktPn\">)</span><span class=\"RktPn\">)</span><span class=\"RktPn"
"\">]</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span></"
"td></tr></tbody></table></td><td><table class=\"RktBlk\" cellspacing=\"0\" "
"cellpadding=\"0\"><tbody><tr><td><span class=\"RktPn\">(</span><span class="
"\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-"
"lam.html#%28form._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._define"
"%29%29\" class=\"RktStxLink\" data-pltdoc=\"x\">define</a></span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym"
"\">searchS</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym"
"\">x</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">l</"
"span><span class=\"RktPn\">)</span></td></tr><tr><td><span class=\"hspace"
"\">&nbsp;&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym"
"\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#"
"%28form._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._cond%29%29\" "
"class=\"RktStxLink\" data-pltdoc=\"x\">cond</a></span></td></"
"tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="
"\"RktPn\">[</span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a "
"href=\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28def."
"_htdp-intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt"
"%29._~3d%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">=</a></span><span "
"class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class="
"\"RktSym\">length</span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktSym\">l</span><span class=\"RktPn\">)</span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktVal\">0</span><span class=\"RktPn\">)</"
"span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#false</"
"span><span class=\"RktPn\">]</span></td></tr><tr><td><span class=\"hspace"
"\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class="
"\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-"
"lam.html#%28form._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._else"
"%29%29\" class=\"RktStxLink\" data-pltdoc=\"x\">else</a></span></td></"
"tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span "
"class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-"
"lang.org/htdp-langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._or%29%29\" class=\"RktStxLink\" data-pltdoc=\"x"
"\">or</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</"
"span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-"
"langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib._lang"
"%2Fhtdp-intermediate-lambda..rkt%29._~3d%29%29\" class=\"RktValLink\" data-"
"pltdoc=\"x\">=</a></span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._first%29%29\" class="
"\"RktValLink\" data-pltdoc=\"x\">first</a></span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktSym\">l</span><span class=\"RktPn\">)</"
"span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">x</"
"span><span class=\"RktPn\">)</span></td></tr><tr><td><span class=\"hspace"
"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="
"\"RktPn\">(</span><span class=\"RktSym\">searchS</span></td></"
"tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
"&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktSym\">x</span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym"
"\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#"
"%28def._htdp-intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-"
"lambda..rkt%29._rest%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">rest</"
"a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">l</"
"span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span><span class="
"\"RktPn\">)</span><span class=\"RktPn\">]</span><span class=\"RktPn\">)</"
"span><span class=\"RktPn\">)</span></td></tr></tbody></table></td></tr></"
"tbody></table></blockquote></div><div class=\"SIntrapara\">The design of the "
"program on the left follows the design recipe.  In\n"
" particular, the development of the template calls for the use of\n"
" <a name=\"(idx._(gentag._702))\"></a>structural predicates per clause in "
"the data definition. Following this\n"
" advice yields a conditional program whose first <span class=\"RktSym\"><a "
"href=\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28form."
"_%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._cond%29%29\" class="
"\"RktStxLink\" data-pltdoc=\"x\">cond</a></span> line deals\n"
" with empty lists and whose second one deals with all others. The question "
"in the\n"
" first <span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-"
"langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-intermediate-"
"lambda..rkt%29._cond%29%29\" class=\"RktStxLink\" data-pltdoc=\"x\">cond</"
"a></span> line uses <span class=\"RktSym\"><a href=\"https://docs.racket-"
"lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._empty~3f%29%29\" class="
"\"RktValLink\" data-pltdoc=\"x\">empty?</a></span>  and the second one uses\n"
" <span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/"
"intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib._lang"
"%2Fhtdp-intermediate-lambda..rkt%29._cons~3f%29%29\" class=\"RktValLink\" "
"data-pltdoc=\"x\">cons?</a></span> or <span class=\"RktSym\"><a href="
"\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28form._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._else%29%29\" class="
"\"RktStxLink\" data-pltdoc=\"x\">else</a></span>.</div>"
msgstr ""
"<div class=\"SIntrapara\">Вот два определения, которые оправдывают эти "
"ожидания:  \n"
"<a name=\"(idx._(gentag._700))\"></a> <a name=\"(idx._(gentag._701))\"></a>\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SVInsetFlow\"><table "
"cellspacing=\"0\" cellpadding=\"0\"><tbody><tr><td><table class=\"RktBlk\" "
"cellspacing=\"0\" cellpadding=\"0\"><tbody><tr><td><span class=\"RktPn\">(</"
"span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-"
"langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-intermediate-"
"lambda..rkt%29._define%29%29\" class=\"RktStxLink\" data-pltdoc=\"x"
"\">define</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn"
"\">(</span><span class=\"RktSym\">searchL</span><span class=\"hspace\">&nbsp;"
"</span><span class=\"RktSym\">x</span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktSym\">l</span><span class=\"RktPn\">)</span></td></"
"tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"RktPn"
"\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/"
"htdp-langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._cond%29%29\" class=\"RktStxLink\" data-pltdoc="
"\"x\">cond</a></span></td></tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;"
"&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class=\"RktPn\">(</"
"span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-"
"langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib._lang"
"%2Fhtdp-intermediate-lambda..rkt%29._empty~3f%29%29\" class=\"RktValLink\" "
"data-pltdoc=\"x\">empty?</a></span><span class=\"hspace\">&nbsp;</span><span "
"class=\"RktSym\">l</span><span class=\"RktPn\">)</span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktVal\">#false</span><span class=\"RktPn\">]</"
"span></td></tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</"
"span><span class=\"RktPn\">[</span><span class=\"RktSym\"><a href=\"https://"
"docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28form._%28%28lib."
"_lang%2Fhtdp-intermediate-lambda..rkt%29._else%29%29\" class=\"RktStxLink\" "
"data-pltdoc=\"x\">else</a></span></td></tr><tr><td><span class=\"hspace"
"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">(</span><span "
"class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/"
"intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-intermediate-lambda.."
"rkt%29._or%29%29\" class=\"RktStxLink\" data-pltdoc=\"x\">or</a></span><span "
"class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class="
"\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-"
"lam.html#%28def._htdp-intermediate-lambda._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._~3d%29%29\" class=\"RktValLink\" data-pltdoc=\"x"
"\">=</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</"
"span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-"
"langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib._lang"
"%2Fhtdp-intermediate-lambda..rkt%29._first%29%29\" class=\"RktValLink\" data-"
"pltdoc=\"x\">first</a></span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktSym\">l</span><span class=\"RktPn\">)</span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktSym\">x</span><span class=\"RktPn\">)</"
"span></td></tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
"&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">(</span><span class="
"\"RktSym\">searchL</span></td></tr><tr><td><span class=\"hspace\">&nbsp;"
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span "
"class=\"RktSym\">x</span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._rest%29%29\" class="
"\"RktValLink\" data-pltdoc=\"x\">rest</a></span><span class=\"hspace\">&nbsp;"
"</span><span class=\"RktSym\">l</span><span class=\"RktPn\">)</span><span "
"class=\"RktPn\">)</span><span class=\"RktPn\">)</span><span class=\"RktPn"
"\">]</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span></"
"td></tr></tbody></table></td><td><table class=\"RktBlk\" cellspacing=\"0\" "
"cellpadding=\"0\"><tbody><tr><td><span class=\"RktPn\">(</span><span class="
"\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-"
"lam.html#%28form._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._define"
"%29%29\" class=\"RktStxLink\" data-pltdoc=\"x\">define</a></span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym"
"\">searchS</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym"
"\">x</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">l</"
"span><span class=\"RktPn\">)</span></td></tr><tr><td><span class=\"hspace"
"\">&nbsp;&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym"
"\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#"
"%28form._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._cond%29%29\" "
"class=\"RktStxLink\" data-pltdoc=\"x\">cond</a></span></td></"
"tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="
"\"RktPn\">[</span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a "
"href=\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28def."
"_htdp-intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt"
"%29._~3d%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">=</a></span><span "
"class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class="
"\"RktSym\">length</span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktSym\">l</span><span class=\"RktPn\">)</span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktVal\">0</span><span class=\"RktPn\">)</"
"span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#false</"
"span><span class=\"RktPn\">]</span></td></tr><tr><td><span class=\"hspace"
"\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class="
"\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-"
"lam.html#%28form._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._else"
"%29%29\" class=\"RktStxLink\" data-pltdoc=\"x\">else</a></span></td></"
"tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span "
"class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-"
"lang.org/htdp-langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._or%29%29\" class=\"RktStxLink\" data-pltdoc=\"x"
"\">or</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</"
"span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-"
"langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib._lang"
"%2Fhtdp-intermediate-lambda..rkt%29._~3d%29%29\" class=\"RktValLink\" data-"
"pltdoc=\"x\">=</a></span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._first%29%29\" class="
"\"RktValLink\" data-pltdoc=\"x\">first</a></span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktSym\">l</span><span class=\"RktPn\">)</"
"span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">x</"
"span><span class=\"RktPn\">)</span></td></tr><tr><td><span class=\"hspace"
"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="
"\"RktPn\">(</span><span class=\"RktSym\">searchS</span></td></"
"tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
"&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktSym\">x</span><span class="
"\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym"
"\"><a href=\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#"
"%28def._htdp-intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-"
"lambda..rkt%29._rest%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">rest</"
"a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">l</"
"span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span><span class="
"\"RktPn\">)</span><span class=\"RktPn\">]</span><span class=\"RktPn\">)</"
"span><span class=\"RktPn\">)</span></td></tr></tbody></table></td></tr></"
"tbody></table></blockquote></div><div class=\"SIntrapara\">\n"
"Разработка программы слева следует рецепту проектирования. В частности, "
"разработка \n"
"шаблона требует использования <a name=\"(idx._(gentag._702))\"></"
"a>структурных предикатов \n"
"для каждого предложения в определении данных. Следуя этому совету, вы "
"получите условную\n"
"программу, первая строка <span class=\"RktSym\"><a href=\"https://docs."
"racket-lang.org/htdp-langs/intermediate-lam.html#%28form._%28%28lib._lang"
"%2Fhtdp-intermediate-lambda..rkt%29._cond%29%29\" class=\"RktStxLink\" data-"
"pltdoc=\"x\">cond</a></span>\n"
"которой имеет дело с пустыми списками, а вторая - со всеми остальными. \n"
"Вопрос в первой строке <span class=\"RktSym\"><a href=\"https://docs.racket-"
"lang.org/htdp-langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._cond%29%29\" class=\"RktStxLink\" data-pltdoc="
"\"x\">cond</a></span> \n"
"использует <span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/"
"htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib."
"_lang%2Fhtdp-intermediate-lambda..rkt%29._empty~3f%29%29\" class=\"RktValLink"
"\" data-pltdoc=\"x\">empty?</a></span>,\n"
"а вторая использует  \n"
" <span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/"
"intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib._lang"
"%2Fhtdp-intermediate-lambda..rkt%29._cons~3f%29%29\" class=\"RktValLink\" "
"data-pltdoc=\"x\">cons?</a></span> или \n"
"<span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/"
"intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-intermediate-lambda.."
"rkt%29._else%29%29\" class=\"RktStxLink\" data-pltdoc=\"x\">else</a></span>."
"</div>"

#: in_1/i5-6.html:828
msgctxt "in_1/i5-6.html:828"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:836
msgid ""
"<p>The design of <span class=\"RktSym\">searchS</span> fails to live up to "
"the <a name=\"(idx._(gentag._703))\"></a>structural\n"
"design<span class=\"refelem\"><span class=\"refcolumn\"><span class="
"\"refcontent\">It really uses generative recursion.</span></span></span> "
"recipe. It\n"
" instead takes inspiration from the idea that lists are containers that\n"
" have a size. Hence, a program can check this size for <span class=\"RktVal"
"\">0</span>, which is\n"
" equivalent to checking for emptiness.</p>"
msgstr ""
"<p>Разработка <span class=\"RktSym\">searchS</span> не соответствует \n"
"<a name=\"(idx._(gentag._703))\"></a>рецепту структурного проектирования.\n"
"<span class=\"refelem\"><span class=\"refcolumn\"><span class=\"refcontent"
"\">\n"
"Она действительно использует генеративную рекурсию. \n"
"</span></span></span>\n"
"Вместо этого она вдохновлена идеей, что списки - это контейнеры, имеющие "
"размер.\n"
"Следовательно, программа может проверить этот размер на <span class=\"RktVal"
"\">0</span>, \n"
"что эквивалентно проверке на пустоту.\n"
"</p>"

#: in_1/i5-6.html:848
msgid ""
"<p>Although this idea is functionally correct, it makes the assumption that\n"
" the cost of <span class=\"stt\">*SL</span>-provided operations is a fixed "
"constant. If\n"
" <span class=\"RktSym\">length</span> is more like <span class=\"RktSym"
"\">how-many</span>, however, <span class=\"RktSym\">searchS</span>\n"
" is going to be slower than <span class=\"RktSym\">searchL</span>. Using our "
"new terminology,\n"
" <span class=\"RktSym\">searchL</span> is using <span style=\"font-style: "
"italic\">O</span>(<span style=\"font-style: italic\">n</span>)<span style="
"\"font-style: italic\"></span> recursive steps while\n"
" <span class=\"RktSym\">searchS</span> needs <span style=\"font-style: italic"
"\">O</span>(<span style=\"font-style: italic\">n</span><span style="
"\"vertical-align: super; font-size: 80%\"><span style=\"font-style: italic"
"\"></span>2<span style=\"font-style: italic\"></span></span><span style="
"\"font-style: italic\"></span>)<span style=\"font-style: italic\"></span> "
"steps for a list of <span style=\"font-style: italic\">n</span>\n"
" items. In short, using arbitrary <span class=\"stt\">*SL</span> operations "
"to formulate conditions\n"
" may shift performance from one class of functions to one that is much\n"
" worse.</p>"
msgstr ""
"<p>Хотя эта идея функционально верна, она предполагает, что стоимость "
"операций,\n"
"предоставляемых <span class=\"stt\">*SL</span>, является фиксированной "
"константой. \n"
"Однако, если <span class=\"RktSym\">length</span> больше похожа на \n"
"<span class=\"RktSym\">how-many</span>, <span class=\"RktSym\">searchS</"
"span> будет медленнее,\n"
"чем <span class=\"RktSym\">searchL</span>. Используя нашу новую "
"терминологию, \n"
"<span class=\"RktSym\">searchL</span> использует <span style=\"font-style: "
"italic\">O</span>(<span style=\"font-style: italic\">n</span>)<span style="
"\"font-style: italic\"></span>\n"
"рекурсивных шагов, в то время как <span class=\"RktSym\">searchS</span> "
"требует \n"
"<span style=\"font-style: italic\">O</span>(<span style=\"font-style: italic"
"\">n</span><span style=\"vertical-align: super; font-size: 80%\"><span style="
"\"font-style: italic\"></span>2<span style=\"font-style: italic\"></span></"
"span><span style=\"font-style: italic\"></span>)<span style=\"font-style: "
"italic\"></span> шагов для списка из <span style=\"font-style: italic\">n</"
"span> элементов. Короче говоря, использование произвольных операций <span "
"class=\"stt\">*SL</span> для формулирования условий может привести к "
"смещению производительности с \n"
"одного класса функций на гораздо худший.\n"
"</p>"

#: in_1/i5-6.html:852
msgctxt "in_1/i5-6.html:852"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:862
msgid ""
"<div class=\"SIntrapara\">Let’s wrap up this intermezzo with an experiment "
"that checks whether\n"
" <span class=\"RktSym\">length</span> is a constant-time function or whether "
"it consumes time\n"
" proportionally to the length of the given list. The easiest way is to\n"
" define a program that creates a long list and determines how much time\n"
" each version of the search program takes: <a name=\"(idx._(gentag."
"_704))\"></a>\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCodeFlow\"><table class="
"\"RktBlk\" cellspacing=\"0\" cellpadding=\"0\"><tbody><tr><td><span class="
"\"RktCmt\">;</span><span class=\"RktCmt\">&nbsp;</span><a href=\"part_two."
"html#%28tech._n%29\" class=\"techoutside\" data-pltdoc=\"x\"><span class="
"\"techinside\">N</span></a><span class=\"RktCmt\"> -&gt; [</span><a href="
"\"part_three.html#%28tech._sim-dd._list%29\" class=\"techoutside\" data-"
"pltdoc=\"x\"><span class=\"techinside\">List</span></a><span class=\"RktCmt"
"\"> </span><a href=\"part_one.html#%28tech._number%29\" class=\"techoutside"
"\" data-pltdoc=\"x\"><span class=\"techinside\">Number</span></a><span class="
"\"RktCmt\"> </span><a href=\"part_one.html#%28tech._number%29\" class="
"\"techoutside\" data-pltdoc=\"x\"><span class=\"techinside\">Number</span></"
"a><span class=\"RktCmt\">]</span></td></tr><tr><td><span class=\"RktCmt\">;</"
"span><span class=\"RktCmt\">&nbsp;</span><span class=\"RktCmt\">how long do "
"</span><span class=\"RktSym\">searchS</span><span class=\"RktCmt\"> and </"
"span><span class=\"RktSym\">searchL</span><span class=\"RktCmt\"> take </"
"span></td></tr><tr><td><span class=\"RktCmt\">;</span><span class=\"RktCmt"
"\">&nbsp;</span><span class=\"RktCmt\">to look for </span><span class="
"\"RktSym\">n</span><span class=\"RktCmt\"> in </span><span class=\"RktPn"
"\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/"
"htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib."
"_lang%2Fhtdp-intermediate-lambda..rkt%29._list%29%29\" class=\"RktValLink\" "
"data-pltdoc=\"x\">list</a></span><span class=\"stt\"> </span><span class="
"\"RktVal\">0</span><span class=\"stt\"> </span><span class=\"RktSym\"><a "
"href=\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28form."
"_%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._......%29%29\" class="
"\"RktStxLink\" data-pltdoc=\"x\">...</a></span><span class=\"stt\"> </"
"span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://"
"docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-"
"intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._-"
"%29%29\" class=\"RktValLink\" data-pltdoc=\"x\"><span class=\"nobreak\">-</"
"span></a></span><span class=\"stt\"> </span><span class=\"RktSym\">n</"
"span><span class=\"stt\"> </span><span class=\"RktVal\">1</span><span class="
"\"RktPn\">)</span><span class=\"RktPn\">)</span></td></tr><tr><td><span "
"class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-"
"lang.org/htdp-langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._define%29%29\" class=\"RktStxLink\" data-pltdoc="
"\"x\">define</a></span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktPn\">(</span><span class=\"RktSym\">timing</span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktSym\">n</span><span class=\"RktPn\">)</"
"span></td></tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;</span><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._local%29%29\" class=\"RktStxLink\" data-pltdoc="
"\"x\">local</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn"
"\">(</span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href="
"\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28form._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._define%29%29\" class="
"\"RktStxLink\" data-pltdoc=\"x\">define</a></span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktSym\">long-list</span></td></"
"tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">(</span><span "
"class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/"
"intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib._lang"
"%2Fhtdp-intermediate-lambda..rkt%29._build-list%29%29\" class=\"RktValLink\" "
"data-pltdoc=\"x\">build-list</a></span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktSym\">n</span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://"
"docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28form._%28%28lib."
"_lang%2Fhtdp-intermediate-lambda..rkt%29._lambda%29%29\" class=\"RktStxLink"
"\" data-pltdoc=\"x\">lambda</a></span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktPn\">(</span><span class=\"RktSym\">x</span><span "
"class=\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktSym\">x</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</"
"span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span></td></"
"tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._list%29%29\" class="
"\"RktValLink\" data-pltdoc=\"x\">list</a></span></td></tr><tr><td><span "
"class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._time%29%29\" class=\"RktStxLink\" data-pltdoc="
"\"x\">time</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn"
"\">(</span><span class=\"RktSym\">searchS</span><span class=\"hspace\">&nbsp;"
"</span><span class=\"RktSym\">n</span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktSym\">long-list</span><span class=\"RktPn\">)</"
"span><span class=\"RktPn\">)</span></td></tr><tr><td><span class=\"hspace"
"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">(</"
"span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-"
"langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-intermediate-"
"lambda..rkt%29._time%29%29\" class=\"RktStxLink\" data-pltdoc=\"x\">time</"
"a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</"
"span><span class=\"RktSym\">searchL</span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktSym\">n</span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktSym\">long-list</span><span class=\"RktPn\">)</"
"span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span><span class="
"\"RktPn\">)</span><span class=\"RktPn\">)</span></td></tr></tbody></table></"
"blockquote></div><div class=\"SIntrapara\">Now run this program on <span "
"class=\"RktVal\">10000</span> and <span class=\"RktVal\">20000</span>.\n"
" If <span class=\"RktSym\">length</span> is like <span class=\"RktSym\"><a "
"href=\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28def."
"_htdp-intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt"
"%29._empty~3f%29%29\" class=\"RktValLink\" data-pltdoc=\"x\">empty?</a></"
"span>, the times for the second run\n"
" will be roughly twice those of the first one; otherwise, the time for\n"
" <span class=\"RktSym\">searchS</span> will increase dramatically.</div>"
msgstr ""
"<div class=\"SIntrapara\">Давайте завершим это интермеццо экспериментом, "
"который проверяет,\n"
"является ли <span class=\"RktSym\">length</span> функцией постоянного "
"времени или \n"
"она требует времени пропорционально длине данного списка. Самый простой "
"способ - \n"
"определить программу, которая создает длинный список и определяет, сколько "
"времени \n"
"занимает каждая версия программы поиска:  \n"
"<a name=\"(idx._(gentag._704))\"></a>\n"
"</div><div class=\"SIntrapara\"><blockquote class=\"SCodeFlow\"><table class="
"\"RktBlk\" cellspacing=\"0\" cellpadding=\"0\"><tbody><tr><td><span class="
"\"RktCmt\">;</span><span class=\"RktCmt\">&nbsp;</span><a href=\"part_two."
"html#%28tech._n%29\" class=\"techoutside\" data-pltdoc=\"x\"><span class="
"\"techinside\">N</span></a><span class=\"RktCmt\"> -&gt; [</span><a href="
"\"part_three.html#%28tech._sim-dd._list%29\" class=\"techoutside\" data-"
"pltdoc=\"x\"><span class=\"techinside\">List</span></a><span class=\"RktCmt"
"\"> </span><a href=\"part_one.html#%28tech._number%29\" class=\"techoutside"
"\" data-pltdoc=\"x\"><span class=\"techinside\">Number</span></a><span class="
"\"RktCmt\"> </span><a href=\"part_one.html#%28tech._number%29\" class="
"\"techoutside\" data-pltdoc=\"x\"><span class=\"techinside\">Number</span></"
"a><span class=\"RktCmt\">]</span></td></tr><tr><td><span class=\"RktCmt\">;</"
"span><span class=\"RktCmt\">&nbsp;</span><span class=\"RktCmt\">how long do "
"</span><span class=\"RktSym\">searchS</span><span class=\"RktCmt\"> and </"
"span><span class=\"RktSym\">searchL</span><span class=\"RktCmt\"> take </"
"span></td></tr><tr><td><span class=\"RktCmt\">;</span><span class=\"RktCmt"
"\">&nbsp;</span><span class=\"RktCmt\">to look for </span><span class="
"\"RktSym\">n</span><span class=\"RktCmt\"> in </span><span class=\"RktPn"
"\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/"
"htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib."
"_lang%2Fhtdp-intermediate-lambda..rkt%29._list%29%29\" class=\"RktValLink\" "
"data-pltdoc=\"x\">list</a></span><span class=\"stt\"> </span><span class="
"\"RktVal\">0</span><span class=\"stt\"> </span><span class=\"RktSym\"><a "
"href=\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28form."
"_%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._......%29%29\" class="
"\"RktStxLink\" data-pltdoc=\"x\">...</a></span><span class=\"stt\"> </"
"span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://"
"docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28def._htdp-"
"intermediate-lambda._%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._-"
"%29%29\" class=\"RktValLink\" data-pltdoc=\"x\"><span class=\"nobreak\">-</"
"span></a></span><span class=\"stt\"> </span><span class=\"RktSym\">n</"
"span><span class=\"stt\"> </span><span class=\"RktVal\">1</span><span class="
"\"RktPn\">)</span><span class=\"RktPn\">)</span></td></tr><tr><td><span "
"class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-"
"lang.org/htdp-langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._define%29%29\" class=\"RktStxLink\" data-pltdoc="
"\"x\">define</a></span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktPn\">(</span><span class=\"RktSym\">timing</span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktSym\">n</span><span class=\"RktPn\">)</"
"span></td></tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;</span><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._local%29%29\" class=\"RktStxLink\" data-pltdoc="
"\"x\">local</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn"
"\">(</span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href="
"\"https://docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28form._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._define%29%29\" class="
"\"RktStxLink\" data-pltdoc=\"x\">define</a></span><span class=\"hspace"
"\">&nbsp;</span><span class=\"RktSym\">long-list</span></td></"
"tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">(</span><span "
"class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/"
"intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib._lang"
"%2Fhtdp-intermediate-lambda..rkt%29._build-list%29%29\" class=\"RktValLink\" "
"data-pltdoc=\"x\">build-list</a></span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktSym\">n</span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://"
"docs.racket-lang.org/htdp-langs/intermediate-lam.html#%28form._%28%28lib."
"_lang%2Fhtdp-intermediate-lambda..rkt%29._lambda%29%29\" class=\"RktStxLink"
"\" data-pltdoc=\"x\">lambda</a></span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktPn\">(</span><span class=\"RktSym\">x</span><span "
"class=\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span class="
"\"RktSym\">x</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</"
"span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span></td></"
"tr><tr><td><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28def._htdp-intermediate-lambda._"
"%28%28lib._lang%2Fhtdp-intermediate-lambda..rkt%29._list%29%29\" class="
"\"RktValLink\" data-pltdoc=\"x\">list</a></span></td></tr><tr><td><span "
"class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="
"\"RktPn\">(</span><span class=\"RktSym\"><a href=\"https://docs.racket-lang."
"org/htdp-langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-"
"intermediate-lambda..rkt%29._time%29%29\" class=\"RktStxLink\" data-pltdoc="
"\"x\">time</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn"
"\">(</span><span class=\"RktSym\">searchS</span><span class=\"hspace\">&nbsp;"
"</span><span class=\"RktSym\">n</span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktSym\">long-list</span><span class=\"RktPn\">)</"
"span><span class=\"RktPn\">)</span></td></tr><tr><td><span class=\"hspace"
"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">(</"
"span><span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-"
"langs/intermediate-lam.html#%28form._%28%28lib._lang%2Fhtdp-intermediate-"
"lambda..rkt%29._time%29%29\" class=\"RktStxLink\" data-pltdoc=\"x\">time</"
"a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</"
"span><span class=\"RktSym\">searchL</span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktSym\">n</span><span class=\"hspace\">&nbsp;</"
"span><span class=\"RktSym\">long-list</span><span class=\"RktPn\">)</"
"span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span><span class="
"\"RktPn\">)</span><span class=\"RktPn\">)</span></td></tr></tbody></table></"
"blockquote></div><div class=\"SIntrapara\">\n"
"Теперь запустите эту программу на <span class=\"RktVal\">10000</span> и \n"
"<span class=\"RktVal\">20000</span>. Если  <span class=\"RktSym\">length</"
"span> подобна\n"
"<span class=\"RktSym\"><a href=\"https://docs.racket-lang.org/htdp-langs/"
"intermediate-lam.html#%28def._htdp-intermediate-lambda._%28%28lib._lang"
"%2Fhtdp-intermediate-lambda..rkt%29._empty~3f%29%29\" class=\"RktValLink\" "
"data-pltdoc=\"x\">empty?</a></span>, \n"
"время второго прогона будет примерно вдвое больше, чем у первого; в "
"противном случае \n"
"время <span class=\"RktSym\">searchS</span> резко увеличится.\n"
"</div>"

#: in_1/i5-6.html:864
msgctxt "in_1/i5-6.html:864"
msgid "<p></p>"
msgstr ""

#: in_1/i5-6.html:868
msgid "<p>Stop! Conduct the experiment.</p>"
msgstr "<p>Стоп! Проведите эксперимент.</p>"

#: in_1/i5-6.html:880
msgid ""
"<p>Assuming you have completed the experiment, you now know that\n"
" <span class=\"RktSym\">length</span> takes time proportionally to the size "
"of the given list.\n"
" The “S” in <span class=\"RktSym\">searchS</span> stands for “squared” "
"because its running\n"
" time is <span style=\"font-style: italic\">O</span>(<span style=\"font-"
"style: italic\">n</span><span style=\"vertical-align: super; font-size: 80%"
"\"><span style=\"font-style: italic\"></span>2<span style=\"font-style: "
"italic\"></span></span><span style=\"font-style: italic\"></span>)<span "
"style=\"font-style: italic\"></span>.  But don’t jump to the conclusion "
"that\n"
" this<span class=\"refelem\"><span class=\"refcolumn\"><span class="
"\"refcontent\">See <a href=\"part_six.html#%28part._sec~3amore-accu-mc%29\" "
"data-pltdoc=\"x\">Data Representations with Accumulators</a> for how other "
"languages\n"
"track the size of a container.</span></span></span>  kind of reasoning holds "
"for every\n"
" programming language you will encounter.  Many deal with containers\n"
" differently than <span class=\"stt\">*SL</span>.  Understanding how this is "
"done requires one more\n"
" design concept, accumulators, the concern of the final part of this book.</"
"p>"
msgstr ""
"<p>Предполагая, что вы завершили эксперимент, теперь вы знаете, что\n"
"<span class=\"RktSym\">length</span> занимает время, пропорциональное "
"размеру данного \n"
"списка. “S” в <span class=\"RktSym\">searchS</span> означает “squared”(в "
"квадрате), \n"
"потому что время её работы составляет <span style=\"font-style: italic\">O</"
"span>(<span style=\"font-style: italic\">n</span><span style=\"vertical-"
"align: super; font-size: 80%\"><span style=\"font-style: italic\"></"
"span>2<span style=\"font-style: italic\"></span></span><span style=\"font-"
"style: italic\"></span>)<span style=\"font-style: italic\"></span>. \n"
"Но не спешите с выводом, что такого рода\n"
"<span class=\"refelem\"><span class=\"refcolumn\"><span class=\"refcontent"
"\">См. Раздел <a href=\"part_six.html#%28part._sec~3amore-accu-mc%29\" data-"
"pltdoc=\"x\">Представления данных с аккумуляторами</a>, чтобы узнать, как "
"другие языки отслеживают размер контейнера. \n"
"</span></span></span>  \n"
"рассуждения справедливы для каждого языка программирования, с которым вы "
"столкнетесь.\n"
"Многие работают с контейнерами иначе, чем <span class=\"stt\">*SL</span>. "
"Понимание того, \n"
"как это делается, требует еще одной концепции разработки - аккумуляторов, о "
"которых мы\n"
"расскажем в заключительной части этой книги.\n"
"</p>"

#: in_1/i5-6.html:881
msgid ""
"<h3><a name=\"(part._i5-6-fake)\"></a></h3><div class=\"navsetbottom\"><span "
"class=\"navleft\"><div class=\"nosearchform\"></div>&nbsp;&nbsp;</span><span "
"class=\"navright\">&nbsp;&nbsp;<a href=\"part_five.html\" title=\"backward "
"to &quot;V Generative Recursion&quot;\" data-pltdoc=\"x\">← prev</a>&nbsp;"
"&nbsp;<a href=\"index.html\" title=\"up to &quot;How to Design Programs, "
"Second Edition&quot;\" data-pltdoc=\"x\">up</a>&nbsp;&nbsp;<a href="
"\"part_six.html\" title=\"forward to &quot;VI Accumulators&quot;\" data-"
"pltdoc=\"x\">next →</a></span>&nbsp;</div></div></div><div id="
"\"contextindicator\">&nbsp;</div></body></html>"
msgstr ""
